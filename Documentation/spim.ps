%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: spim.dvi
%%Pages: 25
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips -D 300 spim.dvi
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1997.07.09:1716
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (spim.dvi)
@start /Fa 1 122 df<1338137CA81338A7007C137CB512FEA3387C387C00001300A513
7CB3A41338AD173D7CAE20>121 D E /Fb 2 7 df<007FB81280B912C0A26C1780320479
9641>0 D<15301578B3A6007FB812F8B912FCA26C17F8C80078C8FCB3A3007FB812F8B9
12FCA26C17F836367BB641>6 D E /Fc 4 116 df<EB0380497EA5EB1FF0EBFFFE0003EB
FF804814C0001F14E09038E7DFF0393F87C7F8387E07C3007C13C100FCEBC0FC12F814C1
A300FCEBC0F800FE1470007F14001387EA3FFF7E6C13F86C13FE6CEBFF80C614C0010F13
E06D13F014CFECC3F814C10038EBC0FC127C00FE147CA412FC00FE14F8007E13C1007FEB
C3F0383F87C79038F7FFE06CB512C06C1480000314006C13FC38003FE0EB07C0A56D5A1E
3A7CB327>36 D<EB0FF0EB7FFE48B512804814C0000F14F0EBF81F391FE007F8393F8001
FC90C7FC4814FE007E147EA56C14FCEB8001391FC003F8390FE007F03907FC3FE00001B5
128039007FFE006D5A90B5FC000314C0390FF00FF0391FC003F8393F8001FC90C7FC007E
147EA248143FA6007E147EA2007F14FE393F8001FC391FE007F8EBF81F6CB512F06C14E0
0001148039007FFE00EB0FF020307DAE27>56 D<387FE0FFD8FFF313C090B512F0816C80
0003EB81FE49C67E49EB3F8049131F16C049130FA216E01507A6150F16C07F151F6DEB3F
80157F6DEBFF009038FF83FEECFFFC5D5D01F313C0D9F0FEC7FC91C8FCAC387FFF80B57E
A36C5B23317F9F27>112 D<9038FFF3800007EBFFC0121F5A5AEB803F38FC000F5AA2EC
07806C90C7FCEA7F8013FC383FFFF06C13FC000713FF00011480D8000F13C09038003FE0
14070078EB03F000FC1301A27E14036CEB07E0EBE01F90B512C01580150000FB13FC3870
7FF01C207B9F27>115 D E /Fd 7 119 df<EB01C0497EA6EB0FFC90387FFF8048B512E0
0007804880391FFBEFFC393FC3E1FE903803E07F007E80127C00FC158012F8157FA300FC
EC3F00A2007E91C7FC127FEA3FC313FBEA1FFF6C13FC6C13FF000114C06C6C7F011F13F8
01037F14E7ECE1FEECE07F81001880007E1580150F12FFA312FE151F1600007E5C007F14
3ED83F8313FE9038C3E1FC391FFBEFF86CB55A6C5C6C5CC691C7FCEB1FF8EB03E0A66D5A
21417BB92C>36 D<EB03F8EB0FFE90383FFF80497F90B57E3901FE0FF03903F803F84848
6C7EEBE0004848137EA248487FA248C7EA1F80A2003E140F007E15C0A3007C140700FC15
E0AC6C140F007E15C0A46CEC1F80A36C6CEB3F00A26C6C137E6D13FE00075CEBF0016C6C
485A3901FE0FF06CB55A6D5B6D5BD90FFEC7FCEB03F823357CB32C>48
D<1307497EA2131FA2133F137F13FF5A1207127FB5FC13DF139FEA7C1F1200B3AE007FB5
12E0B612F0A36C14E01C3477B32C>I<EB0FF890387FFF8048B512E00007804814FC391F
F80FFE393FE001FF903880007F48C7EA3F80007E141F00FE15C0150F6C15E01507A3127E
123CC8FCA2150F16C0151F1680153F16005D15FE4A5A14034A5A4A5A4A5A4A5AECFF8049
48C7FC495A495A495AEB3FE0EB7F8049C8FC485A4848EB03C04848EB07E0EA1FE0485A48
B6FCB7FCA36C15C023347CB32C>I<3801FFF0000713FE001F6D7E15E048809038C01FF8
1407EC01FC381F80000006C77EC8127EA3ECFFFE131F90B5FC1203120F48EB807E383FF8
00EA7FC090C7FC12FE5AA47E007F14FEEB8003383FE01F6CB612FC6C15FE6C14BF0001EB
FE1F3A003FF007FC27247CA32C>97 D<EC0FF8EC3FFE91B5FC4914805B903807FC7F14F0
90390FE03F0014C092C7FCA6007FB512FEB7FCA36C5C26000FC0C7FCB3A8003FB512F048
80A36C5C21337DB22C>102 D<3A7FFF01FFFCB514FE148314016C15FC3A03E0000F80A2
6D131F00011500A26D5B0000143EA26D137E017C137CA2017E13FC013E5BA2EB3F01011F
5BA21483010F5BA214C701075BA214EF01035BA214FF6D90C7FCA26D5A147C27247EA32C
>118 D E /Fe 26 122 df<ED03E04B7EA24B7EA34B7EA24B7EA34B7EA292B57EA34A80
15F302038015E1A202078015C0020F80ED807FA2021F80ED003F4A80023E131FA2027E80
027C7F02FC814A7FA20101824A7F49B77EA3498202C0C7FC010F824A147FA2011F8291C8
123F4982013E151FA2017E82017C8101FE83B500F80107B61280A4413A7DB948>65
D<DB3FFCEB01C00203B5EAC003021FECF00791B6EAFC0F01039039FC00FF3F4901C0EB1F
FFD91FFEC77E49481403D97FF080494880485B48177F4849153F4890C9FC181F485A180F
123F5B1807127FA24993C7FC12FFAD127F7FF003C0123FA27F001F1707A26C6C1780180F
6C6D16006C6D5D6C173E6C6D157ED97FF85D6D6C4A5A6DB44A5A010701C0EB0FE06D01FC
EBFF80010090B548C7FC021F14F8020314E09126003FFEC8FC3A3B7BB945>67
D<B87E17F817FF18C028007FF8000713F09338007FF8EF1FFE717E050313807113C0A271
13E0F07FF0A2F03FF8A219FC181FA219FEA419FFAC19FEA419FC183FA219F8187F19F0F0
FFE0A24D13C04D13804D1300EF1FFEEF7FFC933807FFF0B912C095C7FC17FC178040397D
B849>I<B912C0A43A007FF800039338007FE0171F170F1707A21703A21701A318F0EE78
00A41800A216F8A21501150791B5FCA4ECF80715011500A21678A693C8FCADB7FCA43439
7DB83C>70 D<B500FC0203B512F0A28080C66C6D90390003F0006F6E5A81017B7F137981
01787F6E7E6E7E6E7F6E7FA26E7F6E7F6E7F6E7F6F7E153F826F13806F13C06F13E06F13
F06F13F88117FCEE7FFEEE3FFF7013817013C17013E18218F17013F97013FDEF7FFF8383
A28383838383187FA2183F181F01FC160FB500FC150718031801A244397DB84B>78
D<B712FCEEFFE017FC17FF28007FF8000F13C004017F707F717E717EA2717EA284A760A2
4D5A604D5A4D5A04035B041F90C8FC91B612FC17E0839139F8003FFCEE0FFF707F707F82
84A2707FA584A51A601AF084177F1901DD3FFE13E0B600FC011F130394390FFF87C071EB
FF8005011400CBEA1FFC443A7DB848>82 D<D907FF130E013FEBE01E90B5EAF83E0003EC
FE7E3A07FC01FFFE390FF0001F4848130F48481303491301007F140090C8FC167E5A163E
A27F161E7F7F6D91C7FC13FC387FFFE014FEECFFF06C14FE6F7E6C816C15F06C816C81C6
81133F010F801301D9000F1480EC007F030F13C01503818100F0157FA3163FA27E17807E
167F6C16007E6D14FE01E0495A01F813039039FF801FF800FC90B512E0D8F83F5CD8F007
49C7FC39E0007FF02A3B7BB935>I<B600FC011FB512C0A426007FF8C8381FC000725AB3
B3181F013F94C7FC8060011F163E6D6C157E187C6D6C15FC6D6D495A6D6DEB07F06D01F0
EB1FE0DA7FFEEBFFC0021FB6C8FC02075C020014F0030F1380423A7DB849>85
D<EB3FFE0003B512E0000F14F8391FF00FFE003FEB03FF6D6C7F6E7FA26F7EA26C5A6C5A
EA0380C8FCA2EC3FFF010FB5FC137F3901FFF87F00071380380FFE00EA3FF85B485A12FF
5BA415FF6D5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F0003EBF80F39003FE003
2A257DA42E>97 D<13FFB5FCA412077EAF4AB47E020F13F0023F13FC9138FE03FFDAF000
13804AEB7FC00280EB3FE091C713F0EE1FF8A217FC160FA217FEAA17FCA3EE1FF8A217F0
6E133F6EEB7FE06E14C0903AFDF001FF80903AF8FC07FE009039F03FFFF8D9E00F13E0D9
C00390C7FC2F3A7EB935>I<903801FFC0010F13FC017F13FFD9FF8013802603FE0013C0
48485AEA0FF8121F13F0123F6E13804848EB7F00151C92C7FC12FFA9127FA27F123FED01
E06C7E15036C6CEB07C06C6C14806C6C131FC69038C07E006DB45A010F13F00101138023
257DA42A>I<EE7F80ED7FFFA4150381AF903801FF81010F13F1013F13FD9038FFC07F00
03EB001FD807FC1307000F8048487F5B123FA2485AA312FFAA127FA27F123FA26C6C5B00
0F5C6C6C5B6C6C4913C02701FF80FD13FE39007FFFF9011F13E1010313012F3A7DB935>
I<903803FF80011F13F0017F13FC3901FF83FE3A03FE007F804848133F484814C0001FEC
1FE05B003FEC0FF0A2485A16F8150712FFA290B6FCA301E0C8FCA4127FA36C7E1678121F
6C6C14F86D14F000071403D801FFEB0FE06C9038C07FC06DB51200010F13FC010113E025
257DA42C>I<161FD907FEEBFFC090387FFFE348B6EAEFE02607FE07138F260FF801131F
48486C138F003F15CF4990387FC7C0EEC000007F81A6003F5DA26D13FF001F5D6C6C4890
C7FC3907FE07FE48B512F86D13E0261E07FEC8FC90CAFCA2123E123F7F6C7E90B512F8ED
FF8016E06C15F86C816C815A001F81393FC0000F48C8138048157F5A163FA36C157F6C16
006D5C6C6C495AD81FF0EB07FCD807FEEB3FF00001B612C06C6C91C7FC010713F02B377D
A530>103 D<EA01F0EA07FC487EA2487EA56C5AA26C5AEA01F0C8FCA913FF127FA41207
7EB3A9B512F8A4153B7DBA1B>105 D<13FFB5FCA412077EB3B3ACB512FCA4163A7DB91B>
108 D<01FED97FE0EB0FFC00FF902601FFFC90383FFF80020701FF90B512E0DA1F819039
83F03FF0DA3C00903887801F000749DACF007F00034914DE6D48D97FFC6D7E4A5CA24A5C
A291C75BB3A3B5D8FC1FB50083B512F0A44C257DA451>I<01FEEB7FC000FF903803FFF8
020F13FE91381F03FFDA3C011380000713780003497E6D4814C05CA25CA291C7FCB3A3B5
D8FC3F13FFA430257DA435>I<903801FFC0010F13F8017F13FFD9FF807F3A03FE003FE0
48486D7E48486D7E48486D7EA2003F81491303007F81A300FF1680A9007F1600A3003F5D
6D1307001F5DA26C6C495A6C6C495A6C6C495A6C6C6CB45A6C6CB5C7FC011F13FC010113
C029257DA430>I<9039FF01FF80B5000F13F0023F13FC9138FE07FFDAF0011380000349
6C13C00280EB7FE091C713F0EE3FF8A2EE1FFCA3EE0FFEAA17FC161FA217F8163F17F06E
137F6E14E06EEBFFC0DAF00313809139FC07FE0091383FFFF8020F13E0020390C7FC91C9
FCACB512FCA42F357EA435>I<9038FE03F000FFEB0FFEEC3FFF91387C7F809138F8FFC0
00075B6C6C5A5CA29138807F80ED3F00150C92C7FC91C8FCB3A2B512FEA422257EA427>
114 D<90383FF0383903FFFEF8000F13FF381FC00F383F0003007E1301007C130012FC15
787E7E6D130013FCEBFFE06C13FCECFF806C14C06C14F06C14F81203C614FC131F903800
7FFE140700F0130114007E157E7E157C6C14FC6C14F8EB80019038F007F090B512C000F8
140038E01FF81F257DA426>I<130FA55BA45BA25B5BA25A1207001FEBFFE0B6FCA30003
90C7FCB21578A815F86CEB80F014816CEBC3E090383FFFC06D1380903803FE001D357EB4
25>I<01FFEC3FC0B5EB3FFFA4000714016C80B3A35DA25DA26C5C6E4813E06CD9C03E13
FF90387FFFFC011F13F00103138030257DA435>I<B539F001FFF8A4000390C7EA3F0016
1E6E133E6C153C6E137C6C15786E13F8017F5CECF001013F5C14F8011F495AA2ECFC0701
0F5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E5A
A22D257EA432>I<B539F001FFF8A4000390C7EA3F00161E6E133E6C153C6E137C6C1578
6E13F8017F5CECF001013F5C14F8011F495AA2ECFC07010F5CECFE0F010791C7FC6E5A6D
131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E5AA292C8FCA25C141E003F133E38
7F803C38FFC07C147814F8EBC1F0EBC3E06C485A387D1F80D83FFFC9FCEA1FFCEA07F02D
357EA432>121 D E /Ff 3 123 df<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A7989
19>58 D<D801F0EB0FF0D807FCEB3FFED8061FEBF01F000E903903C00F80271C0F87007F
0018018E1307003801DC80003013F85C38701FE012605CA200E049130F013F5D000090C7
FCA2161F495D137E163F94C7FC13FE495C167EA200019238FE01804914FCA20301130300
0303F813005B5FEEF0060007160E495D17181738000F913800F8F049EC7FC0D80380021F
C7FC31297EA737>110 D<D901F0130CD907FC131C496C1338497E49EB80704914E09039
7C0FE3C09038F001FF9039E0003F8049EB07000001140E6C485B90C75A5D5D4A5A4A5A4A
C7FC140E143C14705C495A495A49C8FC130E4914C05B4913015B4848EB038048481307D8
07F0EB0F00D80FFE5B391F0FC07E391C07FFFC486C5B00705CD860015BD8E00013804801
3EC7FC26297CA72A>122 D E /Fg 1 111 df<3907C007E0391FE03FF83918F8783E3938
79E01E39307B801F38707F00126013FEEAE0FC12C05B00815C0001143E5BA20003147E15
7C5B15FC0007ECF8081618EBC00115F0000F1538913803E0300180147016E0001F010113
C015E390C7EAFF00000E143E251F7E9D2B>110 D E /Fh 34 122
df<041E143C043F147EA34C14FE047E5CA204FE13014C5CA3030114034C5CA203031407
4C5CA20307140F4C5CA3030F141F4C5CA2031F143F4C91C8FC003FBBFC481A80BC12C0A3
6C1A80C827FC0001F8C8FCA3020114034B5CA3020314074B5CA40207140F4B5CA3007FBB
1280BC12C0A36C1A806C1A00C7003FC7007EC9FC4A14FE027E5CA302FE13014A5CA20101
14034A5CA2010314074A5CA30107140F4A5CA2010F141F4A5CA3011F143F4A91CAFCA36D
C7121E4A517ABE57>35 D<B612E0A91B097F9823>45 D<EA0FC0EA1FE0EA3FF0EA7FF8EA
FFFCA6EA7FF8EA3FF0EA1FE0EA0FC00E0E798D1D>I<140F5C147F495A130F48B5FCB6FC
A213F7EAFE071200B3B3AAB712F0A4243C78BB34>49 D<903803FF80013F13F890B512FE
00036E7E2607FC0713E0260FE0017F261F80007F48C76C7ED87FC0133F6D80486C6D7E7F
811780A46C5A6C5A6C5A0007C7FCC814005DA25E153F5E4B5A5E4B5A5E4A5B4A90C7FC5D
4A5AEC0FF04A5A4A5A4AC8FC02FEEB0780495A495A02E0EB0F00495A495A49C7FC013E5C
5B90B7FC485D5A5A5A5A5A5AB75AA4293C7BBB34>I<EA0FC0EA1FE0EA3FF0EA7FF8EAFF
FCA6EA7FF8EA3FF0EA1FE0EA0FC0C7FCACEA0FC0EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8
EA3FF0EA1FE0EA0FC00E2879A71D>58 D<B812F8EFFF8018F018FC26003FFCC7EA3FFEEF
0FFF7113807113C019E08319F08319F8A719F05FA24D13E019C04D13804D13004D5AEFFF
F891B712E095C7FC18F002FCC7EA3FFE943807FF807113C07113E07113F0F07FF819FC18
3F19FEA219FFA48460A319FEA2187F19FCF0FFF85F4D13F04D13E0053F13C0BA120018FC
18F095C7FC403E7DBD4A>66 D<B71280A426003FFEC7FCB3B3B2B71280A4213E7DBD28>
73 D<003FB912FCA4903BFC003FFE003F01E01607D87F80EE01FE90C71500007E187EA2
007C183EA20078181EA548180FA5C81600B3B1010FB712F8A4403D7CBC49>84
D<B6D8FC03B600F090387FFFFEA4C601F8C7000301F0C8EA7F006E6E173E017F1B3C856E
6E177C013F7115786E1AF86D047F5E856F18016D636F91B5FC6D505A866FD901EF15076D
630503806F02C7150F6D98C7FC6F0107806D0483151E866FD90F01153E027F193C051F80
6FD91E00157C023F7113786F013E16F86E023C017F5C057C80DC8078013F13016E61DCC0
F814FF6E4A6D495A1B83DCE1E06D13876E6104E316C7DCF3C06D13CF6E96C8FC04FF16EF
6E4A6D13FEA294C77E6F5FA24C80033F5FA26F486F5AA24C153F030F5FA26F486F5AA24C
150F03035F4C1507673F7EBD6C>87 D<007FB6013FB512F0A4D8003F01800100EBC0006D
6D023FC7FC6D6D147E18FE6D6D5C6D6D495A6D4B5A6F13076D6D5C6E6C495A4D5A6EEB80
3F6E01C090C8FC6E147E705A6E13F16EEBF9F86EEBFBF0EEFFE0806F5B5F816F7F81836F
7F81834B7F4B7F5D83DB3F3F7FED7E1F03FE804B6C7F4A486C7F4A487E0207814B6C7F4A
487E4A4880023F6E7E92C76C7F027E804A8201016F7F4A6E7F495A49486E7F010F6F7F4A
80D97FF082B600C0017F90B5FCA4483E7DBD4F>I<90381FFFC048B512FC4814FF2607F8
0313C0486CC66C7E486C6D7E826F7EA26F7EA26C5A6C5AEA01E0C8FCA2EC7FFF0107B5FC
133F3901FFFC0F4813E0000F1380381FFE00485A5B485AA2485AA4151F7F007F143F6D13
7B6C6C9038F3FF80271FFF07E313FE0007EBFFC1000114803A001FFC003F2F287DA733>
97 D<13FFB5FCA412077EB1EDFFC0020713FC021F13FFDA7F8113C09139FC003FF002F0
6D7E4A6D7E4A6D7E4A80821880A27013C0A318E0AA18C0A25E1880A218004C5A6E5C6E49
5A6E495AD9FEFCEB7FE0903AFC7F03FFC0D9F81FB5C7FC496C13FCD9E00113C0333F7DBE
3A>I<ECFFFC0107EBFFC0013F14E090397FF00FF03A01FF801FF8489038003FFC485A48
5A121F5B123FED1FF8007FEC0FF049EB03C092C7FC12FFAA127FA27F123F161E6C7E163E
6C6C143C0007157C6C6C14F86C90388003F03A007FF01FE06DB512C001071400010013F0
27287DA72E>I<EE07F8ED07FFA4ED003F161FB1EC7FF0903807FFFE011FEBFF9F90397F
F81FDF9039FFC003FF48EB00014848EB007F485A000F153F485A123FA2127F5BA212FFAA
127FA36C7EA2121F6D147F120F6C6C14FF6C6C13036C6D487F3C007FF03FBFFFE0011FB5
123F010713FC9038007FE0333F7DBE3A>I<ECFFF0010F13FE013F6D7E90397FE07FE03A
01FF801FF04890380007F848488048481303001F81491301003F81A248487F1780A212FF
A290B7FCA301F0C9FCA5127FA27F123FEE0780121F6C6C140F17006C6C5C6C6C147EC690
38C001FC90397FF00FF8011FB512E0010714809026007FF8C7FC29287DA730>I<EC0FFC
91B51280010314C090390FFE1FE090391FF03FF0D93FE013F890387FC07FEBFF80A34813
00ED3FF0ED1FE0ED0FC092C7FCA9B612E0A400010180C7FCB3AE007FEBFF80A4253F7DBE
20>I<EE07F0903A03FF803FF8013F9038F87FFC90B6EAFCFE48018313E14848C613C148
48137F4848EB3FE1001FEDF0FC49011F1378003FEDF800A8001F5D6D133F000F5D6C6C49
5A6C6C495AD9FF8390C7FC48EBFFFE01BF13F8D80F83138090CAFCA27F121F7FEA0FF090
B6FC16F016FC6C15FF17806C16C06C16E012074816F0391FE0000348489038003FF84848
140F48C8FC1607A46D140F007F16F06D141F003F16E0D81FF0EC7FC0D80FFC903801FF80
3B03FF800FFE006C90B55AD8003F14E0010349C7FC2F3C7DA834>I<13FFB5FCA412077E
B1ED3FF892B5FC020380DA0FE07F91391F807FE0DA3E007F0278133F147002F0805C5CA3
5CB3A5B5D8FE0FB512E0A4333F7CBE3A>I<EA01F8487E487E487E481380A66C13006C5A
6C5A6C5AC8FCAA13FFB5FCA412077EB3ACB512F8A415407CBF1D>I<13FFB5FCA412077E
B1923803FFFEA4030013804CC7FC4B5AED03F04B5AED1FC04B5A037EC8FC5DEC03F8EC07
E04A7E4A7EEC7FFC14FF818102E77F02837F14016E7F826F7E6F7E151F6F7E826F7F6F7F
816F7F83B5D8FC07EBFFC0A4323F7DBE37>107 D<13FFB5FCA412077EB3B3B1B512FCA4
163F7CBE1D>I<01FFD91FFCECFFE0B590B5010713F80203DAC01F13FE913C07F07FE03F
83FF91291F803FF0FC017F0007D93E00D9F9F0806C013C011F497E4AECFBC04ADAFF8080
4A92C7FC4A5CA34A5CB3A5B5D8FE07B5D8F03FEBFF80A451287CA758>I<01FFEB3FF8B5
90B5FC020380DA0FE07F91391F807FE00007D93E007F6C0178133F147002F0805C5CA35C
B3A5B5D8FE0FB512E0A433287CA73A>I<EC7FF00107B5FC011F14C090397FE03FF03A01
FF800FFC3A03FE0003FE48486D7E000F1680497F001F16C0003F16E049147F007F16F0A4
00FF16F8A9007F16F0A3003F16E06D14FF001F16C0A26C6C491380000716006C6C495A3A
01FF800FFC3A007FE03FF06DB55A010791C7FC9038007FF02D287DA734>I<01FFEBFFC0
B5000713FC021F13FFDA7F8113C09139FC007FF0000301F06D7E4A6D7E4A6D7E4A6D7EA2
18808218C0A28218E0AA4C13C0A318805E18004C5A6E5C6E495A6E495A02FCEBFFE0DAFF
035B029FB5C7FC028F13FC028113C00280C9FCAEB512FEA4333A7DA73A>I<DA7FF01338
902607FFFC1378011F01FF13F890397FF81F819039FFE007C34890388003E74890380001
FF48487F000F157F485A003F153F5B127F161FA2485AAA127F7FA2123F6D143F121F167F
6C6C14FF6C6C5B6C6D5A6CEBC00F3A007FF03FBF90391FFFFE3F010713FC9038007FE091
C7FCAE030FB512E0A4333A7DA737>I<3901FE01FE00FF903807FF804A13E091381F0FF0
EC3C1F00079038783FF8000313F014E013FF14C0ED1FF09138800FE0ED07C092C7FCA291
C8FCB3A3B6FCA425287DA72B>I<90383FFC1E48B512FE1207380FF007381F800048C712
7E007E143EA200FE141EA27E7F01E090C7FC13FF14FC6CEBFF8015E06C14F86C806C806C
8012016C6C14801307D9001F13C014010070EB007F00F0143FA26C141FA26C15807EED3F
006C7E6D13FE9038F803FC90B55AD8F87F13E026E00FFEC7FC22287DA729>I<EB03C0A5
1307A4130FA2131FA2133F137F13FF5A5A001FEBFFFEB6FCA30001EBC000B3A2150FA815
1F6CEBE01EA290387FF03C90383FF87C90381FFFF8010713F0010013C0203A7EB929>I<
D9FF80EB0FF8B5EB0FFFA40007EC007F6C153FB3A5167FA316FF6C5CED03DF6C9039C007
9FFC903B7FF01F1FFFE090383FFFFE010F13FC010013F033287CA73A>I<B500FC90381F
FFC0A4000301C0903803F8006CED01E06E13036C5E80017F4A5A80160F013F92C7FC6E5B
011F141E6E133E010F143C6E137C6D1478ED80F86D5C15C16D5C15E16DEBE3C015F315F7
6EB45AA26E90C8FCA26E5AA26E5AA26E5AA26E5AA26E5A32287EA737>I<B53CFC3FFFFC
01FFFEA40003D98000903980000FC071EB07806C6D017FEC0F00836E5E6C181E6E6E133E
017F02FF143C836E48157C013FDAEFFC1378DAFC0315F8011F02C75C83DAFE071401010F
DA83FF5BDAFF0F14036D02015C038F14836DD99E00EB878018C703FE14CF6D49D97FEFC7
FC18FF6D496D5AA36E486D5AA26E486D5AA36E486D5AA26E486D5AA247287EA74C>I<B5
00FC90381FFFC0A4000301C0903803F8006CED01E06E13036C5E80017F4A5A80160F013F
92C7FC6E5B011F141E6E133E010F143C6E137C6D1478ED80F86D5C15C16D5C15E16DEBE3
C015F315F76EB45AA26E90C8FCA26E5AA26E5AA26E5AA26E5AA26E5AA214035D1407000E
5C383F800FD87FC090C9FC486C5A141E143E5C14786C485A13C3383F0FC06CB45A6C48CA
FCEA03F8323A7EA737>121 D E /Fi 2 122 df<007FB812FEBAFCA26C17FE3804799847
>0 D<EB0780497EAA6D5AA76DC7FCA4007EEB01F839FFE31FFC90B5FCA2EBE31F397E03
01F8000090C7FCA2497EA6497EB3A96D5AAF6DC7FCA61E547BBF29>121
D E /Fj 59 123 df<00101304007C131F00FEEB3F80A26C137FA248133FB2007E140000
7C7F003C131E00101304191C75B830>34 D<903903800380496C487E496C487EA8011F13
1F02C05BA4003FB612FE4881B81280A36C16006C5D3A003F803F80017F137F020090C7FC
A9495B495B003FB612FE4881B81280A36C16006C5D2701FC01FCC7FCA30003130301F85B
A86C486C5A6C486C5A29387DB730>I<1438147C14FCA5EB07FF013F13F090B512FC4880
0007ECFF804815C0381FFCFD3A3FE0FC3FE001C0EB1FF0D87F00130F007E140700FE15F8
4814031507A46CEC03F06CEC01E06C91C7FC13C0EA3FF013FEEA1FFF6C13FF6C14E00001
14F86C80011F13FF01031480010014C014FD9138FC3FE0151FED0FF01507003CEC03F812
7EB41401A45A6C14036C15F015070180EB0FE0D83FC0131F01F0EB7FC0D81FFEB512806C
B612006C5C6C5CC614F0013F13C0D907FEC7FCEB00FCA6147C143825477BBE30>I<141E
147F14FF5BEB03FEEB07FCEB0FF0EB1FE0EB3FC0EB7F80EBFF00485A5B12035B485A120F
5BA2485AA2123F5BA2127F90C7FCA412FEAD127FA47F123FA27F121FA26C7EA27F12076C
7E7F12017F6C7EEB7F80EB3FC0EB1FE0EB0FF0EB07FCEB03FEEB01FF7F147F141E184771
BE30>40 D<127812FE7E7F6C7E6C7EEA0FF06C7E6C7E6C7E6C7EEB7F80133F14C0131FEB
0FE014F01307A2EB03F8A214FC1301A214FE1300A4147FAD14FEA4130114FCA2130314F8
A2EB07F0A2130F14E0EB1FC0133F1480137FEBFF00485A485A485A485AEA3FE0485A485A
90C7FC5A1278184778BE30>I<141C143E147FAF003FB612FE4881B81280A36C16006C5D
C76CC8FCAF143E141C29297DAF30>43 D<EA03E0EA0FF0EA1FF813FCEA3FFEA213FFA27E
A27E1203EA007FA2137E13FEEA01FC1203EA07F8EA3FF0127FEAFFE0EA7F801300123C10
19708B30>I<003FB612E04815F0B712F8A36C15F06C15E025077B9E30>I<120FEA3FC0EA
7FE0A2EAFFF0A4EA7FE0A2EA3FC0EA0F000C0C6E8B30>I<16E0ED01F0ED03F8A2150716
F0150F16E0151F16C0153F1680A2157F16005D5D14015D14035D14075D140F5D141F5DA2
143F5D147F92C7FC5C5C13015C13035C13075C130F5C131F5CA2133F5C137F91C8FC5B5B
12015B12035B12075B120F5BA2121F5B123F5B127F90C9FC5A5AA2127C123825477BBE30
>I<14FE903807FFC0497F013F13F8497F90B57E48EB83FF4848C6138049137F4848EB3F
C04848EB1FE049130F001F15F0491307A24848EB03F8A290C712014815FCA400FEEC00FE
AD6C14016C15FCA36D1303003F15F8A26D1307001F15F0A26D130F6C6CEB1FE0A26C6CEB
3FC06C6CEB7F806D13FF2601FF8313006CEBFFFE6D5B6D5B010F13E06D5BD900FEC7FC27
3A7CB830>I<EB03C0497EA2130FA2131FA2133F137F13FF1203123FB5FCA213EF138FEA
7E0F1200B3B0003FB512F84814FCB612FEA26C14FC6C14F81F3977B830>I<EB07FC9038
3FFFC090B512F00003804814FE4880261FF80F1380263FE00113C09038C0007F4848EB3F
E090C7121FED0FF04814075A6C15F81503A3127E1218C8FCA2150716F0150F16E0151F16
C0153FED7F8015FF4A13005DEC07FC4A5A4A5A4A5A4A5A4A5A4990C7FC495A495AEB0FF0
EB3FE0495A495A4890C8FC4848EB01F04848EB03F8485AEA1FE048B6FCB7FCA37E6C15F0
25397BB830>I<EB03FF013F13E090B512F84814FE4880481580260FFE0113C09038F000
7F4848EB1FE0150F16F01507A26C5A6C5AC8FC150F16E0A2151FED3FC0157FEDFF800207
1300903807FFFE495B5D8115FF6D1480D9000113C09138003FE0ED1FF0ED07F8150316FC
150116FE1500A21218127EB4FCA2150116FC4814036C15F86C6C13076DEB1FF0D83FF013
3F3A1FFE01FFE06CB612C06C15806CECFE00C65C013F13F001031380273A7CB830>I<EC
03FC4A7E140F141FA2143F147F157E14FEA2EB01FCEB03F8A2EB07F0A2EB0FE0EB1FC0A2
EB3F80A2EB7F0013FEA2485A485AA2485AA2485A485AA2485AA248C7FC12FEB8FC1780A4
6C1600C8007EC7FCAA91387FFFFE91B6FCA46E5B29397DB830>I<000FB612804815C05A
A316800180C8FCAEEB83FF019F13C090B512F015FC8181D9FE0313809039F0007FC04913
3F0180EB1FE06CC7120F000E15F0C81207A216F81503A31218127EA2B4FC150716F04814
0F6C15E06C141F6DEB3FC06D137F3A3FE001FF80261FFC0F13006CB55A6C5C6C5C6C14E0
6C6C1380D90FFCC7FC25397BB730>I<127CB712FC16FEA416FC48C7EA0FF816F0ED1FE0
007CEC3FC0C8EA7F80EDFF00A24A5A4A5A5D14075D140F5D4A5AA24A5AA24AC7FCA25C5C
13015CA213035CA213075CA4495AA6131F5CA96D5A6DC8FC273A7CB830>55
D<49B4FC010F13E0013F13F890B57E4880488048010113803A0FFC007FC0D81FF0EB3FE0
4848131F49EB0FF048481307A290C7EA03F85A4815FC1501A416FEA37E7E6D130315076C
7E6C6C130F6D133FD80FFC13FF6CB6FC7E6C14FE6C14F9013FEBE1FC010F138190380060
011400ED03F8A2150716F0150F000F15E0486C131F486CEB3FC0157FEDFF804A1300EC07
FE391FF01FFC90B55A6C5C6C5C6C1480C649C7FCEB3FF0273A7CB830>57
D<120FEA3FC0EA7FE0A2EAFFF0A4EA7FE0A2EA3FC0EA0F00C7FCAF120FEA3FC0EA7FE0A2
EAFFF0A4EA7FE0A2EA3FC0EA0F000C276EA630>I<16E0ED03F0ED07F8151F153FEDFFF0
4A13E0020713C04A1300EC3FFEEC7FF849485A4913C0010F5B4948C7FCEB7FFCEBFFF000
035B481380001F90C8FCEA3FFC485AEAFFE05B7FEA7FF86C7E6CB4FC00077F6C13E0C67F
EB7FFCEB1FFE6D6C7E01037F6D13F06D6C7EEC3FFEEC0FFF6E13C0020113E06E13F0ED3F
F8151F1507ED03F0ED00E0252F7BB230>60 D<003FB612FE4881B81280A36C16006C5DCB
FCA7003FB612FE4881B81280A36C16006C5D29157DA530>I<1238127EB4FC13C07FEA7F
F86C7E6CB4FC00077F6C13E0C67FEB7FFCEB1FFE6D6C7E01037F6D13F06D6C7EEC3FFEEC
0FFF6E13C0020113E06E13F0ED3FF8151F153FEDFFF04A13E0020713C04A1300EC3FFEEC
7FF849485A4913C0010F5B4948C7FCEB7FFCEBFFF000035B481380001F90C8FCEA3FFC48
5AEAFFE05B90C9FC127E1238252F7BB230>I<EB1FFF90B512E0000314F8000F14FE4880
481580267FF80313C09038C0007F48C7EA1FE0A2150FA3007E141F003CEC3FC0C8127F91
3801FF805C020F1300EC1FFC4A5AEC7FE05D4A5A4990C7FC5C495A5CA213075CA86D5A90
C9FCA8EB01C0EB07F0A2497EA36D5AA2EB01C023387AB730>I<91387F803C903903FFF0
3E49EBFC7E011F13FE49EBFFFE5B9038FFE07F48EB801F3903FE000F484813075B484813
03A2484813015B123F491300A2127F90C8FC167C16005A5AAC7E7EA2167C6D14FE123FA2
7F121F6D13016C6C14FCA26C6CEB03F86D13076C6CEB0FF03901FF801F6C9038E07FE06D
B512C06D14806D1400010713FC6D13F09038007FC0273A7CB830>67
D<003FB712804816C0B8FCA27E7ED801FCC7121FA8EE0F8093C7FCA5153E157FA490B6FC
A69038FC007FA4153E92C8FCAE383FFFF8487FB5FCA27E6C5B2A387EB730>70
D<007FB6FCB71280A46C1500260007F0C7FCB3B3A8007FB6FCB71280A46C1500213879B7
30>73 D<D83FF8ECFFE0486C4913F0486C4913F8A2007F16F06C6C4913E0D807EFECBF00
A2EC800FA39039E7C01F3FA4ECE03F01E3133EA2ECF07EA201E1137CA2ECF8FCA201E013
F8A214FDEC7DF0A3147FEC3FE0A3EC1FC0A2EC070091C7FCADD83FFC903801FFE0486C49
13F0B54913F8A26C486D13F06C486D13E02D387FB730>77 D<D83FFC90381FFF80486C49
13C0B54913E0A26C6D6C13C06C6E1380D803F7903801F80014C0A3EBF3E0A314F013F1A2
14F8A213F014FCA2147C147EA2143E143FA2141FA21581A2140F15C1A2140715E1A21403
15F1A21401A215F91400A3157DA3153DD83FFF133F481380B5EAC01FA26CEB800F6C496C
5A2B387EB730>I<007FB512F0B612FE6F7E16E0826C813903F8003FED0FFCED03FE1501
6F7EA2821780163FA6167F17005EA24B5A1503ED0FFCED3FF890B6FC5E5E16804BC7FC15
F001F8C9FCB0387FFFC0B57EA46C5B29387EB730>80 D<003FB57E4814F0B612FC15FF6C
816C812603F8017F9138003FF0151F6F7E15071503821501A515035E1507150F4B5A153F
4AB45A90B65A5E93C7FC5D8182D9F8007FED3FE0151F150F821507A817F8EEF1FCA53A3F
FF8003FB4801C0EBFFF8B56C7E17F06C496C13E06C49EB7FC0C9EA1F002E397FB730>82
D<90390FF803C0D97FFF13E048B512C74814F74814FF5A381FF80F383FE001497E484813
7F90C7123F5A48141FA2150FA37EED07C06C91C7FC7F7FEA3FF0EA1FFEEBFFF06C13FF6C
14E0000114F86C80011F13FF01031480D9003F13C014019138007FE0151FED0FF0A2ED07
F8A2007C140312FEA56C140716F07F6DEB0FE06D131F01F8EB3FC001FF13FF91B5128016
0000FD5CD8FC7F13F8D8F81F5BD878011380253A7BB830>I<1238127C12FEA27E7E7F12
3F7F121F7F120FA27F12077F12037F12017F12007F7F80133F80131FA280130F80130780
1303801301801300808081143F81141FA281140F81140781140381140181140081811680
153FA216C0151F16E0150F16F0150716F81503A2ED01F0ED00E025477BBE30>92
D<003FB612E04815F0B712F8A36C15F06C15E025077B7D30>95 D<EB7FFC0003B57E000F
14E015F84880819038E007FF02017F390FC0007F6C48133FC87F151FA391B5FC130F137F
48B6FC12075A003FEB801FEBF800EA7FE0138048C7FC5AA46C143F6C6C137F6D13FF383F
F80F90B712C06C16E07E000314E7C6140390263FF80013C02B277CA630>97
D<EA3FFC487E12FFA2127F123F1200ABEC03FE91381FFF80027F13E090B612F882829138
FE07FFECF001DAC00013804AEB7FC091C7123FEE1FE05B160FA217F01607A7160F17E07F
161F17C06E133F6EEB7F806E13FFDAF00313009138FC0FFE91B55A5E495C6E5BD97E1F13
8090263C03FCC7FC2C3880B730>I<903801FFF8010F13FE013FEBFF805B48B612C05A48
EB803F380FFC00D81FF0EB1F8049EB0F00484890C7FCA2485A90C9FCA25A5AA77E7EA27F
6C6CEB07C06DEB0FE06C7E6D131FD80FFEEB3FC03907FFC0FF6C90B512806C15006C6C5B
6D5B010F13F00101138023277AA630>I<913801FFE04A7F5CA28080EC0007ABEB03FE90
381FFF87017F13E790B6FC5A5A481303390FFC007FD81FF0133F49131F4848130F5B007F
140790C7FCA25A5AA77E7E150F7F003F141F7F6D133F6C6C137F390FF801FFEBFE076CB7
12C06C16E06C02F713F06C6C13C7011F010713E0902607FC0313C02C387DB730>I<49B4
FC010F13E0013F13F84913FE48B6FC4815804813013A0FFC003FC001F0EB1FE04848130F
484814F0491307127F90C713F815035A90B6FCA516F048C9FC7E7EA27F6C6CEB01F0ED03
F86C7ED80FF81307D807FE130F3A03FF807FF06C90B512E06C15C06D1480011F14000107
13FC010013E025277CA630>I<EDFF80020713E0021F13F0147F91B512F85B1507EB03FC
9138F803F0903907F000C01600A7003FB612C04815E0B7FCA36C15C0260007F0C7FCB3A9
003FB512FE4880B71280A26C15006C5C25387DB730>I<16FE903A03FC03FF8090261FFF
8F13C04990B5FC90B712E05A48158F3A07FE07FE0FD9F801EB07C048486C6CC7FCA2497F
001F8149133FA56D137F000F92C7FC6D5BA26C6C485AEBFE0790B55A5D485C15C001DF5B
D9C3FCC8FC01C0C9FCA27F6C7E90B512F86C14FF16C0000F15F04881823A3FE0001FFED8
7F80EB01FF90C87E007E8100FE168048151FA46C153FA2007FED7F0001C0495AD83FF0EB
07FE6CB4EB7FFC6C90B55A6C5D000115C06C6C91C7FC011F13FC010313E02B3D7DA730>
I<EA3FFC487E12FFA2127F123F1200ABEC03FE91380FFFC0023F7F91B57E90B67E82ECFE
07ECF00102E07FECC0005C91C7FCA35BB33B3FFFF81FFFF8486D4813FCB500FE14FEA26C
01FC14FC6C496C13F82F3880B730>I<14E0EB03F8A2497EA36D5AA2EB00E091C8FCA938
1FFFF8487F5AA27E7EEA0001B3A9003FB612C04815E0B7FCA27E6C15C023397AB830>I<
EC01C0EC07F0A2EC0FF8A3EC07F0A2EC01C091C7FCA990B512F04814F8A47EEB0003B3B3
A4140715F0A2003C130F007EEB1FE0B4FCEC7FC090B5128015006C5B6C5B6C13F0000313
C01D4D7CB830>I<EA7FF8487EA4127F1200AB0203B512804A14C017E0A217C06E148091
39001FE0004B5A4B5A4BC7FC4A5A4A5AEC0FF84A5A4A5A4A5A4A5A01FD7F90B57E8114F7
ECE3F8ECC1FCEC81FEEC00FF497F496D7E6F7E826F7E15076F7E6F7E3B7FFFF81FFFE0B5
6C4813F017F8A217F06C496C13E02D387FB730>I<387FFFF8B57EA47EEA0001B3B3A800
7FB612F0B712F8A46C15F025387BB730>I<267FC0FC137E3BFFE7FF03FF8001EF01877F
90B500CF7F92B57E7E0007010F1387496CEB03F89039FC03FE0101F813FC01F013F8A301
E013F0B3A23C7FFE0FFF07FF80B548018F13C0A46C486C01071380322781A630>I<393F
FC03FE3A7FFE0FFFC000FF013F7F91B57E6CB67E6C81C6EBFE07ECF00102E07FECC0005C
91C7FCA35BB33B3FFFF81FFFF8486D4813FCB500FE14FEA26C01FC14FC6C496C13F82F27
80A630>I<49B4FC010F13E0013F13F890B512FE488048158048010113C03A0FFC007FE0
D81FF0EB1FF049130F4848EB07F8491303007F15FC90C71201A200FEEC00FEA86C14016C
15FCA26D13036C6CEB07F8A26C6CEB0FF06D131FD80FFCEB7FE03A07FF01FFC06C90B512
806C15006C5C013F13F8010F13E0010190C7FC27277CA630>I<393FFC03FE3A7FFE1FFF
8000FF017F13E090B612F86C816C81C69038FE07FFECF001DAC00013804AEB7FC091C712
3FEE1FE05B160FA217F01607A7160F17E07F161F17C06E133F6EEB7F806E13FFDAF00313
009138FC0FFE91B55A5E495C6E5B021F1380DA03FCC7FC91C9FCAE383FFFF8487FB57EA2
6C5B6C5B2C3B80A630>I<49B413F8010FEBE1FC013F13F190B512FD4814FF5A48138139
0FFC003F4848131F01E0130F48481307A24848130390C7FC15015A5AA77E7E15037F003F
14076D130F6C7E6D133FD80FFC137F3907FF01FF6C90B5FC7E6C14F9013F13F16D13C190
3803FE0190C7FCAE92B512F84A14FCA46E14F82E3B7DA630>I<3A3FFF800FF8489038C0
7FFFB500C1B5128014C36C01CF14C06C13DF3A001FFFFC3F15E09238801F809238000F00
02FC90C7FCA25C5CA25CA35CAF003FB512FC4880B7FCA26C5C6C5C2A277EA630>I<9038
3FFE1E48B512DF000714FF5A123FA2387FE00790C7FC00FE805AA36C143ED87F8090C7FC
13F0383FFFC06C13FF6C14C06C14F0000114FCD8001F7F01007F02031380EC007F007CEC
3FC000FE141F150F7EA26D131F7F6DEB7F809038F803FF90B612005D5D00FD5CD8F87F13
E026780FFEC7FC222779A630>I<EB0780497E131FA9003FB612E04815F0B7FCA36C15E0
26001FC0C7FCB216F8ED01FCA4150302E013F890380FF0079138F81FF06DB5FC16E06D14
C06D14006D6C5AEC1FF026327EB130>I<D83FFCEB3FFC486C497E00FF14FFA2007F147F
003F143F00001400B3A41501A215036D130F90387FC03F91B612F86D15FC17FE6D5B0107
01F813FC01019038C07FF82F2780A630>I<3B3FFFC07FFF80486DB512C0B515E0A26C16
C06C496C13803B01F80003F000A26D130700005DA26D130F017E5CA2017F131F6D5CA2EC
803F011F91C7FCA26E5A010F137EA2ECE0FE01075BA214F101035BA3903801FBF0A314FF
6D5BA36E5A6E5A2B277EA630>I<3B3FFFC01FFFE0486D4813F0B515F8A26C16F06C496C
13E0D807E0C7EA3F00A26D5C0003157EA56D14FE00015DEC0F80EC1FC0EC3FE0A33A00FC
7FF1F8A2147DA2ECFDF9017C5C14F8A3017E13FBA290393FF07FE0A3ECE03FA2011F5C90
390F800F802D277FA630>I<3A3FFF81FFFC4801C37FB580A26C5D6C01815BC648C66CC7
FC137FEC80FE90383F81FC90381FC3F8EB0FE3ECE7F06DB45A6D5B7F6D5B92C8FC147E14
7F5C497F81903803F7E0EB07E790380FE3F0ECC1F890381F81FC90383F80FE90387F007E
017E137F01FE6D7E48486D7E267FFF80B5FCB500C1148014E3A214C16C0180140029277D
A630>I<3B3FFFC07FFF80486DB512C0B515E0A26C16C06C496C13803B01FC0003F000A2
000014076D5C137E150F017F5C7F151FD91F805BA214C0010F49C7FCA214E00107137EA2
EB03F0157C15FCEB01F85DA2EB00F9ECFDF0147D147FA26E5AA36E5AA35DA2143F92C8FC
A25C147EA2000F13FE381F81FCEA3FC1EBC7F8495A13FF5C6C5B6C90C9FC6C5AEA03F02B
3B7EA630>I<001FB612FC4815FE5AA316FC90C7EA0FF8ED1FF0ED3FE0ED7FC0EDFF8000
3E491300C7485A4A5A4A5A4A5A4A5A4A5A4A5A4990C7FC495A495A495A495A495A495A49
48133E4890C7127F485A485A485A485A485A48B7FCB8FCA46C15FE28277DA630>I
E /Fk 56 123 df<933807FF80043F13E09338FE00F8DB01F0133EDB07E0130E4B48131F
4C137F031F14FF4BC7FCA218FE157E1878180015FE5DA31401A25DA414030103B712F0A2
18E0903A0003F000070207140F4B14C0A3171F020F15805DA2173F1800141F5D5F177EA2
143F92C712FE5FA34A1301027EECF81CA3160302FEECF03C4A1538A21878187013014A01
0113F018E0933800F1C0EF7F804948EC1F0094C7FCA35C1307A2001E5B127F130F00FF5B
A249CAFC12FEEAF81EEA703CEA7878EA1FF0EA07C0385383BF33>12
D<EE07FC93393FFF87F09338FC07C7923A03F001E7E0DB07C013F792390F8007FF031F49
13C016005DA2037E1580EF039FEF001F183F4B1500A3600201157E5DA218FE6014035D01
03B7FC60A2903A0007F000014B130360A31707020F5D5DA2170F60141F5D171F60A2143F
92C7123F95C7FCA34A5C027EEC7E07A317FE02FE4A5A4A150EA2181E181C13014AEC7C3C
1838EF3C70EF1FE04948EC07C094C8FCA3495AA3001E5BEA7F0FA200FF5BA249CBFC12FE
EAF83EEA703CEA7878EA1FF0EA07C03C5383BF35>I<ED01801507ED0F00151C5D5D5D14
014A5A4A5A4AC7FC141E143E5C14785C1301495AA2495A5C130F49C8FCA2133EA25BA213
FC5B12015BA212035B1207A25B120FA25BA2121FA290C9FCA25AA2123EA2127EA2127CA6
5AAB1278A67EA47EA2120E120F7EA26C7EA26C7E6C7E1360215A73C325>40
D<14031580A2EC01C0EC00E0A21570A215781538153CA3151EA4151FA2150FA7151FA915
3FA2153EA3157EA2157CA215FCA215F8A21401A215F0A2140315E0A2140715C0A2EC0F80
A2141F15005C143EA25CA25CA2495A5C1303495A5C130F49C7FC131E5B137C5B5B485A48
5A485A48C8FC121E5A12705A5A205A7FC325>I<EA01E0EA07F8120FA2EA1FFCA4EA0FF8
EA0798EA001813381330A21370136013E013C01201EA0380EA07001206120E5A5A5A5A5A
0E1C7A891C>44 D<387FFFFEA3B5FCA21705799521>I<15031507150F151F151E153E15
7EEC01FEEC03FC1407141FEB01FF90380FFBF8EB1FC3EB0E07130015F0A2140FA215E0A2
141FA215C0A2143FA21580A2147FA21500A25CA25CA21301A25CA21303A25CA21307A25C
A2130FA25CA2131FA25CEB7FE0B612F0A215E0203D77BC2E>49 D<171C173C177CA217FC
A216011603A21607A24C7EA2161DA216391679167116E1A2ED01C1A2ED03811507160115
0EA2031C7FA24B7EA25D15F05D4A5AA24A5AA24AC7FC5C140E5C021FB6FC4A81A20270C7
127FA25C13015C495AA249C8FCA2130E131E131C133C5B01F882487ED807FEEC01FFB500
E0017FEBFF80A25C39417BC044>65 D<49B712C018F818FE903B0003FC0001FF9438007F
804BEC3FC0A2F01FE014074B15F0180FA2140F5D181FA2021F16E05D183F19C0023FED7F
804B14FF19004D5A027F4A5A92C7EA07F0EF1FE0EF7F804AD903FEC7FC92B512F017FE4A
C7EA3F800101ED1FE04A6E7E17078401036F7E5CA30107825CA3010F5E4A1407A260011F
150F5C4D5A60013F153F4A4A5A4D5A017F4A90C7FC4C5A91C7EA0FF849EC3FF0B812C094
C8FC16F83C3E7BBD40>I<9339FF8001C0030F13E0033F9038F803809239FF807E07913A
03FC001F0FDA0FF0EB071FDA1FC0ECBF00DA7F806DB4FC4AC77E495AD903F86E5A495A13
0F4948157E4948157C495A13FF91C9FC4848167812035B1207491670120FA2485A95C7FC
485AA3127F5BA312FF5BA490CCFCA2170FA2170EA2171E171C173C173817786C16706D15
F04C5A003F5E6D1403001F4B5A6D4AC8FC000F151E6C6C5C6C6C14F86C6C495A6C6CEB07
C090397FC03F8090261FFFFEC9FC010713F0010013803A4272BF41>I<49B712C018F818
FE903B0003FE0003FF9438007F804BEC1FC0F00FE0F007F014074BEC03F8F001FCA2140F
4BEC00FEA3141F4B15FFA3143F5DA3027F5D5DA219FE14FF92C81203A34917FC4A1507A2
19F813034A150F19F0A20107EE1FE05CF03FC0A2010FEE7F804A16006060011F4B5A4A4A
5A4D5AA2013F4B5A4AEC3FC04DC7FC017F15FEEE03FC4AEB0FF001FFEC7FE0B8128004FC
C8FC16E0403E7BBD45>I<49B812F8A390260003FEC7121F18074B14031801F000F01407
5DA3140F5D19E0A2141F4B1338A2EF7801023F027013C04B91C7FCA217F0027F5CED8001
1603160F91B65AA3ED001F49EC07805CA3010392C8FC5CF003804C13070107020E14005C
93C75A180E010F161E4A151C183CA2011F5E5C60A2013F15014A4A5A1707017F150F4D5A
4A147F01FF913807FF80B9FCA295C7FC3D3E7BBD3E>I<49B812F0A390260003FEC7123F
180F4B1403A2F001E014075DA3140F5D19C0A2141F5D1770EFF003023F02E013804B91C7
FCA21601027F5CED8003A2160702FFEB1F8092B5FCA349D9003FC8FC4A7F82A20103140E
5CA2161E0107141C5CA293C9FC130F5CA3131F5CA3133F5CA2137FA25C497EB612E0A33C
3E7BBD3B>I<DCFF8013E0030713F0033F9038FC01C09239FFC03E03913A03FC000F07DA
0FF0EB078F4A48903803DF80DA7F80EB01FF4AC8FC495A4948ED7F00495A495A49488149
48153E495A13FF91C9FC4848163C12035B1207491638120FA2485A95C7FC485AA3127F5B
A312FF5BA34BB512FE90C7FCA292C71380A295C7FCA25EA25FA216037E6D5DA2003F1507
7F001F5E6D140F6C6C141F0007153F6C6CEC7BF0D801FE14F16C6CEB03E090393FE01F80
6DB5EA0060010701F890C8FC9038007FC03B4273BF46>I<49B648B6FC495DA2D9000390
C7000313004B5D4B5DA2180714074B5DA2180F140F4B5DA2181F141F4B5DA2183F143F4B
5DA2187F147F4B5DA218FF91B8FC96C7FCA292C712015B4A5DA2170313034A5DA2170713
074A5DA2170F130F4A5DA2171F131F4A5DA2173F133F4A5DA2017F157FA24A5D496C4A7E
B66CB67EA3483E7BBD44>I<49B6FC5BA2D9000313005D5DA314075DA3140F5DA3141F5D
A3143F5DA3147F5DA314FF92C7FCA35B5CA313035CA313075CA3130F5CA3131F5CA3133F
5CA2137FA25C497EB67EA3283E7BBD23>I<4AB61280A2180091C713C0167F5FA216FF94
C7FCA35D5EA315035EA315075EA3150F5EA3151F5EA3153F5EA3157FA25EA215FFA293C8
FCA25CA25DA2380F8003EA3FC0D87FE05BA21407D8FFC05B140F01805B49485A12FC0070
495A4A5A6C01FEC9FC383C01FC380F07F03807FFC0C648CAFC314079BD30>I<49B612C0
A25FD9000390C8FC5D5DA314075DA3140F5DA3141F5DA3143F5DA3147F5DA314FF92C9FC
A35B5CA313035C18C0EF01E0010716C05C17031880130F4A140718005F131F4A141EA217
3E013F5D4A14FC1601017F4A5A16074A131F01FFECFFF0B8FCA25F333E7BBD39>76
D<49B5933807FFFC496062D90003F0FC00505ADBBF805E1A771AEF1407033F923801CFE0
A2F1039F020FEE071F020E606F6C140E1A3F021E161C021C04385BA2F1707F143C023804
E090C7FCF001C0629126780FE0495A02705FF00700F00E0114F002E0031C5BA2F0380301
0116704A6C6C5D18E019070103ED01C00280DA03805BA2943807000F13070200020E5C5F
DB03F8141F495D010E4B5CA24D133F131E011CDAF9C05CEEFB80197F013C6DB4C7FC0138
95C8FC5E01784A5C13F8486C4A5CD807FE4C7EB500F04948B512FE16E01500563E7BBD52
>I<902601FFFE020FB5FC496D5CA2D900016D010013C04AEE3F00193E70141C193CEC07
BFDB3FE01438151F1978020F7FDA0E0F15708219F0EC1E07021C6D5CA203031401023C7F
DA38015DA2701303EC7800027002805BA2047F130702F014C04A013F91C7FCA2715A0101
141F4AECF00EA2040F131E010315F84A151C1607EFFC3C0107140391C7143817FE040113
784915FF010E16708218F0131E011C6F5AA2173F133C01385E171F137813F8486C6F5AEA
07FEB500F01407A295C8FC483E7BBD44>I<EEFFC0030713F892383F80FE9238FC003FDA
03F0EB0F804A486D7EDA1F80804AC76C7E027E6E7E4A81494814004948811307495A4948
157F133F5C49C9FC4917805B1201485AA212075B000F17FFA25B121F190048485DA44848
4B5AA34D5AA25B4D5A12FF60171F60007F163F604D5AA24DC7FC5F003F15014C5A6D5D00
1F4B5A4C5A6C6C4A5A4C5A6C6C4AC8FC000315FC6C6C495A6C6CEB07E0017FEB1F809026
1FC07EC9FC903807FFF801001380394273BF46>I<49B77E18F018FC903B0003FE0003FE
EF00FF4BEC7F80F03FC00207151F19E05DA2020F16F0A25DA2141FF03FE05DA2023F16C0
187F4B1580A2027FEDFF00604B495A4D5A02FF4A5A4D5A92C7EA3FC04CB4C7FC4990B512
FC17E04ACAFCA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA25C
497EB67EA33C3E7BBD3E>I<49B612FCEFFF8018F0903B0003FE000FF8EF03FE4BEB00FF
8419800207ED3FC05DA219E0140F5DA3021FED7FC05DA2F0FF80143F4B15004D5A60027F
4A5A4B495A4D5AEF3F8002FF02FEC7FC92380007F892B512E01780499038000FE04A6D7E
707E707E0103814A130083A213075CA25E130F5C5F1603131F5CA3013F020714404A16E0
5F017F160119C04A01031303496C1680B6D8800113079438FE0F009338007E1ECAEA3FFC
EF07F03B407BBD42>82 D<92390FF001C0ED7FFE4AB5EA0380913907F80FC791390FC003
EF91391F8001FF4AC71300027E805C495A4948143EA2495AA2010F153C5CA3011F1538A3
8094C7FC80A214FC6DB4FC15F015FE6DEBFFC06D14F06D14FC6D80143F020F7F020180EC
001F150303007F167F163FA2161FA212075A5F120EA2001E153F94C7FCA2163E003E157E
167C003F15FC4B5A486C5C4B5A6D495AD87DE0EB1F80D8F8F849C8FC017F13FE39F03FFF
F8D8E00F13E048C690C9FC32427ABF33>I<48B9FCA25A903AFE001FF00101F89138E000
7FD807E0163E49013F141E5B48C75BA2001E147FA2001C4B131C123C003814FFA2007892
C7FC12704A153C00F01738485CC716001403A25DA21407A25DA2140FA25DA2141FA25DA2
143FA25DA2147FA25DA214FFA292C9FCA25BA25CA21303A25CEB0FFE003FB67E5AA2383D
71BC41>I<001FB500F090B512F0485DA226003FF0C7380FFC004AEC03F04A5D715A017F
1503A24A5DA201FF150795C7FC91C8FCA2485E170E5BA20003161E171C5BA20007163C17
385BA2000F167817705BA2001F16F05F5BA2003F1501A2495DA2007F1503A2495DA21607
94C8FC48C8FC5E160E161E6C151C163C5E5E5E6C6C13014B5A001F4A5A6C6C011FC9FC6D
133E6C6C13F83903FC07F0C6B512C0013F90CAFCEB07F83C406FBD44>I<B500FE91387F
FFE094B5FC19C00003018091380FFC0049C8EA07F000015F606095C7FC170EA25F173C17
386D5DA26C5E16015F4C5AA24CC8FC5E160E5E805E137F5E5EA24B5AA24B5A150793C9FC
ECC00EA2013F5B153C15385DA25D14C15DECC38014E302E7CAFCEB1FEF14EE14FCA25CA2
5CA25C5C130F5CA291CBFC130E3B406DBD44>I<277FFFFE01B500FC90B512E0B5FCA200
03902680000790C7380FFC006C90C701FCEC07F049725A04035EA26350C7FCA20407150E
A2040F5D1A3C041F153862163B6216734F5A6D14E303014B5A6C15C303034BC8FC1683DB
0703140E191E030E151C61031C7F61ED380161157003F04A5A15E002014B5A15C0DA0380
4AC9FC60DA0700140E60140E605C029C5D14B8D97FF85D5C715A5C4A5DA24A92CAFC5F91
C7FC705A137E5F137C5F137801705D53406EBD5B>I<91B690383FFFFC605E020101E001
0F13006E49EB07F84C6D5A19C06F6C495A96C7FC033F140E705B183C031F5C705B4D5A03
0F5C70485A4DC8FC0307130EEEFC1E5F03035BEEFE705F6F6C5A5FA26F90C9FC83A2707E
A216FF4B7F5DED079FEE1FF0150EED1C0F03387F1578EDF007DA01E07F15C09138038003
DA07007F140E021E13014A805C02707F4A81495A4948147F01078249C8FC013F6F7E496C
147F2603FFC049487EB500F8011FEBFFE0A261463E7CBD44>I<027FB612FEA3913AFFF8
0007FC03C014F892C7EA0FF0D901FC141F4AEC3FE04AEC7FC04A15800103EDFF004A5B4C
5A4948495A5F91C7485A49141F010E4A5A4C5A5F011E4AC7FC90C75A4B5A4B5A5E4B5A15
1F4B5A4B5A5E15FF4A90C8FC4A5A4A5A5D140F4A5A4A5A4A48130E4B131E02FF141C4990
C7FC495A4948143C4A1438010F1578495A49481470494814F05C01FF4A5A4890C7FC4848
140348481407494A5A000F151F4848143F4848ECFF804848130F90B7FCB8FC94C7FC373E
79BD38>90 D<147E49B47E903907C1C38090391F80EFC090383F00FF017E137F49148048
48133F485AA248481400120F5B001F5C157E485AA215FE007F5C90C7FCA21401485C5AA2
1403EDF0385AA21407EDE078020F1370127C021F13F0007E013F13E0003E137FECF3E126
1F01E313C03A0F8781E3803A03FF00FF00D800FC133E252977A72E>97
D<EB1FC0EA0FFF5CA2EA003FA291C7FCA25BA2137EA213FEA25BA21201A25BA21203A25B
147E3907F1FF809038F783E09038EF01F013FE390FF800F8A24913FC49137C485A157E5B
15FE123FA290C7FCA248130115FC127EA2140300FE14F85AA2EC07F0A215E048130F15C0
141F15800078EB3F00127C147E003C5B383E01F8381E03E06C485A6CB4C7FCEA01F81F40
76BE2A>I<EC1FE0ECFFF8903803F03E903807C00F90381F8007D93F001380017E131F49
137F485A485A000715005B000F147E484890C7FCA2485AA3127F90C9FCA35A5AA6481403
007E5C5D151E003E5C5D6C5CEC03E0390F800F802603E07EC7FC3801FFF838003FC02129
77A72A>I<EE3F80ED1FFF1700A2ED007FA2167EA216FEA25EA21501A25EA21503A25EA2
1507A25E147E903801FF8F903807C1CF90391F80EFC090383F00FF017E137F5B48486D5A
485AA2485A000F92C7FC5B001F5CA24848137EA215FE127F90C75AA214015A485CA21403
16384814F0A21407167891380FE070127C021F13F0007E013F5B003E137FECF3E1261F01
E35B3A0F8781E3802703FF00FFC7FCD800FC133E294077BE2E>I<EC3F80903801FFE090
3807E0F890381F803CEB3E0001FC131E485A485A12074848133E49133C121F4848137C15
F8EC03F0397F000FE0ECFF80B5EAFC0014C048C8FCA45AA61506150E151E007C143C1578
6C14F0EC01E06CEB07C0390F801F003807C0FC3801FFF038007F801F2976A72A>I<167C
4BB4FC923807C78092380F83C0ED1F87161FED3F3FA2157EA21780EE0E004BC7FCA41401
5DA414035DA30103B512F8A390260007E0C7FCA3140F5DA5141F5DA4143F92C8FCA45C14
7EA414FE5CA413015CA4495AA4495AA4495A121E127F5C12FF49C9FCA2EAFE1EEAF83C12
70EA7878EA3FE0EA0F802A5383BF1C>I<EC03F0EC0FFC91383E0E1C9138FC077E903901
F003FE1303903807E001D90FC013FCEB1F80A2EB3F004914F8137E01FE1303A2484814F0
A2150712034914E0A2150F12074914C0A2151FA216805B153F1203ED7F006D5BA200015B
0000495A9038F80F7E90387C1EFEEB1FF8903807E0FC90C7FC1401A25DA21403A25D001C
1307007F5C48130F5D4A5A4AC7FC48137E00F85B387C03F0381FFFC0D803FEC8FC273B7C
A72A>I<EB01FC13FF5CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C8
FCEC03F890387F0FFE91383E0F80D97E7813C0ECE007D9FFC013E014801400A2485A5BA2
5B0003140F16C05BA20007141F16805BA2000F143F16005B5D001F147EEDFE074913FCA2
003F0101130FEDF80E1300161E48ECF01CA2007E1538A200FE1570020013E048EC7FC000
38EC1F0028407ABE2E>I<1478EB01FCA21303A314F8EB00E01400AD137C48B4FC38038F
80EA0707000E13C0121E121CEA3C0F1238A2EA781F00701380A2EAF03F140012005B137E
13FE5BA212015BA212035B1438120713E0000F1378EBC070A214F0EB80E0A2EB81C01383
148038078700EA03FEEA00F8163E79BC1C>I<1507ED1FC0A2153FA31680ED0E0092C7FC
ADEC07C0EC3FF0EC78F8ECE07CEB01C01303EC807EEB0700A2010E13FE5D131E131CEB3C
01A201005BA21403A25DA21407A25DA2140FA25DA2141FA25DA2143FA292C7FCA25CA214
7EA214FEA25CA213015CA2121C387F03F012FF495A5C495A4848C8FCEAF83EEA707CEA3F
F0EA0FC0225083BC1C>I<EB01FC13FF5CA21303A25CA21307A25CA2130FA25CA2131FA2
5CA2133FA291C8FCED03E049EB0FF8ED3C3C017EEB707CEDE1FC9038FE01C1EC03839038
FC0703140E0001011C13F891383800E0494813001460000313E0EBF9C0EBF78001FEC8FC
1207EBFFE0EBE7F8EBE0FE000F137F6E7EEBC01F6E7E121F16701380A2003F15F0021F13
E001001380A248148116C0007EEB0F83168000FE14879138078F0048EB03FE0038EB00F8
26407ABE2A>I<EB07F0EA03FF14E0A2EA000FA214C0A2131FA21480A2133FA21400A25B
A2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123F
A290C7FCA25A1307127EA2EAFE0F130E12FCA2131E131CA2EA7C381378EA3C70EA1FE0EA
0780144079BE17>I<D801F0D93F80137F3D07FC01FFE003FFC03D0F3E07C1F80F83F03D
0E1F0F00FC1E01F8001E011C90387C3800001C49D97E707F003C01F05C0038157F4A5C26
783FC05C12704A91C7FC91C7127E00F003FE1301494A5CEA007EA20301140301FE5F495C
A203031407000160495C180F03075D0003051F13E0494A1480A2030FEC3F810007F001C0
495CA2031F91383E0380120F494AEC0700A2033F150E001FEF1E1C4991C7EA0FF80007C7
000EEC03E0432979A74A>I<D801F0EB3F803A07FC01FFE03A0F3E07C1F83A0E1F0F00FC
001E011C137C001C49137E003C13F012385C38783FC012705C91C7FC00F015FE495CEA00
7EA2150101FE5C5BA2150300015D5B15075E0003020F13704914C0A2031F13F00007ED80
E05B1681EE01C0120F49EC0380A2EE0700001FEC0F0E49EB07FC0007C7EA01F02C2979A7
33>I<EC1FC0ECFFF8903803F07C90380FC01FEB1F8090393F000F80017E14C049130748
4814E0485A12075B000F15F0485AA2485AA2ED0FE0127F90C7FCA2151F4815C05AA2ED3F
80A2ED7F00A248147E007C5C007E13015D4A5A003E495A6C495A4A5A260F803EC7FC3807
C0FC3801FFF038003F80242977A72E>I<903903E001F890390FF807FE903A1E7C1E0F80
903A1C3E3C07C0013C137801389038E003E0EB783F017001C013F0ED80019038F07F0001
E015F8147E1603000113FEA2C75AA20101140717F05CA20103140F17E05CA20107EC1FC0
A24A1480163F010F15005E167E5E131F4B5A6E485A4B5A90393FB80F80DA9C1FC7FCEC0F
FCEC03E049C9FCA2137EA213FEA25BA21201A25BA21203A2387FFFE0B5FCA22D3A80A72E
>I<027E1360903901FF81E0903807C1C390391F80E7C090383F00F7017E137F5B4848EB
3F80485AA2485A000F15005B121F5D4848137EA3007F14FE90C75AA3481301485CA31403
485CA314074A5A127C141F007E133F003E495A14FF381F01EF380F879F3903FF1F80EA00
FC1300143F92C7FCA35C147EA314FE5CA21301130390B512F05AA2233A77A72A>I<D801
F013FC3A07FC07FF803A0F3E0F03C0260E1F1C13E0001EEB380F001C1370003CEBE01F12
3814C0D8783F14C00070903880070092C7FC91C8FC12F05BEA007EA313FE5BA312015BA3
12035BA312075BA3120F5BA3121F5B0007C9FC232979A726>I<EC7F80903801FFE09038
07C0F890381F003C013E131C013C131E017C133E49137E15FEA2000114FCA215706D1300
7FEBFFC014FC6C13FF15806D13C06D13E0010F13F01300140F14071403120C123F387F80
011403D8FF0013E0A300FCEB07C000F0EB0F8012700078EB1F006C133C381F01F83807FF
E0C690C7FC1F297AA725>I<EB01C0EB03F01307A25CA2130FA25CA2131FA25CA2133FA2
91C7FCA2007FB51280B6FC1500D8007EC7FC13FEA25BA21201A25BA21203A25BA21207A2
5BA2120FA25BA2121F141C1380A2003F133C1438EB0078147014F05C495AEA1F03495A6C
48C7FCEA07FCEA01F0193A78B81E>I<137C48B4141C26038F80137EEA0707000E7F001E
15FE121CD83C0F5C12381501EA781F007001805BA2D8F03F1303140000005D5B017E1307
A201FE5C5B150F1201495CA2151F0003EDC1C0491481A2153F1683EE0380A2ED7F070001
02FF13005C01F8EBDF0F00009038079F0E90397C0F0F1C90391FFC07F8903907F001F02A
2979A731>I<017CEB01C048B4EB07F038038F80EA0707000E01C013F8121E001C1403EA
3C0F0038EC01F0A2D8781F130000705BA2EAF03F91C712E012005B017E130116C013FE5B
1503000115805BA2ED07001203495B150EA25DA25D1578000114706D5B0000495A6D485A
D97E0FC7FCEB1FFEEB03F0252979A72A>I<017C167048B491387001FC3A038F8001F8EA
0707000E01C015FE001E1403001CEDF000EA3C0F0038177C1507D8781F4A133C00701380
A2D8F03F130F020049133812005B017E011F14784C137013FE5B033F14F0000192C712E0
5BA2170100034A14C049137E17031880A2EF070015FE170E00010101141E01F86D131C00
00D9039F5BD9FC076D5A903A3E0F07C1E0903A1FFC03FFC0902703F0007FC7FC372979A7
3C>I<903903F001F890390FFC07FE90393C1E0E0F9026780F1C138001F0EBB83FD801E0
13F89039C007F07FEA0380000714E0D9000F140048151C000E4AC7FCA2001E131FA2C75B
A2143F92C8FCA35C147EA314FE4A131CA30101143C001E1538003F491378D87F81147001
8314F000FF5D9039077801C039FE0F7C033A7C0E3C078027783C1E1EC7FC391FF80FFC39
07E003F029297CA72A>I<137C48B4143826038F8013FCEA0707000E7F001E1401001C15
F8EA3C0F12381503D8781F14F000701380A2D8F03F1307020013E012005B017E130F16C0
13FE5B151F1201491480A2153F000315005BA25D157EA315FE5D00011301EBF803000013
0790387C1FF8EB3FF9EB07E1EB00035DA21407000E5CEA3F80007F495AA24A5AD8FF0090
C7FC143E007C137E00705B387801F0383803E0381E0FC06CB4C8FCEA03F8263B79A72C>
I<D901F01370D907FC13F0010F14E090381FFE0190393FFF03C049EB838090387C0FCF90
39F803FF009038F0007E49133C000114386C48137890C75A4A5A4A5A4A5A4AC7FC141E5C
5C5C495A495A495A49C8FC131E4913075B5B48485B4848131E485A01F05BD80FFE137C39
1F1F81F8383E0FFFD83C075B486C5B00705CD8F00190C7FC38E0007C24297BA725>I
E /Fl 50 122 df<B612F8A91D097F9A25>45 D<EA0780EA1FE0EA3FF0EA7FF8EAFFFCA6
EA7FF8EA3FF0EA1FE0EA07800E0E788D1F>I<EC3FF849B5FC010F14E090393FF01FF890
397FC007FC49486C7E48496C7E48486D13804848EC7FC0A24848EC3FE0A2001F16F0A200
3F16F849141FA2007F16FCA600FF16FEB3A3007F16FCA5003F16F86D143FA2001F16F0A2
000F16E06D147F000716C0A26C6CECFF806C6C4913006C6D485A6D6C485A90393FF01FF8
010FB512E0010314809026003FF8C7FC2F427CC038>48 D<EC03C01407141F147FEB03FF
133FB6FCA313C3EA0003B3B3AFB712FCA4264177C038>I<ECFFE0010F13FE013FEBFFC0
90B612F02603FE017F3A07F0007FFED80FC0EB1FFF48486D138048C76C13C04816E001C0
7F01F06D13F012FF7F6F13F8A56C5A6C5A6C5AC9FC4B13F0A34B13E017C05D17804B1300
5E4B5A4B5A5E4B5AEDFF804A90C7FC4A5AEC07F84A5A4A5AEC3F804AC71278147E5CD901
F014F8494814F0495A495A49C8FC013C140149140390B7FC4816E05A5A5A5A5A5AB812C0
A42D417BC038>I<ECFFF0010713FF011F14C0D97F8013F09039FC003FFCD803F06D7E48
486D7EA2D80FF86D138013FE001F16C07FA66C5A6C4815806C485BC81400A24B5A5E4B5A
4B5A4B5A4A1380DA0FFEC7FC903807FFF85D15FF90C713C0ED3FF0ED1FFC6FB4FC6F1380
17C08117E017F081A217F8A2EA0FC0EA3FF0487EA2487EA317F05DA26C4815E04915C049
5BD83F804913806C6C1500D80FF0EB3FFE6CB4EBFFF8000190B55A6C6C14C0011F49C7FC
010113E02D427BC038>I<161F5EA25E5E5DA25D5D5D5DA25D5D92B5FCEC01F715E7EC03
C7EC0787140FEC1F07141E143C147814F8EB01F014E0EB03C0EB0780130FEB1F00131E5B
5B13F85B485A485A485A120F90C7FC121E5A127C5AB91280A4C8000F90C7FCAC027FB612
80A431417DC038>I<0007150301E0143F01FFEB07FF91B55A5EA25E16E05E5E4BC7FC15
F815E04AC8FC01C0C9FCAAEC3FF001C3B5FC01CF14C09039DFE03FF09039FE000FFC01F8
6D7E496D7E491580496D13C06C5AC814E08117F0A317F8A31206EA1FC0EA7FE07F12FF7F
A317F05B5D6C4815E01380007CC714C06C5C6C16806D4913006C6C495AD807F0EB3FFCD8
03FEEBFFF0C6B65A013F1480010F01FCC7FC010113C02D427BC038>I<4AB47E021F13F0
027F13FC903901FF807F903A07FC001F804948130FD93FE0EB1FC04948137F01FFECFFE0
48495A481300A2485A120FA248486D13C0EE7F80EE1E00003F92C7FCA25B127FA3EC1FFE
00FF90387FFFC091B512F09039F9E00FF89039FBC007FC9039FF8003FF4A7E17804915C0
6F13E05B17F0A317F85BA4127FA5123FA317F06C7EA2000F16E05D6C6C15C017806C6C49
13006C6D5A6C9038C00FFC90397FF03FF8011FB55A010714C0010191C7FC9038003FF82D
427BC038>I<121E121F13FC90B712FEA44816FC17F817F017E0A217C01780481600007E
C8127E007C157C16FC00784A5A4B5A4B5A00F85D48140F4B5A4BC7FCC8127E157C15FC4A
5A14035D14075D140F141F5D143FA2147F5D14FFA35BA34990C8FCA35BA65BAA6D5A6D5A
6D5A2F447AC238>I<EC7FF00103B5FC010F14C090393F801FF090397C0007FC4848EB01
FE48486D7E49800007168049143F000F16C0161F121FA27FA27F7F01FE143F6D158002C0
137F02F014006C01FC13FEECFE016C9038FF83FCEDE7F06CECFFE06C15806C92C7FC6D14
C06D80010F14F86D80011F80017F802601FE3F14802603FC0F14C02607F80314E04848C6
FC48486D13F04848131F150748486D13F8150000FF157F90C8123F161F160FA21607A36D
15F0A2007F150F6D15E0123F6DEC1FC06C6CEC3F806C6CEC7F00D807FEEB01FE3A03FFC0
0FFCC690B512F0013F14C0010F91C7FC010013F02D427BC038>I<EC7FF0903807FFFE01
1F6D7E90397FE03FE09039FF801FF048496C7E48486D7E00076E7E484880001F80003F16
805B007F16C08117E012FFA217F0A617F8A4007F5CA4123F5D6C7E000F5C6C7E00035C6C
6C131E6C6D5A90387FFFF8011F5B010301C013F090C8FCA317E05DA2EA03C0D80FF015C0
487E486C15805D17004B5AA24B5A49495A6C485C01C0EB7FE0000F4A5A2607F8035B6CB5
48C7FC6C14F86C6C13E0D907FEC8FC2D427BC038>I<EE1F80A24C7EA24C7EA34C7EA24B
7FA34B7FA24B7FA34B7F169F031F80161F82033F80ED3E07037E80157C8203FC804B7E02
018115F0820203814B137F0207815D173F020F814B7F021F8292C77EA24A82023E80027E
82027FB7FCA291B87EA2D901F8C700017F4A80A20103834A157F0107834A153FA2494882
84011F8491C97E4984133E842601FFC083B6020FB612F0A44C457CC455>65
D<B9FC18F018FE727E26003FFCC7000713E005017F717FF03FFC85727E841A80A27213C0
A84E1380A21A00604E5A614E5A4D485A4D13C0051F90C7FC91B712FC18F018FF02FCC700
0313C0050013F0F03FFC727E727E7213801AC07213E0A27213F0A31AF8A81AF0601AE060
1AC0604E13804E1300F0FFFE050713F8BA5A19C04EC7FC18E045447CC350>I<DCFFF814
70031F01FF14F04AB6EAE0010207EDF803023F9039E003FE07DAFFFEC7EA7F0F4901F0EC
1FDF010701C0EC07FF4949804948C87E4948814948167F4948163F4849161F5A4849160F
A248491607A24890CA1203A25A5B1901127FA296C7FC5B12FFAE127F7FA21AF0123FA27F
7E19016C6D17E0A26C6D16031AC06C6D16076C19806C6D160F6D6CEE1F006D6C163E6D6C
5E6D6C6C5D6D6DEC03F0010101F04A5A6D01FEEC3FC091283FFFE001FFC7FC020790B512
FC020115F0DA001F1480030001F8C8FC44467AC451>I<B9FC18F018FE727E26003FFEC7
001F13E0050113F8716C7EF01FFF06077F727F727F727F197F86737EA2737EA2737EA21B
80A2851BC0A51BE0AD1BC0A51B8061A21B00A24F5AA24F5A62197F4F5A4E5B4E5B4E5B06
1F90C7FC4E5A943801FFF8051F5BBA12C04EC8FC18F095C9FC4B447CC356>I<BA12F8A4
D8001F90C700037FEF003F180F180318011800A2197C197E193EA2191EA40578131F85A3
96C7FCA217F8A316011603161F92B5FCA4ED001F160316011600A30578EB01E0A3F103C0
A394C7FCA21907A21A80190FA3191FA2193FF17F0061601807181F4DB5FCBBFC61A34344
7DC34A>I<BA1280A426003FFEC7001F13C01701EF007F183F181F180F1807A2F003E0A3
1801A4F000F0EE01E0A31900A31603A31607160F167F91B6FCA49138FE007F160F160716
03A31601A693C9FCB0B712F0A43C447CC346>I<B712E0A4D8001F90C7FCB3B3B3A6B712
E0A423447DC32A>73 D<0107B7FCA490C7001F1300B3B3AAEA1FE0487E487EA2487EA44B
5AA26C485C49495A6C5AD81F80495A260FE00113C02607FC075B6CB548C7FCC66C13F801
0F138030457DC33A>I<B712F0A426003FFECAFCB3B3F00780A4180F1900A460A360A218
7EA218FE170117031707171F177FEE03FFB95AA439447CC343>76
D<B500FE067FB512806E95B6FCA26F5ED8003F50C7FCA2013D6DEE03DFA2013C6DEE079F
A26E6CEE0F1FA26E6C161EA26E6C163CA36E6C1678A26E6C16F0A26E6DEC01E0A26E6DEC
03C0A36E6DEC0780A26F6CEC0F00A26F6C141EA26F6C5CA36F6C5CA26F6C5CA26F6D485A
A26F6D485AA26F6D485AA3706C48C7FCA293383FF81EA2706C5AA2706C5AA3706C5AA270
5BA2705BA2705BA213FFB66EC7007FB61280A2173E171C61447CC36A>I<923807FFC092
B512FE0207ECFFC091261FFE0013F0DA7FF0EB1FFC902601FFC0EB07FF010790C7000113
C049486E7F49486F7E49486F7E49486F7E49486F7E48496F7E4819804A814819C091C97E
4819E0A248487013F0A2003F19F8A3007F19FC49177FA400FF19FEAD007F19FC6D17FFA3
003F19F8A36C6C4C13F0A36C6D4B13E0A26C6D4B13C06C19806E5D6C19006C6D4B5A6D6C
4B5A6D6C4B5A6D6C4B5A6D6C4A5B6D01C001075B010101F0011F90C7FC6D01FEEBFFFE02
3FB612F8020715C002004AC8FC030713C047467AC454>79 D<B9FC18F018FE727ED8001F
90C7001F13E005017F716C7E727E727E85721380A27213C0A31AE0A81AC0A34E1380A24E
1300614E5AF0FFF84D5B051F13C092B7C7FC18FC18C092CBFCB3A9B712E0A443447DC34D
>I<B812F8EFFFC018F818FED8001F90C7383FFF80050713E005017F716C7E727E85727E
A2727FA286A762A26097C7FC61183F614E5A943801FFE005075B057F90C8FC92B612F818
C084DB000113F89338003FFEEF0FFF717F717F858385A2717FA785A61B0F85A2187F1B1F
726C131E72143EB700E06DEB807C72EBE0F80601EBFFF0726C13E0CC0007138050457DC3
54>82 D<DAFFE0131C010701FE133C013F9038FF807C90B6EAE0FC489038801FF93A03FC
0003FF4848EB007F4848143F4848141F4848140F1607007F1503491401A2160012FF177C
A27F173C7F7F7F6D92C7FC6CB4FC14E014FE6CEBFFF015FF6C15E016FC6C816C6F7E6C82
6C826C6C81011F810107811300020F80140003077FED007F82040F138082A200F08182A3
827EA218007EA26C5D5F7E6D4A5A13E06D4A5A01FC4A5AD9FF80EB3FE026FE7FF8EBFFC0
D8FC1FB6C7FCD8F80714FC48C614F0480107138031467AC43E>I<003FBA12E0A49026FE
000FEB800301F0EE007FD87FC0EF1FF049170F90C71607007E1803007C1801A300781800
A400F819F8481978A5C81700B3B3A40107B8FCA445437CC24E>I<B76C010FB512F8A426
003FFEC9380FF800F103E0B3B3A9011F17076280190F6D60A26D6D4BC7FC6D5F6F153E6D
6D5D6DEE01FCDA7FF84A5A6E6CEC0FF0DA0FFFEC3FE06E9039F003FF80020190B6C8FC6E
6C14FC030F14E09226007FFEC9FC4D457CC356>I<B792B6FCA4C66C48C900031300013F
EF007C6E17FC6D606F15016D608119036D606F15076D606F150F6D6081191F6D6D93C7FC
61027F163E6F157E023F167C8119FC6E6D5C18016E5E7013036E5E8218076E6D5C180F6E
5E70131F6E93C8FC705B037F143E82187E033F147C7013FC6F5C17816F5C17C117C36F5C
17E76F5C17FF6F5CA36F91C9FCA2705AA2705AA3705AA2705AA2705AA250457EC355>I<
903807FFF0017F13FF48B612C03A03FC007FF0486CEB1FF8486CEB0FFE6F7EA26F7FA26F
7F6C5A6C5AEA00F090C7FCA44AB5FC147F0107B6FC013F13C19038FFF801000313E04813
80381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C5B003F141ED81FFE4913F83C0FFF80
F87FFFC00003EBFFF0C6ECC01F90390FFE0007322C7DAB36>97 D<EB7FC0B5FCA412037E
B3ED1FF802C1B5FC02C714E09139DFC03FF89139FF000FFC02FCEB03FE4A6D7E4A15804A
6D13C04A15E0177F18F0A2EF3FF8A318FCAB18F8A3177F18F0A218E017FF6E15C06E4913
806E491300027C495A496C495A903AFC1FC07FF0D9F807B512C0D9F00191C7FC9039E000
3FF036457DC43E>I<EC3FFF0103B512F0010F14FC90393FF001FE9039FFC003FF484948
1380481300485A485A121F5B003F6E13006F5A007FEC00784991C7FCA312FFAA127FA27F
A2123FEE03C06C7E16076C6C15806C6C140F6C6DEB1F006C6D133E6C6D13FC90393FF807
F8010FB512E0010314809026003FF8C7FC2A2C7CAB32>I<EE03FEED07FFA4ED001F160F
B3EC3FF0903803FFFE010FEBFF8F90393FF807EF9039FFC001FF48903880007F4890C712
3F4848141F4848140F121F5B123FA2127F5BA312FFAB127FA36C7EA2121F7F000F151F6C
6C143F0003157F6C6C14FF6CD9C0037F90277FF01FCF13FC011FB5120F010313FC903800
7FE036457CC43E>I<EC3FFC0103B57E011F14E090393FF81FF89039FFC007FC48496C7E
48496C7E48486D13804848147F17C0485A003FED3FE0A2127F4915F0A2161F12FFA290B7
FCA301F0C9FCA5127FA36C7EA217F06C7E000F15016C6C15E016036C6CEC07C0C66DEB1F
80D97FE0EB7F0090393FFC03FE010FB512F8010114E09026001FFEC7FC2C2C7DAB33>I<
4AB4FC021F13E091B512F00103EB83F8903907FE0FFCD90FFC13FE90381FF81F133FEB7F
F0A2EBFFE0ED0FFCA2ED03F092C7FCABB612F8A4C601E0C7FCB3B2007FEBFFE0A427457D
C422>I<177E9139FFE003FF010FD9FE071380013F9039FF9F9FC0903AFFC07FFE3F4890
38001FF84848130F4848EB07FC000F9238FE1F80001F9238FF0F00496D90C7FCA2003F82
A7001F93C7FCA26D5B000F5D00075D6C6C495A6C6C495A489038C07FE091B51280D8078F
49C8FC018013E0000F90CAFCA47F7F7F90B612C016FE6C6F7E17E06C826C16FC7E000382
000F82D81FF0C7123FD83FC014074848020113808248C9FC177FA46D15FF007F17006C6C
4A5A6D1403D81FF8EC0FFCD807FEEC3FF03B01FFC001FFC06C6CB6C7FC010F14F8010014
8032417DAC38>I<EB7FC0B5FCA412037EB3ED07FE92383FFFC092B512F09139C3F03FF8
9139C7C01FFC9138CF000F02DE8014FC4A6D7EA25C5CA35CB3A8B60083B512FEA437457C
C43E>I<13FC487E487E4813804813C0A66C13806C13006C5A6C5A90C7FCACEB7FC0EA7F
FFA412037EB3B0B6FCA418467CC520>I<EB7FC0B5FCA412037EB3B3B3A5B61280A41945
7CC420>108 D<90277F8007FFEC0FFEB5013F01C090387FFF8092B5D8F001B512E0913D
81F81FFC03F03FF8913D87C00FFE0F801FFC000390268F000790381E000F6C019E6E4880
02BC5D02B86D496D7E14F84A5DA24A5DA24A5DB3A8B60081B60003B512FEA4572C7CAB5E
>I<90397F8007FEB590383FFFC092B512F0913983F03FF8913987C01FFC000390388F00
0F6C019E8014BC02B86D7E14F85C5CA35CB3A8B60083B512FEA4372C7CAB3E>I<EC1FFC
49B512C0010F14F890393FF80FFE90397FC001FF4848C7EA7FC048486E7E48486E7E000F
8249140F001F82A2003F82491407007F82A300FF1780AA007F1700A46C6C4A5AA2001F5E
6C6C4A5AA26C6C4A5A6C6C4A5A6C6D495A6C6D485B90273FF80FFEC7FC010FB512F80101
14C09026001FFCC8FC312C7DAB38>I<90397FC01FF8B500C1B5FC02C714E09139DFC03F
F89139FF001FFC000301FCEB07FE6C496D7E4A15804A6D13C04A15E08218F0177F18F8A3
EF3FFCAB18F8177FA318F017FF18E05E6E15C06E4913806E4913006E495A6E495A9139DF
C07FF002C7B512C002C191C7FC9138C03FF092C9FCAFB67EA4363F7DAB3E>I<90387F80
7FB53881FFE0028313F091388F87F891389F0FFC000390389E1FFE6C13BC14B814F814F0
A29138E00FFCED07F8ED01E092C7FCA25CB3A6B612E0A4272C7DAB2E>114
D<90391FFE038090B512CF000314FF380FF003391FC0007F48C7123F48141F007E140FA2
00FE1407A27E7F6D90C7FC13F0EBFF806C13FCECFF806C14E015F86C14FE6C801203C615
80013F14C01301D9000F13E0140000F0147F153F6C141FA2150F7E16C07E6C141F168001
C0133F6DEB7F009038F801FC00FCB55AD8F03F13E026E007FEC7FC232C7CAB2C>I<EB01
E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90B51280B7FCA3C601E0C7FC
B3A4ED01E0A91503D97FF013C0A2013FEB0780ECF80F90391FFC1F00903807FFFE010113
F89038003FE0233F7EBE2C>I<D97FC049B4FCB50103B5FCA40003EC000F6C81B3A85EA2
5EA26C5DA26E5B017FD901F7138090273FF807E713FE010FB512870103EBFE079038007F
F8372C7CAB3E>I<B6903803FFFCA4000101C09038007F806EEC3E006C163C80017F5D80
17F8013F5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D92C7FC15C05E6DEBE01E
163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA26E90C8FCA2
6E5AA26E5AA21578362C7EAB3B>I<B500FE90383FFFF0A4000101E0903807F8006C6DEB
03E06D6C495A013F4A5A6D6C49C7FC6E5B6D6C137E6DEB807C6D6D5A6DEBC1F0EDE3E06D
EBF7C06EB45A806E90C8FC5D6E7E6E7F6E7FA24A7F4A7F8291381F3FFCEC3E1F027C7F4A
6C7E49486C7F01036D7F49487E02C08049486C7F49C76C7E013E6E7E49141F48B46E7EB5
00E090B512FCA4362C7EAB3B>120 D<B6903803FFFCA4000101C09038007F806EEC3E00
6C163C80017F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D92C7
FC15C05E6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA3
6E5BA26E90C8FCA26E5AA26E5AA21578A215F85D14015D001F1303D83F805B387FC007D8
FFE05B140F92C9FC5C143E6C485A5C383F07F0381FFFC06C5BD801FCCAFC363F7EAB3B>
I E /Fm 15 118 df<EA0380EA0FE0121FA5EA0760120013E013C0A2120113801203EA07
001206120E5A5A5A5A5A0B177A8718>44 D<161C163C167CA216FCA215011503A2150716
7E150EA2151C153C15381570A215E0A2EC01C014031580EC0700167F020E7FA25C143C14
385CA25C91B6FC5B5B913880003F49C7FC1780010E141FA25B133C13385B13F0A2485A12
03D80FF0EC3FC0D8FFFE903807FFFEA32F357BB439>65 D<92391FE001C0EDFFFC0207EB
FF03913A1FF00F878091397F8003CF9139FE0001FFD903F87F49481500494880495A495A
49C8123E13FE485AA24848153C485AA2485A1738485A94C7FC123F5BA3127F90CBFCA412
7E12FEEE03C0127E5FA2160794C7FC007F5D161E6C151C163C6C6C5C5E6C6C495A6C6C49
5A6C6CEB0F80D801FC49C8FC6CB413FC90383FFFF0010F13C0D903FEC9FC323575B337>
67 D<010FB51280A216009038003FC05DA292C7FCA25CA2147EA214FEA25CA21301A25C
A21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C8FCA25BA2137EA213FEA2
5B1201B512F8A25C21337BB21E>73 D<902607FFC0ED7FFC4917FF81D9003F4B13006118
03023BED077CA2027BED0EFC610273151C1838DAF1F01439F071F014E118E10101ED01C3
6102C1EC0383EF070301031607050E5BEC80F8171C0107ED380F6102001470A249EDE01F
DC01C090C7FC130EEE0380011E017C5C933807003E011C140EA2013C4A137E187C01385C
5E017816FC6F485B1370ED3FC001F0EC80016000011500D807F81503277FFF803E90B512
C0B5EB3C01151C46337BB245>77 D<0107B612C04915F883903A003F8001FEEE003FEF1F
8092C713C0170F5C18E0147EA214FEEF1FC05CA201011680173F4A1500177E010315FE5F
4AEB03F8EE07E00107EC3FC091B6C7FC16F802E0C9FC130FA25CA2131FA25CA2133FA291
CAFCA25BA2137EA213FEA25B1201387FFFF0B5FCA233337CB234>80
D<0107B512FE49ECFFC017F0903A003F8007F8EE01FCEE007E92C7127F835C1880147EA2
14FEEF7F005CA2010115FE5F4A13015F01034A5AEE0FC04A495A04FEC7FC49B512F016C0
9138E003E0ED01F8010F6D7E167C4A137EA2131FA25CA2013F14FEA291C7FCA24913015E
137EEF01C001FE150318805B00010200EB0700267FFFF06D5AB5EC7E1EEE1FF8C9EA07E0
32347BB238>82 D<913903FC0380EC0FFF023FEBC7009138FE07EF903901F801FF903803
E0004948137E130F4A133E49C7FC163C133EA3017E1438A393C7FCA2137F80EB3FE014FE
90381FFFC06D13F86D7F6D13FFEB007F020F7F1400ED3FC0151F150FA4120E121E5E121C
A2003C4AC7FCA2003E143EA2007E5C007F5C6D485A6D485A39FBF80FC000F0B55A26E03F
FEC8FC38C00FF029357AB32B>I<14FCEB07FF90381F078090383E03C0EBFC013801F803
3803F0073807E00F13C0120F391F80070091C7FC48C8FCA35A127EA312FE5AA4007C14C0
EC01E0A2EC03C06CEB0F80EC1F006C137C380F81F03803FFC0C648C7FC1B2278A023>99
D<EB03F8EB0FFEEB3E0F9038F807803801F003EA03E0EA07C0120FEA1F801407D83F0013
005C007E133EEB03F8387FFFE04848C7FC00FCC8FCA45AA4EC0180EC03C0A2007CEB0780
EC1F00003C133E6C13F8380F03E03807FF80D801FCC7FC1A2277A023>101
D<EB0FC0EA03FFA25CEA001FA391C8FCA25BA2133EA2137EA2137CA213FCA29038F83F80
ECFFE03901FBE0F09038FF80F8EC007849137C485A5B5BA2484813FC5D5BA2000F13015D
1380A2001F13035DEB0007EDC0C048ECC1E0020F13C0003E1481A2007E1483ED0380007C
1407160000FC140E151E48EB07F80070EB01F023357BB327>104
D<EB0180EB07E0A2130FEB07C0EB038090C7FCABEA01F0EA03FCEA0F1E120E121C123C12
38EA783E1270A2137EEAF07CEA60FCC65AA212015BA212035BA2000713C0EBC1E0000F13
C01381A21383EB038013071400130E131EEA07F8EA01F013337AB118>I<3903C00FC039
0FF03FF0391E78F078391C7DE03C393C3FC0FC00381380EB7F00007814F8D8707E137015
00EAF0FC12E0EA60F812001201A25BA21203A25BA21207A25BA2120FA25BA2121FA290C8
FC120E1E227AA020>114 D<1303EB0F80A3131FA21400A25BA2133EA2137EA2137C387F
FFF8A2B5FC3800F800A21201A25BA21203A25BA21207A25BA2120FA25B1460001F13F014
E01300130114C01303001E1380EB07005BEA0F1EEA07F8EA01E015307AAE19>116
D<EA01F0D803FC1307D80F1E5B000E5C121C123C00385CD8783E133E1270A2017E137ED8
F07C137CEA60FCC65A15FC00015C5BA2140100035C13E0166002031370EDE0F0D807C014
E0A20003EB07E116C09038E00FC1EC1FC3000190383FE3809038F071E73A007FE0FF0090
381F803C24227AA029>I E /Fn 4 53 df<13E01201120712FF12F91201B3A7487EB512
C0A212217AA01E>49 D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13
FCA2147C1278003013FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B38
01C00CEA0380380600185A5A383FFFF85AB512F0A216217CA01E>I<13FF000313C0380F
03E0381C00F014F8003E13FC147CA2001E13FC120CC712F8A2EB01F0EB03E0EB0FC03801
FF00A2380003E0EB00F01478147C143E143F1230127812FCA2143E48137E0060137C0038
13F8381E03F0380FFFC00001130018227DA01E>I<14E01301A213031307130F130D1319
13391371136113C11201EA038113011206120E121C12181230127012E0B6FCA2380001E0
A6EB03F0EB3FFFA218217DA01E>I E /Fo 60 125 df<EC1FE0ECFFFC903803F01E9039
0FC00780EB1F8090393F000FC0017E131F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901
F8001F150FB3A6486CEB1FE0267FFFC1B5FCA328357FB42B>12 D<003C13F0387E01F838
FF03FCA2EB83FEA2EA7F81383D80F600011306A40003130EEB000CA248131C0006131800
0E1338000C1330001C13704813E0387001C00060138017177EB326>34
D<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E120C121C5A5A1260
09177AB315>39 D<14C01301EB0380EB0F00130E5B133C5B5BA2485A485AA212075B120F
90C7FC5AA2121E123EA3123C127CA55AB0127CA5123C123EA3121E121FA27E7F12077F12
03A26C7E6C7EA213787F131C7F130FEB0380EB01C01300124A79B71E>I<12C07E127012
3C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C133EA2131E131FA37F1480A5EB
07C0B0EB0F80A514005BA3131E133EA2133C137C137813F85BA2485A485AA2485A48C7FC
120E5A123C12705A5A124A7CB71E>I<123C127EB4FCA21380A2127F123D1201A4120313
00A25A1206120E120C121C5A5A126009177A8715>44 D<B512F0A514057F921A>I<123C
127E12FFA4127E123C08087A8715>I<EB0FE0EB7FFCEBF83E3903E00F803907C007C039
0F8003E0A2391F0001F0A24814F8A2003E1300007E14FCA500FE14FEB1007E14FCA46CEB
01F8A36C14F0A2390F8003E0A23907C007C03903E00F803901F83F0038007FFCEB0FE01F
327DB026>48 D<13075B5B137FEA07FFB5FC13BFEAF83F1200B3B3497E007FB51280A319
317AB026>I<EB3FC03801FFF84813FE380F80FF391E007F8048EB3FC00038EB1FE048EB
0FF0126000FC13076C14F87EA21403A2007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC
3F801500147E5C495A5C495A495A495A49C7FC133E133C4913185B485A48481330485A48
C7FC001C1470001FB512F05A5AB612E0A31D317CB026>I<EB1FE0EBFFFC000313FF3907
C03FC0390E001FE048130F003FEB07F0018013F8A2EBC0031380A2381F0007C7FC15F0A2
EC0FE0A2EC1FC0EC3F80EC7E00495AEB7FE014FCEB003FEC1FC0EC0FE0EC07F0EC03F8A2
15FC140115FEA3127EB4FCA315FC14035A007814F80070EB07F06C130F001EEB1FE0390F
C03F800003B51200C613FCEB1FE01F327DB026>I<000C14C0380FC00F90B5128015005C
5C14F014C0D80C18C7FC90C8FCA9EB1FC0EB7FF8380DE07E380F801F01001380000EEB0F
C0000C130715E0C713F01403A215F8A41218127E12FEA315F0140712F8006014E0007013
0F6C14C0003CEB1F806CEB3F00380F80FE3807FFF8000113E038007F801D327CB026>53
D<14FE903807FF80011F13E090383F00F001FC13703901F801F83803F003EA07E013C012
0F391F8001F091C7FC123F90C8FCA25AA2127EEB07F038FE1FFCEB381F9038700F809038
E007E038FFC00390388001F015F8010013FC1400A24814FEA4127EA4127F7E15FC1401D8
1F8013F8A2390FC003F00007EB07E03903E00FC03901F81F806CB51200EB3FFCEB0FF01F
327DB026>I<EB0FE0EB7FFC48487E3903F01F803907E00FC0380FC007391F8003E0D83F
0013F014014814F8127E12FE15FC1400A315FEA5007E1301A2127F6C13037E380F8007EB
C00E3803E01C3801F03838007FF090381FC0FC90C7FCA2140115F8A3EC03F0121F393F80
07E0A2EC0FC0EC1F809038003F00001C137E381F01FC380FFFF000035BC690C7FC1F327D
B026>57 D<15E0A34A7EA24A7EA34A7EA3EC0CFEA3EC187FA202387FEC303FA202607F15
1FA24A6C7EA349486C7EA2010380EC0003A20106801501A2496D7E010FB5FCA249800118
C77E0138810130143FA24981161FA2496E7EA21201707E487ED81FF0EC1FF8D8FFFE49B5
12E0A333357DB43A>65 D<B7FC16E016F83A03FC0003FE0001EC00FFEE7F80EE3FC0161F
17E0160F17F0A617E0161F17C0EE3F80EE7F0016FEED03FC90B612F05E9039FC0007FCED
00FEEE3F80EE1FC0EE0FE017F0160717F8160317FCA617F81607A2EE0FF0EE1FE0163FEE
7FC00003913803FF00B75A16F816C02E337DB236>I<DA03FE130C91393FFF801C91B512
E0903A03FE01F83C903A0FF0003C7CD93FC0EB0EFC49C7120701FE140348481401484814
000007167C5B4848153C121F49151C123F5B127F170CA348CAFCAB6C7E170CA3123F7F00
1F161C6D1518000F16386C7E6D157012036C6C15E06C6CEC01C0017FEC0380D93FC0EB0F
00D90FF0131ED903FE13FC0100B512F0023F13C0DA03FEC7FC2E357CB337>I<B812C0A3
D803FCC7127F0001150FEE03E01601A21600A21760A403061330A41700150EA2151E157E
90B512FEA39038FC007E151E150EA21506170CA3171892C7FCA41738A21770A217F01601
160316070003157FB812E0A32E337DB234>69 D<B81280A3D803FCC7FC0001151FEE07C0
1603A21601A21600A41760150CA31700A2151CA2153C15FC90B5FCA3EBFC00153C151CA2
150CA592C8FCAB487EB512FEA32B337DB232>I<DA03FE130C91393FFF801C91B512E090
3A03FE01F83C903A0FF0003C7CD93FC0EB0EFC49C7120701FE1403484814014848140000
07167C5B4848153C121F49151C123F5B127F170CA348CBFCAA0303B512E06C7EA2923900
03FE00705A6C7EA2121F7F120F6C7E7F12036C7E6C6C1403EB7F806D6C1307D90FF0EB1E
7CD903FEEBFC3C0100B5EAF01C023FEBC00CDA03FEC8FC33357CB33C>I<B5D8FE03B512
F8A3000190C73807FC006C486E5AB390B7FCA349C71203B3A3486C4A7EB5D8FE03B512F8
A335337EB23A>I<B512FEA3000113006C5AB3B3A7487EB512FEA317337EB21C>I<017FB5
FCA39038003FE0EC1FC0B3B1127EB4FCA3143F15805A0070EB7F00003013FE003C5B380F
03F03803FFE0C690C7FC20347DB227>I<B500FE903807FFF8A3000190C7000113006C48
EC00FC17F04C5A4C5A4CC7FC160E5E5E5E5E4B5A4B5A4BC8FC150E5D5D15F84A7E14034A
7EEC0EFF5C4A6C7E4A6C7EECE01FD9FFC07F4A6C7E4A6C7E5B6F7E6F7EA26F7E707EA270
7E707E160F83707E707EA283486C913807FF80B500FE013F13FCA336337EB23C>I<D8FF
FC923801FFF86D5DA20003EFFE00D801BFED06FCA3D99F80140CA2D98FC01418A3D987E0
1430A2D983F01460A3D981F814C0A3D980FCEB0180A2027EEB0300A36E1306A26E6C5AA3
6E6C5AA36E6C5AA26E6C5AA36E6C5AA3913800FD80A2037FC7FCA3486C133ED80FF04B7E
B5011C90387FFFF8A33D337CB246>77 D<B612FEEDFFC016F03A03FC0007FC0001EC00FE
167FEE3F80EE1FC017E0160FA217F0A617E0A2EE1FC0A2EE3F80EE7F0016FEED07F890B6
5A168001FCC9FCB3A2487EB512F8A32C337DB234>80 D<B612FCEDFF8016F03A01FE0007
FC0000EC01FEED007F707E707E83160F83A65FA24C5AA24C5A047EC7FC4B5AED0FF090B6
12C093C8FC9039FE001FC0ED07F06F7E6F7E150082167E167FA583A5180C17C0163F181C
486C91381FE018B500FE010F1338933807F070933801FFE0CAEA3F8036347EB239>82
D<90381FE0039038FFFC074813FF3907E00FCF390F8001FF48C7FC003E80003C80007C80
00788012F881A36C80A27E92C7FC127F13C013F06CB4FC6C13F06C13FF6C14C06C14F0C6
80013F7F01037F9038003FFF140302001380157FED3FC0151F150F12C01507A37EA21680
6C140FA26CEC1F006C141EB4143E01C013FC39F3F803F800E0B512E0013F138026C003FE
C7FC22357CB32B>I<007FB712FEA390398007F001D87C00EC003E0078161E0070160EA2
0060160600E01607A3481603A6C71500B3AB4A7E011FB512FCA330337DB237>I<B500FE
90381FFFF8A3000190C813006C48153C1718B3AE1738137E017F153017707F6E5C131F6D
6C495A6E495A6D6C010FC7FCD901F8131E6DB413FC91383FFFF0020F13C0020190C8FC35
347EB23A>I<B5D8F007B539800FFFF0A3000390C7273FF000011300D801FC6E48EB007C
1A386C6C140F1A3083017F02075DA24C7E6D6C5FA24C7E6D6C01194A5AA2EE39FE6D6C01
304AC7FCA2EE70FF6D6CD9607F1306A204E013806D6CD9C03F5BA2030114C0D901FCD980
1F5BA2030314E0D900FED9000F5BA24B14F0DA7F0601075BA24BEB03F8DA3F8C5DA20398
EB01FCDA1FD8ECFD80A203F0EB00FF020F93C8FCA24B800207157EA24B143E0203153CA2
4B141C020115184C347FB24F>87 D<267FFFFC90B512C0A3000101E090381FF80026007F
80EB0FC0013F6E5A6E91C7FC6D6C130E010F140C6E5B6D6C133801035C6E13606D6C13E0
6D6C485A5EDA7F83C8FCEC3FC715C6EC1FECEC0FFC5D14076E7EA26E7E815C6F7E913806
3FC0140E4A6C7E9138180FF0EC380702707F91386003FCECC0010101804A6C7E49C77E49
81010E6E7E010C6E7E131C496E7E01786E7E13FCD807FEEC1FFEB56C90B512F8A335337E
B23A>I<B500F8ECFFFEA300030180EC3FE06C90C8EA1F806CEE0E006D6C5C6D6C141817
386D6C14305F6D6C14E06D6C5C16016D6C5C6D6C49C7FC5E6D6C13065E91387F801C9138
3FC018163891381FE0306E6C5A16E06E6C5AEDF980EC03FF6E90C8FC5D1400B14A7E91B5
12FCA337337FB23A>I<0003130C48131C000E133848137000181360003813E0003013C0
EA700100601380A2EAE00300C01300A400DE137800FF13FCEB83FEA2EA7F81A2383F00FC
001E1378171774B326>92 D<EB7F803803FFF0380F80FC381C003E003F133F6D6C7E6E7E
A26E7EEA1F00C7FCA4EB01FF131FEBFF873803FC07EA0FF0EA1FC0EA3F80127F13004815
C05AA3140FA26C131F6C133B3A3F8071F180391FC1E1FF2607FFC013003900FE003C2223
7DA126>97 D<EA03F012FFA312071203AEEC3F80ECFFE09038F3C0F89038F7007E01FE7F
49EB1F8049EB0FC05BED07E016F0A2150316F8AA16F0150716E0A2ED0FC07F6DEB1F8001
ECEB3F0001CF137C90388381F8903801FFE0C76CC7FC25357EB32B>I<EB07F8EB3FFF90
38FC07C03901F000E03903E003F03807C007120FEA1F80123F90380003E04890C7FCA212
7E12FEAA127FA26C14187F001F14386D1330000F14706C6C13E03903F001C03900FC0F80
90383FFE00EB07F01D237EA122>I<153FEC0FFFA3EC007F81AEEB07F0EB3FFCEBFC0F39
01F003BF3907E001FF48487E48487F8148C7FCA25A127E12FEAA127E127FA27E6C6C5BA2
6C6C5B6C6C4813803A03F007BFFC3900F81E3FEB3FFCD90FE0130026357DB32B>I<EB0F
E0EB7FFCEBF83F3903F00F80D807E013C0390FC007E0381F800315F0EA3F0014014814F8
127EA212FEA2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F14306D13706C6C13
E03901F003C03900FC0F00EB3FFEEB07F01D237EA122>I<EB01FCEB07FF90381F078090
383E0FC0EB7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3D803F0C7FCB3A7487E38
7FFFE0A31A357FB417>I<90381FC01F9039FFF87FC03901F07DE73907E03F83260FC01F
13809039800F8000001F80EB00074880A66C5CEB800F000F5CEBC01F6C6C48C7FCEBF07C
380EFFF8380C1FC0001CC9FCA3121EA2121F380FFFFEECFFC06C14F06C14FC4880381F00
01003EEB007F4880ED1F8048140FA56C141F007C15006C143E6C5C390FC001F83903F007
E0C6B51280D91FFCC7FC22327EA026>I<EA03F012FFA312071203AEEC1FC0EC7FF09038
F1E0FC9038F3807C9038F7007E13FE497FA25BA25BB3486CEB7F80B538C7FFFCA326347E
B32B>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCAAEA07E012FFA3120F1207B3A6EA
0FF0B5FCA310337EB215>I<EA03F012FFA312071203AF913803FFE0A36E1300EC00F8EC
01E05D4A5A020FC7FC141C5C5C14F0EBF3F8EBF7FC13FEEBFC7EEBF87F496C7E141F6E7E
8114076E7E8114016E7E81486CEBFF80B500C313F0A324347EB329>107
D<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315>I<2703F01FE013FF00FF
90267FF80313C0903BF1E07C0F03E0903BF3803E1C01F02807F7003F387FD803FE147049
6D486C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A33C217EA041>I<3903F0
1FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE497FA25BA25BB3486CEB7F
80B538C7FFFCA326217EA02B>I<EB07F0EB3FFE9038FC1F803901F007C03903C001E000
078048486C7E48C7127CA248147E003E143E007E143FA300FE1580A8007E1500A36C147E
A26C147C6D13FC6C6C485A00075C3903F007E03900FC1F80D93FFEC7FCEB07F021237EA1
26>I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED807FE7F6C48EB1F804914C049
130F16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D131F6DEB3F80160001FF13FC
9038F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A325307EA02B>I<903807F0
0390383FFC07EBFC0F3901F8038F3807E001000F14DF48486CB4FC497F123F90C77E5AA2
5A5AA9127FA36C6C5B121F6D5B000F5B3907E003BF3903F0073F3800F81EEB3FF8EB0FE0
90C7FCAAED7F8091380FFFFCA326307DA029>I<3803E07C38FFE1FF9038E38F809038E7
1FC0EA07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512E0A31A217FA01E>I<EBFF06
000713CE381F00FE003C133E48131E140E5A1406A27EA200FE90C7FC6C7EEA7FFC383FFF
C014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F140F6C1307A37E15006C5B6C130E
6C5B38F7807838E1FFE038C07F8019237EA11E>I<1330A51370A313F0A21201A2120312
07381FFFFEB5FCA23803F000AF1403A814073801F806A23800FC0EEB7E1CEB1FF8EB07E0
182F7FAD1E>I<D803F0133F00FFEB0FFFA30007EB007F000380B35DA35D12016D481380
0000903803BFFC90387E073FEB1FFED907F8130026227EA02B>I<B5EBFFF0A3D80FF0EB
3F800007EC1F000003140E150C6D131C00011418A26C6C5BA26D1370017E1360137F6D5B
A290381F8180A214C3010F90C7FCA2EB07E6A214FE6D5AA26D5AA36D5AA2146024217E9F
29>I<B53A1FFF81FFF0A33C07F801FC003F8001F049EB1E0000030100141C816C6C017C
1318A26D017E1338000002FE1330A290267E01FF5B159F168090263F030F5BA216C0903A
1F8607C180A202C613E390260FCC0390C7FCA2D907FC13F6ECF80116FE6D486C5AA36D48
1378A36D48133034217F9F37>I<3A7FFF807FF8A33A07F8001FC00003EC0F800001EC07
0015066C6C5BA26D131C017E1318A26D5BA2EC8070011F1360ECC0E0010F5BA2903807E1
80A214F3010390C7FC14FBEB01FEA26D5AA31478A21430A25CA214E05CA2495A1278D8FC
03C8FCA21306130EEA701CEA7838EA1FF0EA0FC025307F9F29>121
D<B712F8A22502809426>123 D<BC12F0A24C0280944D>I E /Fp
1 4 df<136013701360A20040132000E0137038F861F0387E67E0381FFF803807FE00EA
00F0EA07FE381FFF80387E67E038F861F038E060700040132000001300A2137013601415
7B9620>3 D E /Fq 5 54 df<130C133C137CEA03FC12FFEAFC7C1200B3B113FE387FFF
FEA2172C7AAB23>49 D<EB7F803801FFF0380780FC380E003F48EB1F8048EB0FC05A0060
EB07E012F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC3F00147E14
7C5C495A495A495A495A011EC7FC5B5B4913305B485A4848136048C7FC000E14E0001FB5
FC5A4814C0B6FCA21C2C7DAB23>I<EB3FC03801FFF03807C0FC380E007E487FEC1F8000
3F14C0A2EB800F1300A2000C131FC7FC1580A2EC3F00143E5C5CEB03F0EBFFC014F0EB00
FC143FEC1F8015C0140F15E0A2EC07F0A21238127C12FEA3EC0FE012F8006014C0007013
1F6C1480001EEB3F00380780FC3801FFF038007FC01C2D7DAB23>I<140EA2141E143EA2
147E14FEA2EB01BE1303143E1306130E130C131813381330136013E013C0EA0180120313
001206120E120C5A123812305A12E0B612FCA2C7EA3E00A9147F90381FFFFCA21E2D7EAC
23>I<000CEB0180380FC01F90B512005C5C14F014C0D80C7EC7FC90C8FCA8EB1FC0EB7F
F8380DE07C380F801F01001380000E130F000CEB07C0C713E0A2140315F0A4127812FCA4
48EB07E012E0006014C00070130F6C14806CEB1F006C133E380780F83801FFE038007F80
1C2D7DAB23>I E /Fr 34 122 df<913803FFC0023F13FC91B6FC010315C0010F018113
F0903A1FFC003FF849486D7E49486D7E49486D7E48496D138048496D13C0A24817E04890
C813F0A34817F8A24817FC49157FA3007F17FEA600FF17FFB3A5007F17FEA6003F17FCA2
6D15FFA26C17F8A36C17F0A26C6D4913E0A26C6D4913C06C17806E5B6C6D4913006D6C49
5AD91FFCEB3FF8903A0FFF81FFF06D90B55A01011580D9003F01FCC7FC020313C0384F7B
CD43>48 D<157815FC14031407141F14FF130F0007B5FCB6FCA2147F13F0EAF800C7FCB3
B3B3A6007FB712FEA52F4E76CD43>I<EC3FFE0103B512E0010F14FC013F14FF90B712C0
48D9C07F7F2703FE000F13F8D807F801037FD80FE06D7F48486D7F48488001F01680486C
6E13C07F486C6E13E07FA27013F0A56C5AA26C5AEA0FF0EA03C0C914E05EA218C05E1880
A24C13005F4C5A4B5B5F4B5B5F4B5B4B90C7FC4B5A5E4B5AED7FE04B5A4A5B4A48C8FC4A
5A5D4A48EB01F04A5AEC3F804AC7FC02FEEC03E0495A495A495A495AD91F80140749C8FC
013E150F017FB7FC90B812C05A5A5A5A5A5A5AB9FC1880A4344E79CD43>I<91380FFFC0
91B512FC0107ECFF80011F15E090263FF8077F9026FF800113FC4848C76C7ED803F86E7E
491680D807FC8048B416C080486D15E0A4805CA36C17C06C5B6C90C75AD801FC1680C9FC
4C13005FA24C5A4B5B4B5B4B13C04B5BDBFFFEC7FC91B512F816E016FCEEFF80DA000713
E0030113F89238007FFE707E7013807013C018E07013F0A218F8A27013FCA218FEA2EA03
E0EA0FF8487E487E487EB57EA318FCA25E18F891C7FC6C17F0495C6C4816E001F04A13C0
6C484A1380D80FF84A13006CB44A5A6CD9F0075BC690B612F06D5D011F1580010302FCC7
FCD9001F1380374F7ACD43>I<177C17FE1601A216031607160FA2161F163F167F16FFA2
5D5D5DA2ED0FBF151FED3F3F157E157C15F81401EC03F0EC07E015C0140FEC1F80EC3F00
143E5C14FC495A495A5C495A130F495A91C7FC133E137E5B485A5B485A1207485A5B48C8
FC5A127E5ABA12C0A5C96C48C7FCAF020FB712C0A53A4E7CCD43>I<D80380150ED807E0
157E01FEEC03FED9FFF0137F91B65A5F5F5F5F5F94C7FC5E5E16F016C093C8FC15F801E1
90C9FC01E0CAFCABEC0FFF027F13F001E3B512FE01E76E7E9026FFF8077FDAC0017F49C7
13F8496E7E01F0143F4981496E7E6C481680C9FC18C08218E0A418F0A3EA0FE0487E487E
487E487EA418E0A35B6C484A13C05B491680003EC85A003F17006C6C4A5A6D5D6C6C4A5A
D807F8495BD803FE01075B2701FFC03F5B6C90B65A013F4AC7FC6D14F8010314C0902600
7FF8C8FC344F79CD43>I<932601FFFCEC01C0047FD9FFC013030307B600F81307033F03
FE131F92B8EA803F0203DAE003EBC07F020F01FCC7383FF0FF023F01E0EC0FF94A018002
03B5FC494848C9FC4901F8824949824949824949824949824990CA7E494883A248498348
5B1B7F485B481A3FA24849181FA3485B1B0FA25AA298C7FC5CA2B5FCAE7EA280A2F307C0
7EA36C7FA21B0F6C6D1980A26C1A1F6C7F1C006C6D606C6D187EA26D6C606D6D4C5A6D6D
16036D6D4C5A6D6D4C5A6D01FC4C5A6D6DEE7F806D6C6C6C4BC7FC6E01E0EC07FE020F01
FEEC1FF80203903AFFE001FFF0020091B612C0033F93C8FC030715FCDB007F14E0040101
FCC9FC525479D261>67 D<BA7E19FCF1FF801AF01AFCD8000701F0C7000F13FF060014C0
071F7F070713F807017F737F747E747F747F86747F747F8886888688A2757EA31D8087A2
1DC0A51DE0A387A963A31DC0A51D80A2631D00A3515AA2646264505B6264505B505B5090
C7FCF2FFFE4F5B07075B071F5B96B512C0060F91C8FCBB5A1AF01AC007FCC9FC19805B52
7CD167>I<B812C0A5D8000701F8C7FCB3B3B3B2B812C0A52A527CD132>73
D<B600FC073FB512FE6F61A26F96B6FCA2D80007F5C00070EF01EFA202EF6DEF03CFA202
E76DEF078FA202E36DEF0F0FA202E16D171EA302E06D173CA26F6C1778A26F6C17F0A26F
6DED01E0A26F6DED03C0A36F6DED0780A26F6DED0F00A26F6D151EA26F6D5DA3706C5DA2
706C5DA2706D495AA2706D495AA2706D495AA3706D49C7FCA2706D131EA2706D5BA2716C
5BA3716C5BA271EB81E0A271EBC3C0A271EBE780A27101FFC8FCA3715BA2715BA2725AA2
725AA2D93FFC6F5AB74DB712FEA2725AA2725A77527CD180>77 D<93380FFFC00303B6FC
031F15E092B712FC0203D9FC0013FF020F01C0010F13C0023F90C7000313F0DA7FFC0200
7F494848ED7FFE4901E0ED1FFF49496F7F49496F7F4990C96C7F49854948707F4948707F
A24849717E48864A83481B804A83481BC0A2481BE04A83A2481BF0A348497113F8A5B51A
FCAF6C1BF86E5FA46C1BF0A26E5F6C1BE0A36C6D4D13C0A26C6D4D1380A26C1B006C6D4D
5A6E5E6C626D6C4C5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D4B90C7FC6D6D4B5A6D
01FF02035B023F01E0011F13F0020F01FC90B512C0020390B7C8FC020016FC031F15E003
0392C9FCDB001F13E0565479D265>79 D<BAFC19F819FF1AE086D8000701F0C7001F13FC
060113FF726C13807313C0070F13E01BF0857313F81BFCA27313FEA41BFFA81BFEA31BFC
61A21BF84F13F04F13E0614F13C04F13004E485A061F5B92B812F01AC04FC7FC19E003F8
CBFCB3AEB812C0A550527CD15C>I<B912F0F0FF8019F819FF1AC0D8000701F0C714F006
0F7F060113FE727F737F737F85737F87A2737FA387A863A2616363A24F5B4F5B4F90C8FC
4F5A06035B060F13F095B512C092B8C9FC19F819E019F89226F0000313FE9439007FFF80
061F7F727F727F86727F8486A2727FA887A71D1C1D3E8785A275137E73157C7315FC736D
13F8B86C6DEBF801739038FE07F07390B512E0736C14C0080F1400CEEA7FFC5F537CD164
>82 D<91260FFF80130791B500F85B010702FF5B011FEDC03F49EDF07F9026FFFC006D5A
4801E0EB0FFD4801800101B5FC4848C87E48488149150F001F824981123F4981007F82A2
8412FF84A27FA26D82A27F7F6D93C7FC14C06C13F014FF15F86CECFF8016FC6CEDFFC017
F06C16FC6C16FF6C17C06C836C836D826D82010F821303010082021F16801400030F15C0
ED007F040714E01600173F050F13F08383A200788200F882A3187FA27EA219E07EA26CEF
FFC0A27F6D4B13806D17006D5D01FC4B5A01FF4B5A02C04A5A02F8EC7FF0903B1FFFC003
FFE0486C90B65AD8FC0393C7FC48C66C14FC48010F14F048D9007F90C8FC3C5479D24B>
I<B800C00103B612FCA5D8000701F8CAEBF000F31F80B3B3B26D193F99C7FC81A26D197E
A26D6D17FE63027F17016E6C4C5A636E6D15076E6D4B5A6E6DED3FC06E6D4B5A020001FC
DA03FFC8FC6FB46CEB0FFE6F9039F001FFF8030F90B65A030316C0DB007F92C9FC040F14
F8DC007F13805E537CD167>85 D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703
FE000113F0486C6D7F6EEB3FFC48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6
037FB5FC020FB6FC91B7FC01071487013FEBF0074913803901FFFC004813F0485B485B48
5B4890C7FC5A5BA2485AA45EA26D5C007F151D163D6C6C02797F6C6D01F113F86C9026C0
03E0EBFFE06C9027F81FC07F13F06C90B5487EC64B7E011F01FC010713E0010101E090C8
FC3C387CB641>97 D<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A
1FFE0001FFD97FFC491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F13
00705A4892C8FC5BA312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F
806C6DEC3F006C6D147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A0100158002
3F49C7FC020113E033387CB63C>99 D<4DB47E0407B5FCA5EE001F1707B3A4913801FFE0
021F13FC91B6FC010315C7010F9038E03FE74990380007F7D97FFC0101B5FC49487F4849
143F484980485B83485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37EA26C7F5F6C6D5C
7E6C6D5C6C6D49B5FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07FCF6D90B5128F01
01ECFE0FD9003F13F8020301C049C7FC41547CD24B>I<913803FFC0023F13FC49B6FC01
0715C04901817F903A3FFC007FF04948EB1FF8D9FFE06D7E488248496D7E48814A15805A
4890C76C13C0A24817E0A282485A18F0A312FFA390B8FCA318E049CAFCA5127FA46C7EA2
6C17E0EF01F06C7F17036C17E06C6D14076C6DEC0FC06CEE1F806D6CEC3F00D93FFC14FE
6D6CEB03FC903A0FFFC03FF8010390B55A010015C0021F49C7FC020113F034387CB63D>
I<ED3FFC0203B5FC020F14C0023F14E09139FFF81FF0499038C03FF849EB807F49903800
FFFC495A495AA2495AA2EE7FF8495AEE3FF0EE0FC093C7FCAEB712E0A526007FF8C8FCB3
B3A7007FB512FEA52E547CD329>I<DA3FFF14FF0103B5D8F00713C0010FDAFC1F13E001
3FECFF7F90267FFC0F9038FF9FF09026FFE001EBF83F48496C13E0484990387FF01F4890
C7D83FF813E0489338FC0FC0F0078048486E6CC7FCA2003F82A9001F5EA26C6C4A5AA26C
5E6C6D495A6C6D495A6C6D485BDAFC0F5B4890B6C8FCD803EF14FC01C314F02607C03F90
C9FC91CBFCA2120FA37FA213F813FE90B7FC6C16F817FF18C06C836C836C836D828448B9
FC12074848C700031480D81FF8EC003F4848150748486F13C083485A83A56D5D007F1880
6D5D003F18006C6C4B5AD80FFEED1FFC6C6C6CEC7FF86C01E049485A6C01FE011F5B6C6C
B71280010F03FCC7FC010115E0D9000F01FCC8FC3C4F7CB543>I<EB3FF0B5FCA51203C6
FCB3A4EE1FFC93B512C0030314F0030F8092391FE07FFC92393F001FFE037C8003F07FDA
F1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542537BD24B>
I<137F497E487F487F487F487FA76C5B6C5B6C5B6C5B6DC7FC90C8FCADEB3FF0B5FCA512
017EB3B3A6B612E0A51B547BD325>I<EB3FF0B5FCA512017EB3B3B3B1B612F0A51C537B
D225>108 D<D93FF0D91FFCEDFFE0B591B500C0010713FE030302F0011F6D7E030F6E01
7F8092271FE07FFCD9FF037F922A3F001FFE01F8007F0003027C9126FF03E080C602F06D
D90780137FDAF1E0038FC77FDAF3C0159EDAF7806D01BC143F07FC8102FFC75C4A5EA24A
5EA44A5EB3ACB6D8F807B6D8C03FB512FEA567367BB570>I<D93FF0EB1FFCB591B512C0
030314F0030F8092391FE07FFC92393F001FFE0003027C80C602F07FDAF1E081ECF3C0DA
F7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B>I<913801FFE002
1F13FE91B612C0010315F0010F9038807FFC903A1FFC000FFED97FF86D6C7E49486D7F48
496D7F48496D7F4A147F48834890C86C7EA24883A248486F7EA3007F1880A400FF18C0AC
007F1880A3003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C
495BD93FFE011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8FC020113E03A38
7CB643>I<903A3FF001FFE0B5010F13FE033FEBFFC092B612F002F301017F913AF7F800
7FFE0003D9FFE0EB1FFFC602806D7F92C76C7F4A824A6E7F4A6E7FA2717FA285187F85A4
721380AC1A0060A36118FFA2615F616E4A5BA26E4A5B6E4A5B6F495B6F4990C7FC03F0EB
FFFC9126FBFE075B02F8B612E06F1480031F01FCC8FC030313C092CBFCB1B612F8A5414D
7BB54B>I<90397FE003FEB590380FFF80033F13E04B13F09238FE1FF89139E1F83FFC00
03D9E3E013FEC6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA5
5CB3AAB612FCA52F367CB537>114 D<903903FFF00F013FEBFE1F90B7FC120348EB003F
D80FF81307D81FE0130148487F4980127F90C87EA24881A27FA27F01F091C7FC13FCEBFF
C06C13FF15F86C14FF16C06C15F06C816C816C81C681013F1580010F15C01300020714E0
EC003F030713F015010078EC007F00F8153F161F7E160FA27E17E07E6D141F17C07F6DEC
3F8001F8EC7F0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7
FC2C387CB635>I<143EA6147EA414FEA21301A313031307A2130F131F133F13FF5A000F
90B6FCB8FCA426003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6D
EBF0FC6DEBFFF86D6C5B021F5B020313802A4D7ECB34>I<D93FF8913801FFC0B50207B5
FCA50003ED001FC61607B3AE5FA35FA2017F5D173B177B6D6C14F3DC01E313F06D6CD907
C3EBFFC0903A0FFFC03F836D90B51203010114FE6D6C13F8020701E091C7FC42377BB54B
>I<B600F00107B5FCA5C601F8C8EA7FC06EED3F00A26D6C153E187E013F167C6E15FC6D
5E6F13016D5E6F13036D5E8117076D6D5C170F6D6D5C171F6D93C7FC6F5B027F143E6F13
7E023F147C6F13FCA26E6D5A16816EEBC1F016C36E5C16E76E5C16FF6E5CA26E91C8FCA3
6F5AA26F5AA26F5AA26F5AA26F5A6F5A40357DB447>I<B600F00107B5FCA5C601F8C8EA
7FC06EED3F00A26D6C153E187E013F167C6E15FC6D5E6F13016D5E6F13036D5E8117076D
6D5C170F6D6D5C171F6D93C7FC6F5B027F143E6F137E023F147C6F13FCA26E6D5A16816E
EBC1F016C36E5C16E76E5C16FF6E5CA26E91C8FCA36F5AA26F5AA26F5AA26F5AA26F5AA3
5E150F5E151F93C9FC5DD81FC0133E486C137E486C137C486C13FC5D14015D14034A5A6C
48485A49485A263FC07FCAFCEB81FE6CB45A6C13F000035BC690CBFC404D7DB447>121
D E /Fs 33 124 df<140C141C1438147014E0EB01C01303EB0780EB0F00A2131E5BA25B
13F85B12015B1203A2485AA3485AA348C7FCA35AA2123EA2127EA4127CA312FCB3A2127C
A3127EA4123EA2123FA27EA36C7EA36C7EA36C7EA212017F12007F13787FA27F7FA2EB07
80EB03C01301EB00E014701438141C140C166476CA26>40 D<12C07E12707E7E7E120F6C
7E6C7EA26C7E6C7EA21378137C133C133E131E131FA2EB0F80A3EB07C0A3EB03E0A314F0
A21301A214F8A41300A314FCB3A214F8A31301A414F0A21303A214E0A3EB07C0A3EB0F80
A3EB1F00A2131E133E133C137C13785BA2485A485AA2485A48C7FC120E5A5A5A5A5A1664
7BCA26>I<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A31201138012
0313005A1206120E5A5A5A12600B1D78891B>44 D<121EEA7F80A2EAFFC0A4EA7F80A2EA
1E000A0A78891B>46 D<14FF010713E090381F81F890383E007C01FC133F4848EB1F8049
130F4848EB07C04848EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC4815FE
A54815FFB3A46C15FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E00003
15C06D130F6C6CEB1F806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC2844
7CC131>48 D<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6
FCA3204278C131>I<121CA2EA1F8090B712C0A3481680A217005E0038C8120C0030151C
00705D0060153016705E5E4814014B5A4BC7FCC81206150E5D151815385D156015E04A5A
A24A5A140792C8FC5CA25C141E143EA2147E147CA214FCA21301A3495AA41307A6130FAA
6D5AEB01C02A457BC231>55 D<14FF010713E0011F13F890387F80FC9038FC007E48487F
4848EB1F804848EB0FC0000FEC07E0485AED03F0485A16F8007F140190C713FCA25AA216
FE1500A516FFA46C5CA36C7E5D121F7F000F5C6C6C1306150E6C6C5B6C6C5BD8007C5B90
383F01E090390FFF80FE903801FE0090C8FC150116FCA4ED03F8A216F0D80F801307486C
14E0486C130F16C0ED1F80A249EB3F0049137E001EC75A001C495A000F495A3907E01FE0
6CB51280C649C7FCEB1FF028447CC131>57 D<DB0FFE146092B500C013E0020314F0913A
0FFC01FC0191393FC0003E02FFC7EA0F83D903FCEC03C74948EC01E74948EC00FF494815
7F4948153F4948151F49C9120F485A491607120348481603A248481601A248481600A212
3FA2491760127FA31900485AAE6C7EA21960A2123F7FA2001F18E07F000F18C0A26C6C16
0119806C6C160312016DEE07006C6C16066D6C150E6D6C5D6D6C5D6D6C15786D6C5D6D6C
4A5AD900FFEC0780DA3FC0011FC7FCDA0FFC13FC0203B512F0020014C0DB0FFEC8FC3B48
7BC546>67 D<010FB512FEA3D9000313806E130080B3B3AB123F487E487EA44A5A138013
00006C495A00705C6C13076C5C6C495A6CEB1F802603E07FC7FC3800FFFCEB1FE027467B
C332>74 D<B612F8A3000101E0C9FC6C6C5A5CB3B31830A418701860A518E0A3EF01C0A2
17031707A2170F173F177FEE01FF48486C011F1380B9FCA334447CC33D>76
D<B712E016FF17C000019039C0003FF86C6C48EB03FCEE00FF717E717E717E717E717EA2
84170384A760A21707604D5AA24D5A4D5A4DC8FCEE01FEEE07F8EE3FE091B6C9FC16FC91
3980007F80EE0FE0707EEE03FC707E160083717EA2717EA784A71A6084171FA21AE0716C
13C02601FFE002071301B600C01680943801FC03943900FE0700CBEA3FFEF007F843467C
C348>82 D<003FB912F8A3903BF0001FF8001F01806D481303003EC7150048187C007818
3CA20070181CA30060180CA5481806A5C81600B3B3A54B7EED7FFE49B77EA33F447DC346
>84 D<EB07FC90383FFF809038F80FE03903C003F048C66C7E000E6D7ED80FC0137E486C
137F6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03
FC485A485A485A485A127F5B176048C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F
13013A1FE00783F13B07F81E03FF802701FFFC0113003A001FE0007C2B2E7CAC31>97
D<EA01FC12FFA3120712031201B3EC03FC91380FFF8091383C07E091387001F89039FDE0
007E02807F01FFEC1F8091C713C049EC0FE049140717F0A2EE03F8A217FCA2160117FEAB
17FC1603A217F8A2EE07F0A26DEC0FE017C06D141F01FBEC3F80D9F380EB7E00D9E1C05B
9039E0F001F89039C03C07E09039801FFF80C7D803FCC7FC2F467DC436>I<EC7F809038
03FFF090380FC07C90383F000F01FCEB03804848EB01C00003140F4848EB1FE049133F12
0F485AA2485AED1FC0007FEC070092C7FCA290C9FC5AAB7E7FA2123F16307F001F15706C
6C146016E06C6C14C06C6C13010001EC03806C6CEB0700013F131E90381FC078903807FF
F001001380242E7DAC2B>I<167FED3FFFA315018182B3EC7F80903803FFF090380FC07C
90383F000E017E1307496D5AD803F87F48487F5B000F81485AA2485AA2127FA290C8FC5A
AB7E7FA2123FA26C7EA2000F5D7F6C6C5B00035C6C6C9038077F806C6C010E13C0013F01
1C13FE90380FC0F8903803FFE09026007F0013002F467DC436>I<EB01FE903807FFC090
381F03F090387E00FC49137E48487F485A4848EB1F80000F15C049130F121F484814E015
07A2007F15F090C7FCA25AA390B6FCA290C9FCA67EA27FA2123F16306C7E1670000F1560
6D14E06C6C14C0000314016C6CEB03806C6CEB0700013E131E90381F80F8903803FFE001
0090C7FC242E7DAC2B>I<EE0F80D901FCEB7FE0903A0FFF81F0F090393F07E3819039FC
01FF033A01F800FE014848017E13E00007027FC7FC497F000F8149131F001F81A9000F5D
6D133F000792C7FC6D5B0003147E6C6C5B6D485A3903BF07E090380FFF80260701FCC8FC
90CAFCA25AA37F6C7E7F90B512F86C14FF16E06C15F86C6C8048B67E3A07C0000FFF4848
1300003FC8EA3F80003E151F48ED0FC0A2481507A56C150F007C1680007E151F003E1600
6C153E6C6C5CD807E0495AD801F8EB07E0D8007FEB3F8090261FFFFEC7FC010113E02C42
7DAC31>103 D<EA01FC12FFA3120712031201B3EC01FE913807FFC091381E07F0913838
01F802707FECE000D9FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13
FEA32F457DC436>I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCADEA01FC12FFA31207
12031201B3B0487EB512F8A315437DC21C>I<EA01FC12FFA3120712031201B3B3B3A548
7EB512F8A315457DC41C>108 D<D801FC01FFEC1FE000FF010701E0EBFFFC913B0F03F8
01E07F913C3C01FC07803F800007903C7000FE0E001FC0000349D97E1C130F2601FDC0D9
7F38804A143001FFDA3FF06D7E91C75BA2495DA3495DB3A8486C4A6C497EB5D8F81FB500
03B512E0A34B2C7DAB52>I<3901FC01FE00FF903807FFC091381E07F091383801F80007
01707F0003EBE0002601FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F
13FEA32F2C7DAB36>I<EC7F80903803FFF090380FC0FC90383E001F496D7E496D7E4848
6D7E48486D7E48486D7E000F81A24848147E003F157FA290C87E481680A44816C0AA6C16
80A26D147F003F1600A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C
495A013E49C7FC90381FC0FE903807FFF89038007F802A2E7DAC31>I<3901FC03FC00FF
90380FFF8091383C07E091387001F83A07FDE000FE00010180137F01FFEC3F8091C7EA1F
C04915E049140F17F0160717F8160317FCA3EE01FEABEE03FCA3EE07F8A217F0160F6D15
E0EE1FC06D143F17806EEB7E00D9FDC05B9039FCF003F891383C0FE091381FFF80DA03FC
C7FC91C9FCAE487EB512F8A32F3F7DAB36>I<3903F803F000FFEB1FFCEC3C3EEC707F00
07EBE0FF3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA3202C
7DAB26>114 D<90383FE0183901FFFC383907E01F78390F0003F8001E1301481300007C
1478127800F81438A21518A27EA27E6C6C13006C7E13FC383FFFE06C13FC6C13FF6C14C0
6C14E0C614F0011F13F81300EC0FFC140300C0EB01FE1400157E7E153EA27EA36C143C6C
147C15786C14F86CEB01F039F38003E039F1F00F8039E07FFE0038C00FF01F2E7DAC26>
I<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2C648C7FCB3A415
0CAA017E131C017F1318A26D133890381F8030ECC070903807E0E0903801FFC09038007F
001E3E7EBC26>I<D801FC147F00FFEC3FFFA300071401000380000181B3A85EA35DA212
006D5B017E9038077F80017F010E13C06D011C13FE90380FC078903803FFF09026007F80
13002F2D7DAB36>I<B500E0B539E03FFF80A30007903C000FFE000FFC00D803FCD903F8
EB03F8F001E0120103015D6D80000060A26D6E13036DD9037E91C7FCA20280017F5B013F
D9063F1306A2D91FC06E5AED0C1FA2D90FE06E5AED180FA2D907F06E5AED3007A2D903F8
6E5AED6003A2902601FCE06D5AEDC00117FCD900FFECFD80ED800017FF027F92C8FC92C7
7EA26E147E023E143EA2021E143C021C141CA2412C7EAA46>119
D<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E0000150C6D141C6D1418
A26E1338013F1430A26D6C5BA26E13E0010F5CA26D6C485AA2ECF803010391C7FCA29038
01FC06A2ECFE0E0100130CA2EC7F18A215B8EC3FB0A2EC1FE0A36E5AA26E5AA36EC8FCA2
1406A35CA25CA2123C007E5BB4FC5CA25CEAFE01387C0380D87007C9FCEA3C1EEA0FFCEA
03F02E3F7EAA33>121 D<B9FCA23002809B31>123 D E /Ft 77
125 df<4AB4EB0FE0021F9038E03FFC913A7F00F8FC1ED901FC90381FF03FD907F09039
7FE07F80494801FF13FF4948485BD93F805C137F0200ED7F00EF003E01FE6D91C7FC82AD
B97EA3C648C76CC8FCB3AE486C4A7E007FD9FC3FEBFF80A339407FBF35>11
D<4AB4FC021F13C091387F00F0D901FC1338D907F07F4948133E494813FF49485A137F14
00A213FE6F5A163893C7FCAA167FB8FCA33900FE00018182B3AC486CECFF80007FD9FC3F
13FEA32F407FBF33>I<4AB47E021F13F791387F007FD901F85B903807F001EB0FE0EB1F
C0EB3F80137F14008101FE80AEB8FCA3C648C77EB3AE486CECFF80007FD9FC3F13FEA32F
407FBF33>I<4AB4ECFF80021FD9C00F13E0913B7F00F03F8078D901F8903938FE001CD9
07F0D91FF87F4948D97FF0131F49484948EB7F804948484913FF137F02005CA201FE92C7
FC6FED7F0070141C96C7FCAAF13F80BBFCA3C648C76CC7FC197F193FB3AC486C4A6CEB7F
C0007FD9FC3FD9FE1FB5FCA348407FBF4C>I<001E130F397F803FC000FF137F01C013E0
A201E013F0A3007F133F391E600F3000001300A401E01370491360A3000114E04913C000
03130101001380481303000EEB070048130E0018130C0038131C003013181C1C7DBE2D>
34 D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380120313
005A120E5A1218123812300B1C79BE19>39 D<1430147014E0EB01C0EB03801307EB0F00
131E133E133C5B13F85B12015B12035B1207A2485AA348C7FCA35AA2123EA2127EA4127C
A312FCB2127CA3127EA4123EA2123FA27EA36C7EA36C7EA212037F12017F12007F13787F
133E131E7FEB07801303EB01C0EB00E014701430145A77C323>I<12C07E12707E7E121E
7E6C7E7F12036C7E7F12007F1378137C133C133EA27FA3EB0F80A314C0A21307A214E0A4
1303A314F0B214E0A31307A414C0A2130FA21480A3EB1F00A3133EA2133C137C137813F8
5B12015B485A12075B48C7FC121E121C5A5A5A5A145A7BC323>I<121EEA7F8012FF13C0
A213E0A3127FEA1E601200A413E013C0A312011380120313005A120E5A1218123812300B
1C798919>44 D<B512FEA617067F951E>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A
0A798919>I<ED0180ED03C0A215071680A2150F1600A25D151EA2153E153CA2157C1578
15F85DA214015DA214035DA214075DA2140F92C7FCA25C141EA2143E143CA2147C1478A2
14F85CA213015C13035CA213075CA2130F91C8FCA25B131EA2133E133CA2137C1378A213
F85BA212015BA212035BA212075B120F90C9FCA25A121EA2123E123CA2127C1278A212F8
5AA21260225B7BC32D>I<EB01FE90380FFFC090383F03F090387C00F849137C48487F48
487F4848EB0F80A2000F15C04848EB07E0A3003F15F0A290C712034815F8A64815FCB3A2
6C15F8A56C6CEB07F0A3001F15E0A36C6CEB0FC0A26C6CEB1F80000315006C6C133E6C6C
5B017C5B90383F03F090380FFFC0D901FEC7FC263F7DBC2D>I<14C013031307131F137F
EA07FFB5FC139FEAF81F1200B3B3ACEB7FF0B612F8A31D3D78BC2D>I<EB07FC90383FFF
8090B512E03903F01FF839078007FC390F0001FE001E6D7E001C158048EC7FC05AED3FE0
1260B4FC6DEB1FF07FA56C5A6CC7FC120CC813E0153FA216C0157F168015FF16004A5A5D
4A5A4A5A5D4A5A4A5A4AC7FC147E147C5C495AEB03C0495A49C8FC011E14305B13385B49
1460485A485A48C8FC000E15E0001FB6FCA25A4815C0B7FCA3243D7CBC2D>I<EB07FC90
383FFF809038F80FE03901C003F839078001FCD80E007F000C6D7E001C1580D81F80137F
486C14C07FA27F5BA2121F6C5AC8138015FF1600A24A5AA24A5A5DEC07E04A5A023FC7FC
EB1FFCECFF809038000FE0EC07F86E7E6E7E6E7E1680ED7FC0A216E0153FA216F0A2120C
123F487E487EA316E0A249137F6CC713C01270EDFF807E6C491300000F495A6C6C485A39
03F80FF0C6B55A013F1380D907F8C7FC243F7CBC2D>I<150EA2151E153EA2157E15FEA2
14011403157E1406140E140C141814381430146014E014C0EB0180130314001306130E13
0C5B133813305B13E05B485A120390C7FC1206120E120C5A123812305A12E0B8FCA3C8EA
FE00AC4A7E49B6FCA3283E7EBD2D>I<00061403D807C0130F01F813FE90B5FC5D5D5D15
C05D4AC7FC38063FF090C9FCACEB01FE90380FFF8090383E03E090387001F8496C7ED807
C0137E497F90C713800006141FC813C0A216E0150FA316F0A3120C127F7F12FFA416E090
C7121F12EC006015C012700030EC3F8012386CEC7F00001E14FE6C495A3907C003F83903
F00FE0C6B55A013F90C7FCEB07F8243F7CBC2D>I<EC1FE0ECFFF8903803F01E90380FC0
0790391F000380013E1305017EEB1FC049133F4848137F12035B12074848EB3F80ED1F00
001F91C7FC5BA2123FA3485AA214FE903887FF8039FF8F07E090389C01F09038B800FC01
B0137E13F0497F16804914C0A2ED1FE0A34914F0A5127FA6123F6D14E0A2121FED3FC0A2
6C6C1480A20007EC7F006C6C137E6C6C5B6C6C485A90387E07F06DB45A010F1380D903FC
C7FC243F7CBC2D>I<12301238123E003FB612FCA316F85A16F016E00070C812C0006014
01ED038016005D48140E150C151C5DC85A156015E04A5A5D14034AC7FCA2140E141E141C
143CA25CA214F8A2495AA21303A31307A25C130FA3131FA5133FAA6D5A0107C8FC26407B
BD2D>I<EB03FC90381FFF8090387C07E09038F001F83901E0007C48487F48487F48C7FC
ED0F80121E16C0003E1407A4123FA26DEB0F807F6C6C131F6D140001FC133E6C6C5B9038
FF80786C6D5A6CEBF3E06CEBFF806C91C7FC133F6D13C06D7F013F13F801787F48486C7E
3903E01FFF48486C1380260F800313C048487E489038007FE0003E143F007E141F007CEC
0FF01507481403A31501A46C15E0007C1403A2007E15C06C14076CEC0F806DEB1F006C6C
133ED807F05B3901FC03F86CB512E0011F1380D903FCC7FC243F7CBC2D>I<EB03FCEB1F
FF90387E07C09038FC03F048486C7E48486C7E4848137C000F147E4848137F81003F1580
5B007F15C0A2151F12FF16E0A516F0A5127F153FA36C7EA2001F147F120F6C6C13FF6D13
DF000313013900F8039F90387E0F1FD91FFE13E0EB07F090C7FCA2ED3FC0A41680157FD8
0F801400487E486C13FEA24A5A5D49485AEB8007391E000FE04A5A260FC07FC7FC3803FF
FE6C13F838003FC0243F7CBC2D>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB312
1EEA7F80A2EAFFC0A4EA7F80A2EA1E000A2779A619>I<121EEA7F80A2EAFFC0A4EA7F80
A2EA1E00C7FCB3121E127FEAFF80A213C0A4127F121E1200A412011380A3120313005A12
06120E120C121C5A1230A20A3979A619>I<EB1FF890B5FC3903E01FC0390F0007F0001C
EB03F848EB01FC4814FE0068130000FE14FF7E7FA46CC7FC123EC7EA01FEA2EC03FCEC07
F815F0EC0FC0EC1F80EC3F00143E5C147814F85C5C13015CA25C1303A291C7FCA990C8FC
A9EB0780EB1FE0A2497EA46D5AA2EB078020407BBF2B>63 D<ED7FE0913807FFFE91391F
801F809139780001E0D901E0EB0078D90780141E010EC81207496F7E496F7E496F7E4916
7048488248488290C7D83F80130C48902601FFF0130E000E902607E07C7F000C90260FC0
0E7F001C90263F000714800018499038038001003801FED901C013C0003049903800FE00
010181267003F86E13E000601860495AA200E0187000C01830495AA96D7E12E01260A26D
6C167000701860263001FC5C130000386D4914E00018017F4914C0001C6D9038077F8100
0C90270FC00E3F1380000E903A07E07C1FC36C903B01FFF007FF006C903A003F8001FC6D
90CAFC6C7E6C7E13707F6DEE03F06D160F6D6CED3FC0D901E0913801FE00D90078EC1FF0
913A1F8003FF800207B500F8C7FC9126007FFEC8FC3C417BBF47>I<1507A34B7EA34B7E
A24B7EA34B7E156FA2EDEFF815C7A291380187FC1583A291380303FE1501A291380600FF
A34A6D7EA34A6D7EA34A6D7EA20270800260130FA202E0804A1307A201018191B6FCA249
8191C71201A201068182A2496F7EA3496F7EA3496F7EA21370717E13F800014C7ED80FFE
4B7EB500E0010FB512F8A33D417DC044>I<B712FCEEFF8017F00001903980000FF86C6C
C7EA03FE707E701380EF7FC0EF3FE0A2EF1FF0A218F8A3170F171FA318F0A2EF3FE0177F
18C0EFFF804C1300EE03FCEE0FF8EE7FE091B6C7FC17E091C7EA07FCEE01FE933800FF80
EF7FC0EF3FE0EF1FF018F8170F18FC1707A218FEA718FC170FA2EF1FF818F0173FEF7FE0
EFFFC00403138048486C90380FFE00B85A17E094C7FC373E7DBD40>I<DB1FF013069126
01FFFE130E020F9038FF801E91393FF007E0913AFF8000F83ED903FEC7EA3C7ED907F8EC
1EFE49481407D93FE01403495A4948140191C9FC4848167E12034848163E5B000F171EA2
4848160EA2123F5B1806127FA349160012FFAC127F7F1806A2123FA27F001F170E180C6C
7EA20007171C6D16186C6C1638000117306C6C16706E15E06D6CEC01C06D6C1403D90FF0
EC07806D6CEC0F00D903FE141E902600FF80137891393FF007F0020FB512C0020191C7FC
9138001FF837427BBF42>I<B712FCEEFF8017E000019039C0001FF86C6C48EB03FEEE00
FF717E717EEF0FE084717E717E170184717EA21980187F19C0A3F03FE0A519F0AB19E0A5
F07FC0A21980A218FF19004D5AA24D5A6017074D5A4D5AEF7FC04DC7FCEE03FE48486CEB
1FF8B85A178004FCC8FC3C3E7DBD45>I<B912E0A3000101C0C7FC6C6C48141FEF07F017
03170117001870A31830A418181618A41800A21638A2167816F8150391B5FCA3EC800315
0016781638A21618A21803A3180693C7FCA4180E180CA2181CA2183CA2187818F8170117
03170F48486C14FFB912F0A3383E7DBD3E>I<B91280A300019038C000036C6C48EB003F
EF1FC017071703A21701A31700A41860A21630A31800A31670A216F01501150791B5FCA3
EC8007150115001670A21630A693C8FCAF3801FFE0B612F0A3333E7DBD3B>I<B6D8C01F
B512F8A3000101E0C7383FFC0026007F80EC0FF0B3A691B7FCA30280C7120FB3A92601FF
E0EC3FFCB6D8C01FB512F8A33D3E7DBD44>72 D<B612F0A3C6EBF000EB3FC0B3B3B2EBFF
F0B612F0A31C3E7EBD21>I<011FB512FCA3D9000713006E5A1401B3B3A6123FEA7F80EA
FFC0A44A5A1380D87F005B006C130700705C6C495A6C495A000F495A2603C07EC7FC3800
FFF8EB3FC026407CBD2F>I<B600C090381FFFFCA3000101E0C70007138026007F809138
03FE00EF01F818E04D5A604DC7FC170E5F5F17F0EE01C04C5A4CC8FC160E5E5E5E5E4B5A
4B5A4B7E150F4B7E4B7E157FEDEFF8913881C7FCEC838791388703FE91388E01FF149CDA
B8007F02F06D7E5C02806D7E707EA2707E707EA2707E707EA2707F717E84173F717E717E
A2717E848419802601FFE04A13C0B600C090B6FCA3403E7DBD47>I<B612F8A3000101E0
C9FC38007F80B3B0EF0180A517031800A45FA35FA25F5F5F17FE160348486C133FB8FCA3
313E7DBD39>I<B56C93381FFFF06E5EA20001F1F80026006FE0EE6FE0A2D967F016CFA3
D963F8ED018FA2D961FCED030FA3D960FE1506A2027F150CA36E6C1418A36E6C1430A26E
6C1460A36E6C14C0A26E6CEB0180A36E6CEB0300A26E6C1306A3037F5BA26F6C5AA36F6C
5AA26F6C5AA36F6C5AA2923803F980A36FB4C7FCA26F5AA213F0486C147CD807FEEF3FF8
B500F00138011FB512F0A34C3E7DBD53>I<B56C91387FFFF88080D8007F030313006EEC
00FCD96FF815781830EB67FCEB63FE80136101607F6E7EA26E7E6E7EA26E7E6E7EA26E7E
6E7EA26E7F6F7EA26F7E6F7EA26F7E6F7E8215036F7E6F1380A2EE7FC0EE3FE0A2EE1FF0
EE0FF8A2EE07FCEE03FEA2EE01FF7013B0A2EF7FF0173FA2171F170F1707A2170301F015
01487ED807FE1500B500F01570A218303D3E7DBD44>I<ED7FE0913807FFFE91391FC03F
8091397E0007E04948EB03F8D907F0EB00FE4948147F49486E7E49486E7E49C86C7E01FE
6F7E00018349150300038348486F7EA248486F7EA2001F188049167F003F18C0A3007F18
E049163FA300FF18F0AC007F18E06D167FA4003F18C0A26C6CEEFF80A36C6C4B1300A26C
6C4B5A00035F6D150700015F6C6C4B5A6D5E6D6C4A5A6D6C4A5A6D6C4AC7FC6D6C14FED9
01FCEB03F8D9007FEB0FE091391FC03F80912607FFFEC8FC9138007FE03C427BBF47>I<
B712F8EEFF8017E000019039C0003FF86C6C48EB07FCEE01FE707EEF7F80EF3FC018E0A2
EF1FF0A218F8A818F0A2EF3FE0A218C0EF7F80EFFF004C5AEE07FCEE3FF091B612C04CC7
FC0280C9FCB3A73801FFE0B612C0A3353E7DBD3E>I<B712C016FCEEFF800001D9C00013
E06C6C48EB1FF0EE07FCEE01FE707E84717EA2717EA284A760177F606017FF95C7FCEE01
FCEE07F8EE1FE0EEFF8091B500FCC8FC16F091388001FCED003FEE1FC0707E707E831603
83160183A383A484A4841906A28218E0057F130E2601FFE0160CB600C090383FF01C9438
1FF83805071370CA3801FFE09438003F803F407DBD43>82 D<D907FC130C90391FFF801C
017F13F03A01FC03F83C3A03F0003E7CD807C0EB1FFC48481307001F140348C71201003E
1400127E167C007C153C12FCA2161CA36C150CA27EA26C6C14007F7FEA3FF8EBFF806C13
F86CEBFF806C14F06C14FC6C14FF6C15C0013F14E0010714F0EB007F020713F89138007F
FC150FED07FE15031501ED00FFA200C0157FA3163FA27EA36C153EA26C157E167C6C15FC
6C15F86C14016DEB03F001E0EB07E0D8F9F8EB0FC03AF07F803F803AE01FFFFE00010713
F839C0007FC028427BBF33>I<003FB91280A3903AE0007FE00090C76C48131F007EEF0F
C0007C17070078170300701701A300601700A5481860A5C81600B3B14B7E4B7E0107B612
FEA33B3D7DBC42>I<B600C090387FFFF8A3000101E0C70003130026007F80EC00FC1878
1830B3B3A4013F16706E1560A218E0011F5E6E1401130F6E4A5A01074BC7FC6D6C5C6D6C
140E6D6C143C027F5C91393FC001F091390FF00FE00203B51280020049C8FCED1FF03D40
7DBD44>I<B6913807FFFEA3000301E0020013E0C60180ED3F80F01F00017F161E180C6E
151C013F1618A26D6C5DA280010F5EA26E15E001075EA26D6C4A5AA28001014BC7FCA26E
5C6D150681027F5CA26F131C023F1418A26F1338021F143081020F5CA26F13E002075CA2
6E6C485AA215FE020149C8FCA26F5A6E1306A2ED7F8CA216CCED3FD8A216F86F5AA26F5A
A36F5AA36F5AA23F407EBD44>I<B500FE017FB5D88003B5FCA3000301C0010101E0C7EA
7FF86C90C849EC0FE07148EC07807E716C150080017F1906717E6E180E013F190C4D7E80
011F614D7E17676D6C60EFE7FC17C36D6C6084EE01816D6C60A24CC67E6D6C4D5AA20406
EB7F806E17036D96C7FC4CEB3FC003805E027F17064CEB1FE003C0160E023F170C4CEB0F
F015E0021F5F047014F804601307DA0FF05E04E014FC4C1303DA07F85E19FEDBF9801301
DA03FD5EA203FFC812FF6E5FA24B157F020094C8FCA24B81A2037C153E0378151EA20338
151C0330150C58407EBD5D>I<007FB5D8C003B512E0A3C649C7387FFC00D93FF8EC1FE0
6D4815806D6C6EC7FC170E6D6C5C6D6C141817386D6C14306D6D5B17E06E6C5B023F495A
EDE003DA1FF090C8FC020F1306EDF80E6E6C5A1618913803FE386E6C5A16606E13E06F5A
A26F7E6F7EA26F7E4B7EA2ED33FEED71FF156103C07F0201137F03807F4A486C7E5C0206
6D7E4A6D7E141C02186D7E4A6D7E147002606D7E4A6D7F13014A6E7E49C86C7E5B010E6F
7E011E6F7E133FD9FF804A7E00076DEC7FFFB500F80103B512FEA33F3E7EBD44>I<486C
13C00003130101001380481303000EEB070048130E0018130C0038131C00301318007013
3800601330A300E01370481360A400CFEB678039FFC07FE001E013F0A3007F133FA2003F
131F01C013E0390F0007801C1C73BE2D>92 D<EB0FF8EBFFFE3903F01F8039070007E048
6C6C7E9038E001F8D81FF07F6E7EA3157F6C5AEA0380C8FCA4EC1FFF0103B5FC90381FF8
7FEB7F803801FC00EA07F8EA0FE0485A485AA248C7FCEE018012FEA315FFA3007F5BEC03
BF3B3F80071F8300261FC00E13C73A07F03C0FFE3A01FFF807FC3A003FC001F0292A7DA8
2D>97 D<EA01FC12FFA3120712031201B1EC03FC91381FFF8091387C07E09138E001F090
39FDC000FCD9FF80137E91C77E49158049141F17C0EE0FE0A217F0A2160717F8AA17F0A2
160FA217E0161F17C06D1580EE3F006D5CD9FB8013FE9039F1C001F89039E0E003F09039
C0780FC09026801FFFC7FCC7EA07F82D407EBE33>I<49B4FC010F13E090383F00F8017C
131E4848131F4848137F0007ECFF80485A5B121FA24848EB7F00151C007F91C7FCA290C9
FC5AAB6C7EA3003F15C07F001F140116806C6C13036C6CEB0700000314066C6C131E6C6C
133890383F01F090380FFFC0D901FEC7FC222A7DA828>I<ED01FC15FFA3150715031501
B114FF010713C190381F80F190387E003949131FD803F81307485A49130348481301121F
123F5B127FA290C7FCA25AAA7E7FA2123FA26C7E000F14037F000714076C6C497E6C6CEB
1DFFD8007C017913F890383F01E190380FFFC1903A01FE01FC002D407DBE33>I<EB01FE
90380FFFC090383F03F09038FC01F848486C7E4848137E48487F000F158049131F001F15
C04848130FA2127F16E090C7FCA25AA290B6FCA290C9FCA67EA27F123F16606C7E16E000
0F15C06C6C13016DEB03806C6CEB0700C66C130E017E5B90381F80F8903807FFE0010090
C7FC232A7EA828>I<EC1FC0EC7FF8903801F83C903807E07E90380FC0FFEB1FC1EB3F81
1401137FEC00FE01FE137C1500AEB6FCA3C648C7FCB3AE487E007F13FFA320407EBF1C>
I<167C903903F801FF903A1FFF078F8090397E0FCE0F9039F803FC1F3A03F001F80F1700
48486C6CC7FC000F8049137E001F147FA8000F147E6D13FE00075C6C6C485AA23901F803
E03903FE0FC026071FFFC8FCEB03F80006CAFC120EA3120FA27F7F6CB512E015FE6C6E7E
6C15E06C810003813A0FC0001FFC48C7EA01FE003E140048157E825A82A46C5D007C153E
007E157E6C5D6C6C495A6C6C495AD803F0EB0FC0D800FE017FC7FC90383FFFFC010313C0
293D7EA82D>I<EA01FC12FFA3120712031201B1EC01FE913807FFC091381E07E0913878
03F09138E001F8D9FDC07F148001FF6D7E91C7FCA25BA25BB3A6486C497EB5D8F87F13FC
A32E3F7DBE33>I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCACEA01FC127FA3120712
031201B3AC487EB512F0A3143E7DBD1A>I<1478EB01FEA2EB03FFA4EB01FEA2EB007814
00AC147FEB7FFFA313017F147FB3B3A5123E127F38FF807E14FEA214FCEB81F8EA7F0138
7C03F0381E07C0380FFF803801FC00185185BD1C>I<EA01FC12FFA3120712031201B292
387FFF80A392381FFC00ED0FE0168093C7FC151C5D5D5D4A5AEC0780020EC8FC141E143F
4A7E14FF9038FDDFC09038FF9FE0140F9038FC07F001F87F6E7E1401816E7E81826F7E15
1F826F7EA282486C14FEB539F07FFFE0A32B3F7EBE30>I<EA01FC12FFA3120712031201
B3B3B1487EB512F8A3153F7DBE1A>I<2701F801FE14FF00FF902707FFC00313E0913B1E
07E00F03F0913B7803F03C01F80007903BE001F87000FC2603F9C06D487F000101805C01
FBD900FF147F91C75B13FF4992C7FCA2495CB3A6486C496CECFF80B5D8F87FD9FC3F13FE
A347287DA74C>I<3901F801FE00FF903807FFC091381E07E091387803F000079038E001
F82603F9C07F0001138001FB6D7E91C7FC13FF5BA25BB3A6486C497EB5D8F87F13FCA32E
287DA733>I<14FF010713E090381F81F890387E007E01F8131F4848EB0F804848EB07C0
4848EB03E0000F15F04848EB01F8A2003F15FCA248C812FEA44815FFA96C15FEA36C6CEB
01FCA3001F15F86C6CEB03F0A26C6CEB07E06C6CEB0FC06C6CEB1F80D8007EEB7E009038
3F81FC90380FFFF0010090C7FC282A7EA82D>I<3901FC03FC00FF90381FFF8091387C0F
E09138E003F03A03FDC001FC6CB4486C7E91C7127F49EC3F805BEE1FC017E0A2EE0FF0A3
EE07F8AAEE0FF0A4EE1FE0A2EE3FC06D1580EE7F007F6E13FE9039FDC001F89039FCE007
F09138780FC0DA1FFFC7FCEC07F891C9FCAD487EB512F8A32D3A7EA733>I<02FF130C01
07EBC01C90381F80F090397F00383C01FCEB1C7CD803F8130C4848EB0EFC150748481303
121F485A1501485AA448C7FCAA6C7EA36C7EA2001F14036C7E15076C6C130F6C6C130D6C
6C133DD8007E137190383F81E190380FFF81903801FE0190C7FCAD4B7E92B512F8A32D3A
7DA730>I<3901F807E000FFEB1FF8EC787CECE1FE3807F9C100031381EA01FB1401EC00
FC01FF1330491300A35BB3A5487EB512FEA31F287EA724>I<90383FC0603901FFF8E038
07C03D381F000F003E1303003C1301127C0078130012F81560A27E7E7E6D1300EA7FF8EB
FFC06C13F86C13FE6C7F6C1480000114C0D8003F13E0010313F0EB001FEC0FF800C01303
A214017E1400A27E15F07E6C130115E06CEB03C039FF80078039F1E01F0038E0FFFC38C0
1FE01D2A7DA824>I<130CA5131CA4133CA2137CA213FC120112031207001FB512C0B6FC
A2D801FCC7FCB3A21560A9000014E06D13C0A2EB7F01013F1380EB1F83903807FF00EB01
FC1B397EB723>I<D801FC14FE00FF147FA3000714030003140100011400B3A51501A315
03120015076DEB06FF017E010E13806D4913FC90381FC078903807FFE00100903880FE00
2E297DA733>I<B539E007FFE0A32707FE000113006C48EB007C1678000115707F000015
60A2017F5CA2EC8001013F5CA26D6C48C7FCA26E5A010F1306A26D6C5AA2ECF81C010313
18A26D6C5AA2ECFE7001001360A2EC7FC0A36E5AA26EC8FCA3140EA22B287EA630>I<B5
3BC3FFFE01FFF8A33D0FFE003FF0007FC06C48D91FC0EB1F800003020F15000001170E70
130C15076C6C6E5BA27F6D6E5B150D02801570013F6E1360151802C015E0011FD938FE5B
ED307ED90FE090387F0180ED603FA2D907F00283C7FCEDC01F02F81487010315C69138F9
800F02FD14CED901FF14ECED00076D15F84A1303A2027E5C027C1301A2023C5C02381300
02185C3D287EA642>I<B539F01FFFE0A300039039C007FE00C690388003F8D97F0013E0
02805BD93FC05B011F49C7FC90380FE00EECF00C6D6C5A010313386D6C5A6E5A6D6C5A6E
5A143F81141F6E7E4A7E4A7E1473EC61FCECC1FE903801C0FF49487E49486C7E01068001
0E6D7E49130F013C6D7E017C80D801FC80D80FFE497EB590383FFFF8A32D277FA630>I<
B539E007FFE0A32707FE000113006C48EB00FC0001157816706C7E16607F6D5CA26D6C48
5AA2ECC003011F91C7FCA290380FE006A2ECF00E0107130C14F801035BA2ECFC38010113
3014FE01005BA2EC7FC0A36E5AA26EC8FCA3140EA2140CA2141C1418A25CA20018137000
7E1360B413E05C13015C4848C9FCEA7E07EA700EEA383CEA1FF8EA07E02B3A7EA630>I<
001FB61280A2EBE00090C71300001E495A001C495A12184A5A0038495A141F00305C4A5A
147F5D4AC7FCC6485AA2495A495A130F5C495A90393FC00180A2EB7F80EBFF005A5B4848
13031207491400485A48485BA248485B4848133F00FF14FF90B6FCA221277EA628>I<B8
12F0A22C0280982D>I<BE12C0A25A0280985B>I E /Fu 2 117 df<137CEA0FFCA2C65A
A21201A25BA21203A25BA21207A2EBC1F8EBC7FE380FDE1F9038F80F8013E0EBC007381F
800FA21300A25AEC1F00123EA2007E133EA2007C140C147C00FC141814F8481430147815
E048EB3FC048EB1F001E287BA727>104 D<131C133C137CA45BA4485AB512E0A23801F0
00485AA4485AA4485AA448C7FC1460A214C0EA3E011480381E0700EA1F0EEA0FF8EA03F0
13247EA319>116 D E /Fv 3 54 df<13381378EA01F8121F12FE12E01200B3AB487EB5
12F8A215267BA521>49 D<13FF000313E0380E03F0381800F848137C48137E00787F12FC
6CEB1F80A4127CC7FC15005C143E147E147C5C495A495A5C495A010EC7FC5B5B90387001
8013E0EA0180390300030012065A001FB5FC5A485BB5FCA219267DA521>I<0018130C00
1F137CEBFFF85C5C1480D819FCC7FC0018C8FCA7137F3819FFE0381F81F0381E0078001C
7F0018133EC7FC80A21580A21230127C12FCA3150012F00060133E127000305B001C5B38
0F03E03803FFC0C648C7FC19277DA521>53 D E /Fw 62 123 df<DA0FF813FC91397FFF
07FF903B01F807DF83C0903A07E001FF0F903B1F8007FE1FE090393F000FFC137E16F85B
9338F007804848010790C7FC1503ACB812F8A32801F80003F0C7FCB3AB486C497E267FFF
E0B512F0A3333B7FBA30>11 D<EC0FFC91387FFF70903901F803F0903807E00790381F80
0FEB3F00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267FFFE0B512C0
A32A3B7FBA2E>13 D<001C131C007F137F39FF80FF80A26D13C0A3007F137F001C131C00
001300A40001130101801380A20003130301001300485B00061306000E130E485B485B48
5B006013601A197DB92A>34 D<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485A
A2485AA212075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA2
7F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20
>40 D<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA213
1F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C13
78A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<15301578B3A6007F
B812F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41>43 D<121C127FEAFF80A213
C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A12600A19798817>I<EB
03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C48487FA248C77EA2
481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C15006D5B000F14
3EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A7DB72A>48
D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C3879B72A>
I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E123000706D7E
126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D140F4A5A4A5A
92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B49130348481400485A485A00
0EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C03901F80FF039
03C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401A25D4A5AA24A
5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A216C0A215
3F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF006C495A121E39
0F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>I<1538A2157815F8
A2140114031407A2140F141F141B14331473146314C313011483EB030313071306130C13
1C131813301370136013C01201EA038013005A120E120C5A123812305A12E0B712F8A3C7
3803F800AB4A7E0103B512F8A325397EB82A>I<0006140CD80780133C9038F003F890B5
FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE9038780F803907E007E09038
8003F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490C71300485C12E00060
5C12700030495A00385C6C1303001E495A6C6C485A3907E03F800001B5C7FC38007FFCEB
1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90383F800790387E001F
49EB3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2485AA3127F90C9FCEB
01FC903807FF8039FF1E07E090383801F0496C7E01607F01E0137E497FA249148016C015
1FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B15FE6C6C5B6C6C485A
3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>I<12301238123E003FB612E0A3
16C05A168016000070C712060060140E5D151800E01438485C5D5DC712014A5A92C7FC5C
140E140C141C5CA25CA214F0495AA21303A25C1307A2130FA3495AA3133FA5137FA96DC8
FC131E233B7BB82A>I<EB03F8EB1FFF017F13C09038FC07F03901E001F848486C7E4848
137C90C77E48141E000E141F001E80A3121FA27F5D01E0131E6C6C133E01FC133C6D5B6C
6C6C5AECC1E06CEBF3C06C01FFC7FC6C5BEB3FFF6D13C081017F13F801F07F3903E07FFE
3907801FFF48486C1380481303003E6D13C0003CEB007F007C143F0078EC0FE000F81407
5A1503A21501A36C15C012781503007C15806CEC07006C5C6C6C131ED807E0137C3903F8
03F0C6B55A013F1380D907FCC7FC233A7DB72A>I<EB03F8EB1FFF017F13C09038FC07E0
3903F803F048486C7E48486C7E49137E121F48487FA2007F158090C7FCA248EC1FC0A616
E0A56C143FA27F123F001F147FA26C6C13FF6C6C13DF000313013901F0039F3900FC0F1F
D93FFC13C0EB07F090C7FC153F1680A316005D000F147E487E486C5BA24A5A4A5A49485A
6C48485A001C495A260F807FC7FC3807FFFC000113F038003FC0233A7DB72A>I<007FB8
12F8B912FCA3CCFCAEB912FCA36C17F836167B9F41>61 D<1538A3157CA315FEA34A7EA3
4A6C7EA202077FEC063FA2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A202707FEC
6003A202C07F1501A2D901807F81A249C77F167FA20106810107B6FCA24981010CC7121F
A2496E7EA3496E7EA3496E7EA213E0707E1201486C81D80FFC02071380B56C90B512FEA3
373C7DBB3E>65 D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E707EA2
707EA283A75F16035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1FE0EE
07F0707E707E83707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF8486DEB
7FF0B812C094C7FC16F832397DB83B>I<913A01FF800180020FEBE003027F13F8903A01
FF807E07903A03FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE153F
12014848151F4848150FA248481507A2485A1703123F5B007F1601A35B00FF93C7FCAD12
7F6DED0180A3123F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D00001618017F15
386D6C5CD91FE05C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC020F13
F002011380313D7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA3FE0EE0FF0
EE03F8707E707E177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0F
F0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC
16F816C036397DB83F>I<B812FCA30001903880000F6C90C71201EE007E173E171E170E
A31706A317078316C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A21500A2
1860A318E093C712C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9FCA3
33397DB839>I<B812F8A30001903880001F6C90C71201EE00FC177C173C171CA2170CA4
170E1706A2ED0180A21700A41503A21507151F91B5FCA3EC001F15071503A21501A692C8
FCAD4813C0B612C0A32F397DB836>I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A
397EB81E>73 D<B649B5FCA3000101809038007FF06C90C8EA3F80053EC7FC173C17385F
5F4C5A4C5A4CC8FC160E5E5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E
140E4A6C7E4A6C7E14704A6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707E
A2707E707EA2707E707F8484486D497FB6011FEBFF80A339397DB841>75
D<B612E0A3000101C0C8FC6C90C9FCB3AD1718A517381730A31770A317F0A21601160316
0FEE1FE0486D13FFB8FCA32D397DB834>I<B5933807FFF86E5DA20001F0FC002600DFC0
ED1BF8A2D9CFE01533A3D9C7F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2
027F1406A36E6C130CA36E6C1318A26E6C1330A36E6C1360A26E6C13C0A3913901FC0180
A3913900FE0300A2ED7F06A3ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D4849
7EB500C00203B512F8A2ED018045397DB84C>I<B5913807FFFE8080C69238007FE06EEC
1F80D9DFF0EC0F001706EBCFF8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E8114
0F6E7E8114036E7E168080ED7FC016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F
1386A2EE7FC6EE3FE6A2EE1FF6EE0FFEA216071603A216011600A2177E486C153E487ED8
0FFC151EB500C0140EA2170637397DB83E>I<EC03FF021F13E09138FE01FC903901F800
7ED907E0EB1F8049486D7ED93F80EB07F049C76C7E01FE6E7E48486E7E49157E0003167F
4848ED3F80A24848ED1FC0A2001F17E049150F003F17F0A3007F17F8491507A300FF17FC
AC007F17F86D150FA3003F17F0A26C6CED1FE0A36C6CED3FC0000717806D157F00031700
6C6C15FEA26C6C4A5A017F4A5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC9039
00FE01FC91381FFFE0020390C8FC363D7BBA41>I<B712C016F816FE000190398001FF80
6C90C7EA3FC0EE0FE0EE07F0EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817
F0EE0FE0EE3FC0923801FF0091B512FC16F091C9FCB3A5487FB6FCA330397DB839>I<B6
12FEEDFFE016F8000190388007FE6C90C76C7EEE3FC0707E707E707EA2707EA283A65FA2
4C5AA24C5A4C5AEE3F8004FFC8FCED07FC91B512E05E9138000FF0ED03F8ED00FE82707E
707EA2161F83A583A6F00180A217F8160F1803486D01071400B66D6C5A04011306933800
FE0ECAEA3FFCEF07F0393B7DB83D>82 D<D90FF813C090383FFE0190B512813903F807E3
3907E000F74848137F4848133F48C7121F003E140F007E1407A2007C140312FC1501A36C
1400A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F1480
010714C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C01403A21501A37EA216
F07E15036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8
010F13E0D8C00190C7FC253D7CBA2E>I<003FB812E0A3D9C003EB001F273E0001FE1303
48EE01F00078160000701770A300601730A400E01738481718A4C71600B3B0913807FF80
011FB612E0A335397DB83C>I<B6903807FFFEA3000101809038007FE06C90C8EA1F80EF
0F001706B3B2170E6D150C80171C133F17186D6C14385F6D6C14F06D6C5C6D6C495A6D6C
EB07806D6C49C7FC91387F807E91381FFFF8020713E09138007F80373B7DB83E>I<B500
FC91387FFF80A30003018091380FFC006C90C8EA07E0715A6C705A6E1403017F93C7FCA2
80013F1506A26E140E011F150C80010F5DA28001075DA26E147001031560A26D6C5CA280
6D4A5AA2ED8003027F91C8FCA291383FC006A215E0021F5BA2EDF01C020F1318A26E6C5A
A215FC02035BA2EDFEE002015BA26E6C5AA36FC9FCA3153EA2151CA3393B7EB83E>I<B5
00FE91383FFFE0A3000301E0913807FE00C649EC03F0017F6F5A606D6C5D6D6C140395C7
FC6D6C1406A26D6C5C6D6C141C17186D6C143817306D6D5B6E6C13E05F91383FE0015F91
381FF003DA0FF890C8FC1606913807FC0E160C913803FE1C913801FF185E6E13B016E015
7F6F5AB3A24B7E023FB512C0A33B397FB83E>89 D<390180018000031303390700070000
0E130E485B0018131800381338003013300070137000601360A200E013E0485BA400CE13
CE39FF80FF806D13C0A3007F137FA2393F803F80390E000E001A1974B92A>92
D<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5A
C8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA314
01A26C13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007
C026277DA52A>97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F
809039F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16
FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E9038
00FFF8C7EA1FC0283B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F8
3907E001FC380FC003A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127F
A26C14067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381F
FF00EB07F81F277DA525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F
9038F801EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA12
7E127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90
381FFE0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001
F0D807E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5
127EA2127FA26C14037F001F14076C6C13060007140E6D131CD801F013386C6C13709038
7E03E090381FFF80903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F8790
383F0FF0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8
A31C3B7FBA19>I<ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903
E007C03A07C003E010000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D
48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815
C03A0F80007FE048C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0
003F1407D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A
>I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF7
0013FE496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE0
487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<
EA03F012FFA3120F1203B1913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC
141E1438147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E81140015
7E157F811680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>107
D<EA03F012FFA3120F1203B3B3AD487EB512C0A3123A7EB917>I<2703F00FF0EB1FE000
FFD93FFCEB7FF8913AF03F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013
CE01FE14DC49D907F8EB0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA3
40257EA445>I<3903F00FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F700
13FE496D7EA25BA35BB3A3486C497EB500C1B51280A329257EA42E>I<EB03FE90380FFF
8090383E03E09038F800F84848137C48487F48487F4848EB0F80001F15C090C712074815
E0A2007EEC03F0A400FE15F8A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D
131F6C6CEB3F006C6C137EC66C13F890387E03F090381FFFC0D903FEC7FC25277EA52A>
I<3903F01FE000FFEB7FF89038F1E07E9039F3801F803A07F7000FC0D803FEEB07E049EB
03F04914F849130116FC150016FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB
0FE001F614C09039F7803F009038F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328
357EA42E>I<3807E01F00FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE9038
EC03E09038FC0080491300A45BB3A2487EB512F0A31C257EA421>114
D<EBFF03000313E7380F80FF381E003F487F487F00707F12F0A2807EA27EB490C7FCEA7F
E013FF6C13E06C13F86C7F00037FC67F01071380EB007F141F00C0EB0FC01407A26C1303
A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038C03F801A277DA521>I<1318A5
1338A31378A313F8120112031207001FB5FCB6FCA2D801F8C7FCB215C0A93800FC011580
EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I<D803F0EB07E000FFEB01FFA3000F
EB001F00031407B3A4150FA3151F12016D133F0000EC77F86D9038E7FF8090383F03C790
381FFF87903A03FC07E00029267EA42E>I<B538803FFEA33A0FF8000FF06C48EB07E000
03EC03C06D148000011500A26C6C1306A26D130E017E130CA26D5BA2EC8038011F1330A2
6D6C5AA214E001075BA2903803F180A3D901FBC7FCA214FF6D5AA2147CA31438A227257E
A32C>I<B53A1FFFE03FFEA3260FF8009038000FF86C48017EEB03E018C00003023EEB01
80A26C6C013FEB0300A36C6CEC8006156FA2017E9038EFC00C15C7A2D93F016D5A158302
81EBF038D91F831430150102C3EBF87090260FC6001360A2D907E66D5A02EC137CA2D903
FCEB7F804A133FA2010192C7FC4A7FA20100141E4A130E0260130C37257EA33C>I<B538
807FFFA33A03FE003FF00001EC1F80000092C7FC017E131C6D13186D6C5AECC070010F5B
6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E8114CF903801C7E090380383F09038
0703F8EB0601496C7E011C137E49137F01787F496D7E486C80000FEC3FF0D8FFFE90B512
80A329247FA32C>I<B538803FFEA33A0FF8000FF06C48EB07C00003EC03806C7E16007F
00001406A2017E5BA2137F6D5BA26D6C5AA2ECC070010F1360A26D6C5AA214F101035BA2
D901FBC7FCA214FF6D5AA2147CA31438A21430A214701460A25CA2EA7C0100FE5B130391
C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357EA32C>I<003FB512FCA2EB8003D83E
0013F8003CEB07F00038EB0FE012300070EB1FC0EC3F800060137F150014FE495AA2C648
5A495AA2495A495A495AA290387F000613FEA2485A485A0007140E5B4848130C4848131C
A24848133C48C7127C48EB03FC90B5FCA21F247EA325>I E /Fx
2 14 df<147014F8A81470007815F0007C1401B4EC07F8D87F80EB0FF0D83FE0EB3FE0D8
0FF0EB7F80D803F8EBFE003900FE73F890383F77E090380FFF80D903FEC7FCEB00F8EB03
FE90380FFF8090383F77E09038FE73F83903F870FED80FF0EB7F80D83FE0EB3FE0D87F80
EB0FF0D8FF00EB07F8007CEC01F000781400C7140014F8A81470252B7AAD32>3
D<933807FFF0047F13FF0303B612E0031F15FC923A7FFC001FFF912601FFC0010113C0DA
07FEC8EA3FF0DA0FF0ED07F8DA1FC0ED01FC027FCA127F02FCEF1F804948717E4948717E
D907C0EF01F04948717E49CC127C013E85498501788501F8864848737E49190300038748
48737E491900000F8790CE1278A2481B7C001E1B3C003E1B3E003C1B1EA3007C1B1F0078
87A400F81C80481B07AC6C1B0F00781C00A4007C63003C1B1EA3003E1B3E001E1B3C001F
1B7C6C1B78A26D1AF80007636D19016C6C4F5A0001636D19076C6C4F5A017897C7FC017C
616D193E6D616D6C606D6C4D5AD903F0EF07E06D6C4D5A6D6C4D5A027F057FC8FCDA1FC0
ED01FCDA0FF0ED07F8DA07FEED3FF0912601FFC0903801FFC09126007FFC011F90C9FC03
1FB612FC030315E0DB007F91CAFC040713F0595C7BC664>13 D E
/Fy 17 118 df<4AB4FC021F13F0027F13FC903901FF01FF903A03F8003F80D90FE0EB0F
E049486D7E49486D7E49C76C7E017E140049157E0001167F49810003178049151F000717
C049150F000F17E0A3001F17F0491507A2003F17F8A54848ED03FCA700FF17FEB3A8007F
17FCA56D1507A3003F17F8A4001F17F06D150FA2000F17E0A36C6CED1FC0A2000317806D
153F000117006D5D6C6C15FE017E5D017F14016D6C495A6D6C495A6D6C495AD903F8EB3F
806DB448B4C7FC9039007FFFFC021F13F0020190C8FC37607BDD42>48
D<EC0FFE91387FFFE00103B512F8010F14FE903A1FE00FFF8090263E000113E001FC6D6C
7ED801F06E7E4848EC0FFC496E7E48486E7E48C81480000E81001E6F13C0121C003CEE7F
E012380078EE3FF01270A3B46CED1FF813E0A27FA66C5A6C5A0006C913F0CA123FA318E0
177FA2EFFFC0A218805E18004C5A16075F4C5A5F161F4C5A4C5A5F4CC7FC4B5A4B5A5E4B
5A4B5A4B5A4B5A4BC8FC157E5D4A5A4A5A4A5A4A5A4A5A4AC9FC143E4A15385C495A495A
49481570495A49C9FC131E5B4916F05B484816E0484815014848150348B8FCA25A5A5AB9
12C0A4355E7ADD42>50 D<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F00C7FCB3B3
A2120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C3E74BD24>58
D<170FA34D7EA24D7EA34D7EA34D7EA34C7F17DFA29338039FFC178FA29338070FFE1707
040F7FEE0E03A2041E80EE1C01A2043C80EE3800A24C80187FA24C80183FA24B4880181F
0303814C130FA203078193C71207A24B81030E80A24B8284A24B8284A24B82197F03F082
4B153FA20201834B151FA202038392B8FCA24A83A292C91207020E8385A24A8485023C84
023882A20278840270177FA202F0844A173FA24948841A1FA24948841A0FA249CB7F1A07
4985865B496C85497E48486C4D7F000F01F8051F13F0B60407B612F0A45C657DE463>65
D<B712C0A4C66CEB8000D91FFEC7FC6D5AB3B3B3B3AE497E90387FFF80B712C0A422627A
E12F>73 D<B500FC071FB51280A36E61C6F58000013F51C7FCD91DFFF177FCA2011C6D18
E7A36E6CEF01C7A36E6CEF0387A36E6CEF0707A26E6C170EA36E6C171CA36E6C1738A36E
6C1770A26E6D16E0A36F6CED01C0A36F6CED0380A36F6CED0700A26F6C150EA36F6C5DA3
6F6C5DA36F6C5DA26F6D5CA3706C495AA3706C495AA3706C49C7FCA2706C130EA3706C5B
A3706C5BA3706C5BA3706D5AA294387FC1C0A394383FE380A3DD1FF7C8FCA3EF0FFEA201
3E6F5AA2137F715A2601FFC04F7E000701F896383FFF80B66C6D48023FB61280A3715A69
6278E17A>77 D<B912C018FEF0FFC019F0C601FCC813FCD93FF8ED0FFF011F04037F0600
7FF13FF0737E737E1907737E86731380A27313C0A31BE01A7FA21BF0A91BE0A21AFF1BC0
A34F13801B00614F5A624F5A4F5AF17FE04F5A060390C7FCF01FFE943801FFF891B812E0
96C8FC18F802F8CCFCB3B3A4497E90B5FCB7FCA44C6279E15A>80
D<B812FCEFFFE018FCF0FF80C601FCC7000F13E0D93FF89138007FF8011FEE1FFCF007FF
06017F727FF13FE0737E86737E737EA2868587A28587A96361A298C8FC6162624F5A191F
4F5A4F5AF1FF804E90C9FCF007FEF01FF8F0FFE0050F138091B700FCCAFC18E08402F8C7
EA1FFE943801FF80716C7EF03FF0727EF007FC727E85727F8486737EA3737EAA86AA1DE0
86191FA3070F14017414C007071403496C8390B570EC0780B76F9038800F00736D5A9738
3FF03E97380FFFFCCD000313F09738003FC05B6479E162>82 D<DA07FF1403023F01F05B
49B512FC010702FF5B90260FFC0013C0D93FE090380FF01FD97F80EB03F801FEC86C5A48
48157E4848ED1F7F48486F5A4848815B001F824981003F8290CAFC4883A2007E83A212FE
84A384A27EA36D82A26C7EA26D93C7FC6C7E7F7F6C7E6D7E6C13E06C13FCECFFC06C14F8
6CECFF806C15F86DECFF80011F15E06D15F8010315FE01006F7E021F81020181DA003F80
030380DB003F7F04037FEE007FEF1FFF71138017037113C083A2F07FE0183FA2181F00E0
18F0180FA41807A27EA47E19E0180F7E19C07E6C171F19806D163F6D17006D5E6D16FE48
6C5E6D4B5AD8FC7F1503D91F80EC0FF026F80FE04A5AD907FCEC7F8029F001FFE003FFC7
FC6D6CB512FC48011F14F0020314C0489026001FFEC8FC3C667AE349>I<EC3FF0903803
FFFE010F6D7E90393FC03FE090397E0007F801F86D7ED801E06D7E48486D7E48486E7E48
C86C7E7F01F06E7E487E6D6E7EA3707EA36C5AEA03E0C9FCA6167FED7FFF020FB5FC9138
7FF807903801FF80903807FC00EB1FF0EB7FC0495AD803FEC7FC485A120F5B485A485AA2
484817E0A312FF5BA2160FA3161F6D141B007F153B16736D913971FC01C06C6C14E1001F
EC01C1D80FFC903A0780FE03806C6C903A0F00FF07002701FF807E6DB4FC27007FFFF86D
5A011F01E0EB1FF8010190C7EA07E03B417ABF42>97 D<133C13FF487F487FA66C5B6C90
C7FC133C90C8FCB3A2EB03C0EA07FF127FA41201EA007FA2133FB3B3AC497E497EB612E0
A41B5F7DDE23>105 D<EB03C0EA07FFB5FCA41201EA007FA2133FB3B3B3B3AD497E497E
B612F0A41C647DE323>108 D<D903C0D9FFC0EC07FED807FF010301F891381FFFC0B501
0F01FE027F13F0923D3F00FF8001F807FC0378903B3FC003C001FEDAC1E090261FE00FC7
7E0001D9C3C090260FF01E6E7ED8007F49902607F81C6E7E02C7C75CD93FCE6E6C486E7E
02CC166002DC16E002D85E02F8DA01FF6F7E4A5EA24A93C8FCA44A5DB3B3496C4A6C4B7E
496C4A6D4A7EB6D8F007B6D8803FB512FCA4663F7CBE6F>I<EDFF80020F13F8023F13FE
9139FF007F80D903FCEB1FE0D907F0EB07F0D90FC0EB01F8D93F80EB00FE49C8127F017E
81496F7E48486F7E00038349150700078348486F7EA2001F83491501A2003F83A348486F
7EA400FF1880AC007F1800A26D5DA2003F5FA36C6C4B5AA36C6C4B5A00075FA26C6C4B5A
6C6C4B5AA26C6C4B5A017F4BC7FC6D6C14FE6D6C495AD90FF0EB07F8D903FCEB1FE0D900
FFEB7F806EB5C8FC020F13F8020113C039417CBF42>111 D<9039078003F8D807FFEB0F
FFB5013F13C092387C0FE0913881F01F9238E03FF00001EB838039007F8700148FEB3F8E
029CEB1FE0EE0FC00298EB030002B890C7FCA214B014F0A25CA55CB3B0497EEBFFF8B612
FCA42C3F7CBE33>114 D<1438A71478A414F8A31301A31303A21307130F131FA2137F13
FF1203000F90B6FCB8FCA3260007F8C8FCB3AE17E0AE6D6CEB01C0A316036D6C14801607
6D6C14006E6C5A91383FC01E91381FF07C6EB45A020313E09138007F802B597FD733>
116 D<D903C0150FD807FFED1FFFB50203B5FCA40001ED0007D8007F1501A2013F81B3B2
5FA35FA35F011F15066E140E5F130F6E4A7F01075D6D6C494813E0D901FE4948EBFFC090
3A00FFC01F8091393FFFFE00020F13F8020001C0EC800042407DBE49>I
E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 887 463 a Fy(SPIM)44 b(S20:)58 b(A)44 b(MIPS)f(R2000)f(Sim)l
(ulator)3041 411 y Fx(\003)1183 646 y Fw(\\)1251 613
y Fv(1)p 1234 627 67 4 v 1234 674 a(25)1311 596 y Fu(th)1406
646 y Fw(the)28 b(p)r(erformance)f(at)g(none)h(of)f(the)h(cost")1654
898 y Ft(James)j(R.)f(Larus)1616 1014 y(larus@cs.wisc.edu)1335
1131 y(Computer)g(Sciences)g(Departmen)m(t)1302 1247
y(Univ)m(ersit)m(y)g(of)g(Wisconsin{Madison)1465 1363
y(1210)i(W)-8 b(est)32 b(Da)m(yton)g(Street)1456 1479
y(Madison,)e(WI)g(53706,)j(USA)1707 1596 y(608-262-9519)1050
1799 y Fs(Cop)m(yrigh)m(t)1536 1796 y(c)1508 1799 y Fx(\015)o
Fs(1990{1997)e(b)m(y)i(James)g(R.)f(Larus)913 1915 y(\(This)h(do)s
(cumen)m(t)g(ma)m(y)f(b)s(e)h(copied)f(without)g(ro)m(y)m(alties,)971
2028 y(so)h(long)e(as)i(this)f(cop)m(yrigh)m(t)h(notice)f(remains)g(on)
g(it.\))75 2550 y Fr(1)135 b(SPIM)75 2753 y Ft(SPIM)40
b(S20)h(is)e(a)i(sim)m(ulator)f(that)h(runs)e(programs)h(for)g(the)h
(MIPS)f(R2000/R3000)k(RISC)39 b(computers.)3815 2720
y Fq(1)75 2866 y Ft(SPIM)f(can)h(read)f(and)g(immediately)f(execute)j
(\014les)e(con)m(taining)g(assem)m(bly)g(language.)66
b(SPIM)38 b(is)f(a)i(self-)75 2979 y(con)m(tained)e(system)g(for)g
(running)d(these)j(programs)g(and)f(con)m(tains)h(a)h(debugger)e(and)h
(in)m(terface)g(to)h(a)f(few)75 3092 y(op)s(erating)30
b(system)g(services.)216 3205 y(The)44 b(arc)m(hitecture)h(of)g(the)f
(MIPS)g(computers)g(is)g(simple)e(and)i(regular,)j(whic)m(h)c(mak)m(es)
i(it)f(easy)h(to)75 3318 y(learn)30 b(and)h(understand.)42
b(The)30 b(pro)s(cessor)h(con)m(tains)h(32)g(general-purp)s(ose)e
(registers)h(and)f(a)i(w)m(ell-designed)75 3431 y(instruction)c(set)j
(that)g(mak)m(e)h(it)e(a)g(propitious)e(target)k(for)e(generating)h(co)
s(de)g(in)e(a)i(compiler.)216 3544 y(Ho)m(w)m(ev)m(er,)g(the)c(ob)m
(vious)g(question)g(is:)38 b(wh)m(y)28 b(use)f(a)h(sim)m(ulator)e(when)
h(man)m(y)g(p)s(eople)g(ha)m(v)m(e)i(w)m(orkstations)75
3657 y(that)i(con)m(tain)g(a)g(hardw)m(are,)g(and)f(hence)h
(signi\014can)m(tly)e(faster,)i(implemen)m(tation)f(of)g(this)g
(computer?)41 b(One)75 3770 y(reason)32 b(is)f(that)h(these)g(w)m
(orkstations)g(are)g(not)g(generally)f(a)m(v)-5 b(ailable.)45
b(Another)31 b(reason)h(is)f(that)h(these)g(ma-)75 3882
y(c)m(hine)k(will)e(not)j(p)s(ersist)f(for)g(man)m(y)h(y)m(ears)h(b)s
(ecause)e(of)h(the)g(rapid)e(progress)i(leading)e(to)j(new)e(and)h
(faster)75 3995 y(computers.)47 b(Unfortunately)-8 b(,)34
b(the)e(trend)g(is)g(to)i(mak)m(e)f(computers)g(faster)g(b)m(y)f
(executing)h(sev)m(eral)g(instruc-)75 4108 y(tions)k(concurren)m(tly)-8
b(,)39 b(whic)m(h)c(mak)m(es)j(their)f(arc)m(hitecture)h(more)f
(di\016cult)e(to)j(understand)d(and)i(program.)75 4221
y(The)30 b(MIPS)g(arc)m(hitecture)h(ma)m(y)g(b)s(e)e(the)i(epitome)f
(of)h(a)g(simple,)d(clean)j(RISC)e(mac)m(hine.)216 4334
y(In)e(addition,)f(sim)m(ulators)g(can)i(pro)m(vide)e(a)i(b)s(etter)g
(en)m(vironmen)m(t)f(for)g(lo)m(w-lev)m(el)g(programming)f(than)h(an)75
4447 y(actual)33 b(mac)m(hine)g(b)s(ecause)g(they)f(can)i(detect)g
(more)f(errors)f(and)g(pro)m(vide)g(more)h(features)g(than)g(an)g
(actual)75 4560 y(computer.)40 b(F)-8 b(or)29 b(example,)g(SPIM)f(has)g
(a)g(X-windo)m(w)g(in)m(terface)h(that)g(is)e(b)s(etter)h(than)g(most)h
(debuggers)f(for)75 4673 y(the)j(actual)f(mac)m(hines.)p
75 4734 1512 4 v 177 4788 a Fp(\003)213 4820 y Fo(I)20
b(grateful)h(to)g(the)f(man)n(y)e(studen)n(ts)i(at)g(UW)g(who)g(used)g
(SPIM)g(in)g(their)g(courses)h(and)f(happily)g(found)g(bugs)g(in)g(a)h
(professor's)75 4911 y(co)r(de.)32 b(In)18 b(particular,)i(the)e
(studen)n(ts)f(in)h(CS536,)j(Spring)c(1990,)22 b(painfully)c(found)g
(the)f(last)i(few)g(bugs)f(in)f(an)h(\\already-debugged")75
5002 y(sim)n(ulator.)35 b(I)25 b(am)g(grateful)i(for)f(their)g
(patience)g(and)f(p)r(ersistence.)36 b(Alan)25 b(Y)-6
b(uen-wui)25 b(Sio)n(w)h(wrote)g(the)g(X-windo)n(w)f(in)n(terface.)179
5062 y Fn(1)213 5094 y Fo(F)-6 b(or)26 b(a)g(description)g(of)h(the)e
(real)i(mac)n(hines,)e(see)h(Gerry)g(Kane)g(and)f(Jo)r(e)i(Heinric)n
(h,)e Fm(MIPS)i(RISC)g(A)n(r)l(chite)l(ctur)l(e,)i Fo(Pren)n(tice)75
5185 y(Hall,)e(1992.)1942 5656 y Ft(1)p eop
%%Page: 2 2
2 1 bop 216 99 a Ft(Finally)-8 b(,)30 b(sim)m(ulators)f(are)j(an)e
(useful)f(to)s(ol)i(for)g(studying)e(computers)i(and)f(the)h(programs)f
(that)i(run)d(on)75 211 y(them.)39 b(Because)28 b(they)e(are)h
(implemen)m(ted)e(in)g(soft)m(w)m(are,)k(not)d(silicon,)f(they)i(can)f
(b)s(e)g(easily)f(mo)s(di\014ed)g(to)i(add)75 324 y(new)j
(instructions,)e(build)g(new)i(systems)g(suc)m(h)g(as)h(m)m(ultipro)s
(cessors,)d(or)j(simply)d(to)j(collect)f(data.)75 568
y Fl(1.1)112 b(Sim)m(ulation)35 b(of)j(a)g(Virtual)d(Mac)m(hine)75
739 y Ft(The)20 b(MIPS)g(arc)m(hitecture,)k(lik)m(e)c(that)h(of)g(most)
g(RISC)e(computers,)k(is)c(di\016cult)g(to)i(program)g(directly)e(b)s
(ecause)75 852 y(of)30 b(its)f(dela)m(y)m(ed)i(branc)m(hes,)e(dela)m(y)
m(ed)i(loads,)e(and)h(restricted)f(address)g(mo)s(des.)40
b(This)28 b(di\016cult)m(y)g(is)h(tolerable)75 965 y(since)j(these)i
(computers)f(w)m(ere)g(designed)f(to)i(b)s(e)f(programmed)f(in)g
(high-lev)m(el)g(languages)h(and)g(so)g(presen)m(t)75
1078 y(an)k(in)m(terface)g(designed)f(for)g(compilers,)i(not)f
(programmers.)59 b(A)37 b(go)s(o)s(d)g(part)g(of)g(the)g(complexit)m(y)
f(results)75 1191 y(from)e(dela)m(y)m(ed)h(instructions.)50
b(A)35 b Fk(delaye)-5 b(d)38 b(br)-5 b(anch)42 b Ft(tak)m(es)36
b(t)m(w)m(o)g(cycles)e(to)i(execute.)54 b(In)33 b(the)i(second)f
(cycle,)75 1304 y(the)c(instruction)f(immediately)f(follo)m(wing)h(the)
h(branc)m(h)g(executes.)42 b(This)28 b(instruction)g(can)j(p)s(erform)e
(useful)75 1417 y(w)m(ork)i(that)g(normally)d(w)m(ould)i(ha)m(v)m(e)h
(b)s(een)f(done)g(b)s(efore)g(the)h(branc)m(h)f(or)g(it)g(can)h(b)s(e)f
(a)h Fj(nop)e Ft(\(no)i(op)s(eration\).)75 1530 y(Similarly)-8
b(,)30 b Fk(delaye)-5 b(d)36 b(lo)-5 b(ads)41 b Ft(tak)m(e)34
b(t)m(w)m(o)g(cycles)e(so)h(the)f(instruction)f(immediately)f(follo)m
(wing)h(a)h(load)g(cannot)75 1643 y(use)e(the)h(v)-5
b(alue)29 b(loaded)h(from)g(memory)-8 b(.)216 1756 y(MIPS)34
b(wisely)f(c)m(ho)s(ose)i(to)h(hide)d(this)g(complexit)m(y)h(b)m(y)g
(implemen)m(ting)f(a)i Fk(virtual)i(machine)42 b Ft(with)33
b(their)75 1868 y(assem)m(bler.)40 b(This)29 b(virtual)g(computer)h
(app)s(ears)f(to)j(ha)m(v)m(e)f(non-dela)m(y)m(ed)g(branc)m(hes)f(and)f
(loads)h(and)g(a)h(ric)m(her)75 1981 y(instruction)i(set)i(than)g(the)g
(actual)h(hardw)m(are.)54 b(The)34 b(assem)m(bler)g Fk(r)-5
b(e)g(or)g(ganizes)45 b Ft(\(rearranges\))36 b(instructions)75
2094 y(to)f(\014ll)e(the)i(dela)m(y)f(slots.)53 b(It)35
b(also)f(sim)m(ulates)g(the)h(additional,)f Fk(pseudoinstructions)44
b Ft(b)m(y)34 b(generating)h(short)75 2207 y(sequences)c(of)f(actual)h
(instructions.)216 2320 y(By)42 b(default,)i(SPIM)d(sim)m(ulates)g(the)
h(ric)m(her,)i(virtual)c(mac)m(hine.)75 b(It)42 b(can)g(also)g(sim)m
(ulate)f(the)h(actual)75 2433 y(hardw)m(are.)80 b(W)-8
b(e)45 b(will)c(describ)s(e)h(the)i(virtual)d(mac)m(hine)j(and)f(only)f
(men)m(tion)i(in)e(passing)g(features)i(that)75 2546
y(do)37 b(not)g(b)s(elong)f(to)h(the)g(actual)h(hardw)m(are.)59
b(In)37 b(doing)e(so,)k(w)m(e)f(are)f(follo)m(wing)e(the)i(con)m(v)m
(en)m(tion)h(of)f(MIPS)75 2659 y(assem)m(bly)27 b(language)g
(programmers)g(\(and)g(compilers\),)g(who)g(routinely)e(tak)m(e)k(adv)
-5 b(an)m(tage)29 b(of)f(the)f(extended)75 2772 y(mac)m(hine.)40
b(Instructions)29 b(mark)m(ed)i(with)e(a)i(dagger)g(\()p
Fi(y)p Ft(\))f(are)h(pseudoinstructions.)75 3015 y Fl(1.2)112
b(SPIM)38 b(In)m(terface)75 3187 y Ft(SPIM)31 b(pro)m(vides)f(a)i
(simple)e(terminal)g(and)h(a)g(X-windo)m(w)g(in)m(terface.)44
b(Both)32 b(pro)m(vide)f(equiv)-5 b(alen)m(t)31 b(function-)75
3300 y(alit)m(y)-8 b(,)31 b(but)e(the)i(X)f(in)m(terface)h(is)f
(generally)f(easier)i(to)g(use)f(and)g(more)g(informativ)m(e.)216
3413 y Fj(spim)p Ft(,)46 b(the)e(terminal)e(v)m(ersion,)47
b(and)c Fj(xspim)p Ft(,)j(the)d(X)h(v)m(ersion,)j(ha)m(v)m(e)e(the)e
(follo)m(wing)f(command-line)75 3526 y(options:)120 3713
y Fj(-bare)302 3826 y Ft(Sim)m(ulate)36 b(a)h(bare)f(MIPS)h(mac)m(hine)
f(without)g(pseudoinstructions)d(or)k(the)g(additional)e(addressing)302
3939 y(mo)s(des)30 b(pro)m(vided)f(b)m(y)h(the)h(assem)m(bler.)40
b(Implies)28 b Fj(-quiet)p Ft(.)120 4127 y Fj(-asm)302
4240 y Ft(Sim)m(ulate)i(the)g(virtual)f(MIPS)h(mac)m(hine)g(pro)m
(vided)f(b)m(y)h(the)h(assem)m(bler.)40 b(This)28 b(is)i(the)g
(default.)120 4427 y Fj(-pseudo)302 4540 y Ft(Accept)i
(pseudoinstructions)27 b(in)i(assem)m(bly)h(co)s(de.)120
4728 y Fj(-nopseudo)302 4841 y Ft(Do)h(not)g(accept)h
(pseudoinstructions)27 b(in)i(assem)m(bly)h(co)s(de.)120
5028 y Fj(-notrap)302 5141 y Ft(Do)38 b(not)f(load)f(the)h(standard)f
(trap)g(handler.)58 b(This)35 b(trap)h(handler)f(has)i(t)m(w)m(o)h
(functions)d(that)i(m)m(ust)302 5254 y(b)s(e)g(assumed)f(b)m(y)g(the)h
(user's)g(program.)60 b(First,)38 b(it)e(handles)g(traps.)59
b(When)37 b(a)g(trap)g(o)s(ccurs,)h(SPIM)302 5367 y(jumps)22
b(to)j(lo)s(cation)e(0x80000080,)29 b(whic)m(h)22 b(should)g(con)m
(tain)i(co)s(de)g(to)g(service)g(the)f(exception.)39
b(Second,)1942 5656 y(2)p eop
%%Page: 3 3
3 2 bop 302 99 a Ft(this)34 b(\014le)f(con)m(tains)i(startup)f(co)s(de)
g(that)h(in)m(v)m(ok)m(es)h(the)e(routine)g Fj(main)p
Ft(.)51 b(Without)35 b(the)f(trap)h(handler,)302 211
y(execution)c(b)s(egins)e(at)i(the)f(instruction)f(lab)s(eled)p
2034 211 29 4 v 2068 211 V 97 w Fj(start)p Ft(.)120 399
y Fj(-trap)302 512 y Ft(Load)i(the)f(standard)g(trap)g(handler.)39
b(This)29 b(is)g(the)i(default.)120 700 y Fj(-trap)p
366 700 V 33 w(file)302 812 y Ft(Load)g(the)f(trap)h(handler)d(in)h
(the)i(\014le.)120 1000 y Fj(-noquiet)302 1113 y Ft(Prin)m(t)f(a)g
(message)i(when)d(an)i(exception)f(o)s(ccurs.)41 b(This)28
b(is)h(the)i(default.)120 1301 y Fj(-quiet)302 1414 y
Ft(Do)g(not)g(prin)m(t)e(a)i(message)g(at)g(an)g(exception.)120
1601 y Fj(-nomapped)p 558 1601 V 32 w(io)302 1714 y Ft(Disable)f(the)g
(memory-mapp)s(ed)g(IO)f(facilit)m(y)h(\(see)h(Section)f(5\).)120
1902 y Fj(-mapped)p 462 1902 V 33 w(io)302 2015 y Ft(Enable)f(the)i
(memory-mapp)s(ed)e(IO)g(facilit)m(y)g(\(see)j(Section)d(5\).)42
b(Programs)30 b(that)h(use)e(SPIM)h(syscalls)302 2128
y(\(see)i(Section)e(1.5\))i(to)f(read)f(from)g(the)g(terminal)f(should)
g(not)h(also)h(use)f(memory-mapp)s(ed)f(IO.)120 2315
y Fj(-file)302 2428 y Ft(Load)i(and)f(execute)h(the)g(assem)m(bly)f(co)
s(de)g(in)f(the)i(\014le.)120 2616 y Fj(-s)48 b(seg)f(size)d
Ft(Sets)h(the)g(initial)e(size)i(of)g(memory)g(segmen)m(t)i
Fk(se)-5 b(g)53 b Ft(to)46 b(b)s(e)f Fk(size)52 b Ft(b)m(ytes.)85
b(The)45 b(memory)302 2729 y(segmen)m(ts)c(are)f(named:)59
b Fj(text)p Ft(,)41 b Fj(data)p Ft(,)h Fj(stack)p Ft(,)e
Fj(ktext)p Ft(,)h(and)e Fj(kdata)p Ft(.)68 b(F)-8 b(or)40
b(example,)i(the)e(pair)f(of)302 2842 y(argumen)m(ts)31
b Fj(-sdata)46 b(2000000)28 b Ft(starts)j(the)g(user)e(data)j(segmen)m
(t)f(at)g(2,000,000)j(b)m(ytes.)120 3029 y Fj(-lseg)47
b(size)31 b Ft(Sets)h(the)h(limit)d(on)i(ho)m(w)g(large)g(memory)g
(segmen)m(t)i Fk(se)-5 b(g)40 b Ft(can)32 b(gro)m(w)h(to)g(b)s(e)f
Fk(size)39 b Ft(b)m(ytes.)46 b(The)302 3142 y(memory)31
b(segmen)m(ts)g(that)g(can)g(gro)m(w)f(are:)42 b Fj(data)p
Ft(,)29 b Fj(stack)p Ft(,)g(and)h Fj(kdata)p Ft(.)75
3382 y Fh(1.2.1)105 b(T)-9 b(erminal)34 b(In)m(terface)75
3554 y Ft(The)c(terminal)f(in)m(terface)i(\()p Fj(spim)p
Ft(\))f(pro)m(vides)f(the)i(follo)m(wing)d(commands:)120
3741 y Fj(exit)302 3854 y Ft(Exit)i(the)h(sim)m(ulator.)120
4042 y Fj(read)47 b("file")302 4155 y Ft(Read)39 b Fk(\014le)45
b Ft(of)38 b(assem)m(bly)g(language)h(commands)f(in)m(to)g(SPIM's)g
(memory)-8 b(.)65 b(If)37 b(the)i(\014le)e(has)h(already)302
4268 y(b)s(een)33 b(read)g(in)m(to)g(SPIM,)g(the)g(system)g(should)e(b)
s(e)i(cleared)g(\(see)h Fj(reinitialize)p Ft(,)d(b)s(elo)m(w\))i(or)g
(global)302 4381 y(sym)m(b)s(ols)c(will)f(b)s(e)i(m)m(ultiply)d
(de\014ned.)120 4568 y Fj(load)47 b("file")302 4681 y
Ft(Synon)m(ym)30 b(for)g Fj(read)p Ft(.)120 4869 y Fj(run)47
b(<addr>)302 4982 y Ft(Start)39 b(running)d(a)j(program.)66
b(If)38 b(the)h(optional)f(address)g Fk(addr)50 b Ft(is)38
b(pro)m(vided,)i(the)f(program)g(starts)302 5095 y(at)g(that)g
(address.)64 b(Otherwise,)40 b(the)e(program)g(starts)h(at)g(the)g
(global)f(sym)m(b)s(ol)p 3159 5095 V 3193 5095 V 106
w Fj(start)p Ft(,)h(whic)m(h)e(is)302 5208 y(de\014ned)28
b(b)m(y)h(the)g(default)f(trap)h(handler)e(to)i(call)g(the)g(routine)f
(at)h(the)g(global)g(sym)m(b)s(ol)e Fj(main)h Ft(with)g(the)302
5321 y(usual)h(MIPS)h(calling)f(con)m(v)m(en)m(tion.)1942
5656 y(3)p eop
%%Page: 4 4
4 3 bop 120 99 a Fj(step)47 b(<N>)302 211 y Ft(Step)30
b(the)h(program)f(for)g Fk(N)45 b Ft(\(default:)40 b(1\))31
b(instructions.)39 b(Prin)m(t)29 b(instructions)f(as)j(they)g(execute.)
120 399 y Fj(continue)302 512 y Ft(Con)m(tin)m(ue)f(program)g
(execution)h(without)e(stepping.)120 700 y Fj(print)47
b($N)302 812 y Ft(Prin)m(t)30 b(register)g Fk(N)15 b
Ft(.)120 1000 y Fj(print)47 b($fN)302 1113 y Ft(Prin)m(t)30
b(\015oating)g(p)s(oin)m(t)f(register)i Fk(N)15 b Ft(.)120
1301 y Fj(print)47 b(addr)302 1414 y Ft(Prin)m(t)30 b(the)g(con)m(ten)m
(ts)i(of)f(memory)f(at)h(address)f Fk(addr)10 b Ft(.)120
1601 y Fj(print)p 366 1601 29 4 v 33 w(sym)302 1714 y
Ft(Prin)m(t)38 b(the)i(con)m(ten)m(ts)h(of)e(the)h(sym)m(b)s(ol)d
(table,)42 b(i.e.,)g(the)d(addresses)g(of)g(the)h(global)e(\(but)h(not)
g(lo)s(cal\))302 1827 y(sym)m(b)s(ols.)120 2015 y Fj(reinitialize)302
2128 y Ft(Clear)30 b(the)h(memory)f(and)g(registers.)120
2315 y Fj(breakpoint)45 b(addr)302 2428 y Ft(Set)28 b(a)f(breakp)s(oin)
m(t)f(at)i(address)e Fk(addr)10 b Ft(.)42 b Fk(addr)c
Ft(can)28 b(b)s(e)e(either)h(a)g(memory)g(address)g(or)g(sym)m(b)s
(olic)e(lab)s(el.)120 2616 y Fj(delete)47 b(addr)302
2729 y Ft(Delete)32 b(all)d(breakp)s(oin)m(ts)g(at)i(address)f
Fk(addr)10 b Ft(.)120 2916 y Fj(list)302 3029 y Ft(List)30
b(all)f(breakp)s(oin)m(ts.)120 3217 y Fj(.)302 3330 y
Ft(Rest)i(of)g(line)d(is)i(an)g(assem)m(bly)g(instruction)e(that)j(is)f
(stored)g(in)f(memory)-8 b(.)120 3517 y Fj(<nl>)302 3630
y Ft(A)31 b(newline)d(reexecutes)k(previous)d(command.)120
3818 y Fj(?)302 3931 y Ft(Prin)m(t)h(a)g(help)f(message.)216
4118 y(Most)38 b(commands)e(can)h(b)s(e)f(abbreviated)g(to)h(their)f
(unique)e(pre\014x)i(e.g.,)k Fj(ex)p Ft(,)d Fj(re)p Ft(,)h
Fj(l)p Ft(,)g Fj(ru)p Ft(,)g Fj(s)p Ft(,)g Fj(p)p Ft(.)59
b(More)75 4231 y(dangerous)30 b(commands,)g(suc)m(h)g(as)h
Fj(reinitialize)p Ft(,)c(require)i(a)i(longer)f(pre\014x.)75
4471 y Fh(1.2.2)105 b(X-Windo)m(w)35 b(In)m(terface)75
4643 y Ft(The)27 b(X)h(v)m(ersion)f(of)h(SPIM,)g Fj(xspim)p
Ft(,)f(lo)s(oks)g(di\013eren)m(t,)h(but)f(should)f(op)s(erate)i(in)f
(the)h(same)g(manner)f(as)h Fj(spim)p Ft(.)75 4756 y(The)d(X)h(windo)m
(w)e(has)i(\014v)m(e)g(panes)g(\(see)g(Figure)g(1\).)40
b(The)25 b(top)h(pane)g(displa)m(ys)d(the)j(con)m(ten)m(ts)i(of)e(the)g
(registers.)75 4869 y(It)k(is)g(con)m(tin)m(ually)f(up)s(dated,)g
(except)j(while)c(a)j(program)f(is)f(running.)216 4982
y(The)h(next)h(pane)f(con)m(tains)g(the)h(buttons)f(that)h(con)m(trol)f
(the)h(sim)m(ulator:)302 5169 y Fh(quit)302 5282 y Ft(Exit)f(from)g
(the)g(sim)m(ulator.)1942 5656 y(4)p eop
%%Page: 5 5
5 4 bop 629 1250 a
 21100149 21313290 1184071 8156938 36245749 43547525 startTexFig
 629 1250 a
%%BeginDocument: xinterface.id

/IdrawDict 53 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Courier reencodeISO def
/Helvetica-Bold reencodeISO def
/Times-Roman reencodeISO def

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
printFont printSize scalefont setfont
/descender 0 printFont /FontBBox get 1 get printFont /FontMatrix
get transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 2 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 9 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.923077 0 0 0.923077 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Poly
%I b 13107
1 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 97 131 ] concat
%I 4
7 7
7 586
499 586
496 5
4 Poly
End

Begin %I Line
%I b 13107
1 0 0 [2 2 2 2 2 2 2 2] 15 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 97 131 ] concat
%I
7 568 499 568 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 112 691 ] concat
%I
[
(PC    = 00000000  EPC  = 00000000  Cause  = 0000000  BadVaddr = 00000000)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 112 682 ] concat
%I
[
(Status= 00000000  HI   = 00000000  LO     = 0000000)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 112 665 ] concat
%I
[
(R0 \(r0\) = 00000000  R8  \(t0\) = 00000000  R16 \(s0\) = 0000000  R24 \(t8\) = 00000000)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 112 657 ] concat
%I
[
(R1 \(at\) = 00000000  R9  \(t1\) = 00000000  R17 \(s1\) = 0000000  R25 \(s9\) = 00000000)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 112 648 ] concat
%I
[
(R2 \(v0\) = 00000000  R10 \(t2\) = 00000000  R18 \(s2\) = 0000000  R26 \(k0\) = 00000000)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 112 639 ] concat
%I
[
(R3 \(v1\) = 00000000  R11 \(t3\) = 00000000  R19 \(s3\) = 0000000  R27 \(k1\) = 00000000)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 112 631 ] concat
%I
[
(R4 \(a0\) = 00000000  R12 \(t4\) = 00000000  R20 \(s4\) = 0000000  R28 \(gp\) = 00000000)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 112 622 ] concat
%I
[
(R5 \(a1\) = 00000000  R13 \(t5\) = 00000000  R21 \(s5\) = 0000000  R29 \(gp\) = 00000000)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 112 613 ] concat
%I
[
(R6 \(a2\) = 00000000  R14 \(t6\) = 00000000  R22 \(s6\) = 0000000  R30 \(s8\) = 00000000)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 112 605 ] concat
%I
[
(R7 \(a3\) = 00000000  R15 \(t7\) = 00000000  R23 \(s7\) = 0000000  R31 \(ra\) = 00000000)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 112 587 ] concat
%I
[
(FP0     = 0.000000  FP8      = 0.000000  FP16     = 0.00000  FP24     = 0.000000)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 112 562 ] concat
%I
[
(FP6     = 0.000000  FP14     = 0.000000  FP22     = 0.00000  FP30     = 0.000000)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 112 570 ] concat
%I
[
(FP4     = 0.000000  FP12     = 0.000000  FP20     = 0.00000  FP28     = 0.000000)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 112 579 ] concat
%I
[
(FP2     = 0.000000  FP10     = 0.000000  FP18     = 0.00000  FP26     = 0.000000)
] Text
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.680251 0 0 1 461.205 131 ] concat
%I 11
24 396
33 396
84 396
93 396
102 387
93 378
84 378
33 378
24 378
15 387
24 396
11 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.680251 0 0 1 392.205 132 ] concat
%I 11
24 396
33 396
84 396
93 396
102 387
93 378
84 378
33 378
24 378
15 387
24 396
11 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.680251 0 0 1 325.205 132 ] concat
%I 11
24 396
33 396
84 396
93 396
102 387
93 378
84 378
33 378
24 378
15 387
24 396
11 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.680251 0 0 1 256.205 132 ] concat
%I 11
24 396
33 396
84 396
93 396
102 387
93 378
84 378
33 378
24 378
15 387
24 396
11 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.680251 0 0 1 186.205 133 ] concat
%I 11
24 396
33 396
84 396
93 396
102 387
93 378
84 378
33 378
24 378
15 387
24 396
11 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.680251 0 0 1 118.205 133 ] concat
%I 11
24 396
33 396
84 396
93 396
102 387
93 378
84 378
33 378
24 378
15 387
24 396
11 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.680251 0 0 1 392.205 107 ] concat
%I 11
24 396
33 396
84 396
93 396
102 387
93 378
84 378
33 378
24 378
15 387
24 396
11 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.680251 0 0 1 325.205 107 ] concat
%I 11
24 396
33 396
84 396
93 396
102 387
93 378
84 378
33 378
24 378
15 387
24 396
11 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.680251 0 0 1 256.205 107 ] concat
%I 11
24 396
33 396
84 396
93 396
102 387
93 378
84 378
33 378
24 378
15 387
24 396
11 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.680251 0 0 1 186.205 108 ] concat
%I 11
24 396
33 396
84 396
93 396
102 387
93 378
84 378
33 378
24 378
15 387
24 396
11 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.680251 0 0 1 118.205 108 ] concat
%I 11
24 396
33 396
84 396
93 396
102 387
93 378
84 378
33 378
24 378
15 387
24 396
11 CBSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 146 524 ] concat
%I
[
(quit)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 214 524 ] concat
%I
[
(load)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 287 523 ] concat
%I
[
(run)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 353 523 ] concat
%I
[
(step)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 417 523 ] concat
%I
[
(clear)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 474 522 ] concat
%I
[
(set value)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 143 499 ] concat
%I
[
(print)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 205 499 ] concat
%I
[
(breakpt)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 284 498 ] concat
%I
[
(help)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 341 498 ] concat
%I
[
(terminal)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 420 498 ] concat
%I
[
(mode)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 97 131 ] concat
%I
7 344 499 344 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 97 129 ] concat
%I
7 327 499 327 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 97 161 ] concat
%I
7 180 499 180 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 112 227 ] concat
%I
[
(SPIM Version 3.2 of January 14, 1990)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 304.5 469.5 ] concat
%I
[
(Text Segments)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 121 711 ] concat
%I
[
(xspim)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--14-*-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 21.0001 647 ] concat
%I
[
(Register)
(Display)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--14-*-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 21.0001 517 ] concat
%I
[
(Control)
(Buttons)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--14-*-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 21.0001 433 ] concat
%I
[
(User and)
(Kernel)
(Text)
(Segments)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--14-*-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 21.0001 193 ] concat
%I
[
(SPIM)
(Messages)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -30 123 ] concat
%I
134 413 626 413 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-normal--10-*-75-*
Times-Roman 10 SetF
%I t
[ 1 0 0 1 313.5 673 ] concat
%I
[
(General Registers)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-normal--10-*-75-*
Times-Roman 10 SetF
%I t
[ 1 0 0 1 306 594 ] concat
%I
[
(Double Floating Point Registers)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-normal--10-*-75-*
Times-Roman 10 SetF
%I t
[ 1 0 0 1 308 548 ] concat
%I
[
(Single Floating Point Registers)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 97 182 ] concat
%I
7 180 499 180 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 97 56 ] concat
%I
7 180 499 180 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 302 355 ] concat
%I
[
(Data Segments)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--14-*-75-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 21.0001 302 ] concat
%I
[
(Data and)
(Stack)
(Segments)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 112 449 ] concat
%I
[
([0x00400000] 0x8fa40000 lw R4, 0\(R29\)  [])
([0x00400004] 0x27a50004 addiu R5, R29, 4 [])
([0x00400008] 0x24a60004 addiu R6, R5, 4 [])
([0x0040000c] 0x00041090 sll R2, R4, 2)
([0x00400010] 0x00c23021 addu R6, R6, R2)
([0x00400014] 0x0c000000 jal 0x00000000 [])
([0x00400018] 0x3402000a ori R0, R0, 10 [])
([0x0040001c] 0x0000000c syscall)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-normal--10-*-75-*
Courier 10 SetF
%I t
[ 1 0 0 1 112 333 ] concat
%I
[
([0x10000000]...[0x10010000] 0x00000000)
([0x10010004]  0x74706563  0x206e6f69  0x636f2000)
([0x10010010]  0x72727563  0x61206465  0x6920646e  0x726f6e67)
([0x10010020]  0x000a6465  0x495b2020  0x7265746e  0x74707572)
([0x10010030]  0x0000205d  0x20200000  0x616e555b  0x6e67696c)
([0x10010040]  0x61206465  0x65726464  0x69207373  0x6e69206e)
([0x10010050]  0x642f7473  0x20617461  0x63746566  0x00205d68)
([0x10010060]  0x555b2020  0x696c616e  0x64656e67  0x64646120)
([0x10010070]  0x73736572  0x206e6920  0x726f7473  0x00205d65)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 1184 4146 a Ft(Figure)30 b(1:)41 b(X-windo)m(w)30 b(in)m(terface)h(to)
g(SPIM.)1942 5656 y(5)p eop
%%Page: 6 6
6 5 bop 302 99 a Fh(load)302 211 y Ft(Read)31 b(a)g(source)f(\014le)g
(in)m(to)g(memory)-8 b(.)302 387 y Fh(run)302 500 y Ft(Start)31
b(the)f(program)h(running.)302 676 y Fh(step)302 789
y Ft(Single-step)e(through)h(a)h(program.)302 965 y Fh(clear)302
1078 y Ft(Reinitialize)d(registers)i(or)h(memory)-8 b(.)302
1254 y Fh(set)35 b(v)-6 b(alue)302 1366 y Ft(Set)31 b(the)f(v)-5
b(alue)30 b(in)f(a)i(register)f(or)h(memory)f(lo)s(cation.)302
1542 y Fh(prin)m(t)302 1655 y Ft(Prin)m(t)g(the)g(v)-5
b(alue)30 b(in)f(a)i(register)f(or)g(memory)h(lo)s(cation.)302
1831 y Fh(breakp)s(oin)m(t)302 1944 y Ft(Set)g(or)f(delete)h(a)g
(breakp)s(oin)m(t)e(or)h(list)f(all)h(breakp)s(oin)m(ts.)302
2120 y Fh(help)302 2233 y Ft(Prin)m(t)g(a)g(help)f(message.)302
2409 y Fh(terminal)302 2522 y Ft(Raise)h(or)h(hide)e(the)h(console)h
(windo)m(w.)302 2697 y Fh(mo)s(de)302 2810 y Ft(Set)g(SPIM)f(op)s
(erating)f(mo)s(des.)216 2969 y(The)h(next)g(t)m(w)m(o)i(panes)e
(displa)m(y)e(the)j(memory)f(con)m(ten)m(ts.)42 b(The)30
b(top)g(one)h(sho)m(ws)f(instructions)e(from)i(the)75
3081 y(user)g(and)g(k)m(ernel)g(text)h(segmen)m(ts.)1283
3048 y Fq(2)1365 3081 y Ft(The)f(\014rst)g(few)g(instructions)f(in)g
(the)h(text)i(segmen)m(t)g(are)f(startup)f(co)s(de)75
3194 y(\()p 116 3194 29 4 v 150 3194 V 69 w Fj(start)p
Ft(\))f(that)i(loads)f Fj(argc)f Ft(and)h Fj(argv)f Ft(in)m(to)i
(registers)f(and)g(in)m(v)m(ok)m(es)h(the)f Fj(main)g
Ft(routine.)216 3307 y(The)d(lo)m(w)m(er)h(of)f(these)h(t)m(w)m(o)g
(panes)f(displa)m(ys)f(the)h(data)h(and)f(stac)m(k)i(segmen)m(ts.)41
b(Both)28 b(panes)f(are)g(up)s(dated)75 3420 y(as)k(a)f(program)h
(executes.)216 3533 y(The)c(b)s(ottom)h(pane)f(is)g(used)g(to)h(displa)
m(y)e(messages)i(from)f(the)h(sim)m(ulator.)39 b(It)28
b(do)s(es)f(not)h(displa)m(y)d(output)75 3646 y(from)40
b(an)h(executing)f(program.)72 b(When)40 b(a)h(program)f(reads)h(or)f
(writes,)j(its)d(IO)g(app)s(ears)g(in)f(a)i(separate)75
3759 y(windo)m(w,)29 b(called)h(the)g(Console,)g(whic)m(h)f(p)s(ops)h
(up)f(when)g(needed.)75 3997 y Fl(1.3)112 b(Surprising)37
b(F)-9 b(eatures)75 4168 y Ft(Although)26 b(SPIM)g(faithfully)e(sim)m
(ulates)i(the)h(MIPS)f(computer,)i(it)e(is)g(a)h(sim)m(ulator)f(and)g
(certain)h(things)f(are)75 4281 y(not)32 b(iden)m(tical)f(to)i(the)f
(actual)g(computer.)46 b(The)31 b(most)i(ob)m(vious)e(di\013erences)g
(are)i(that)f(instruction)e(timing)75 4394 y(and)g(the)i(memory)e
(systems)h(are)h(not)f(iden)m(tical.)41 b(SPIM)31 b(do)s(es)f(not)i
(sim)m(ulate)e(cac)m(hes)i(or)f(memory)g(latency)-8 b(,)75
4507 y(nor)30 b(do)s(es)g(it)g(accurate)i(re\015ect)f(the)f(dela)m(ys)g
(for)h(\015oating)f(p)s(oin)m(t)f(op)s(erations)h(or)g(m)m(ultiplies)e
(and)h(divides.)216 4620 y(Another)42 b(surprise)e(\(whic)m(h)h(o)s
(ccurs)g(on)h(the)h(real)e(mac)m(hine)h(as)g(w)m(ell\))g(is)f(that)h(a)
h(pseudoinstruction)75 4733 y(expands)d(in)m(to)h(sev)m(eral)h(mac)m
(hine)f(instructions.)71 b(When)41 b(single-stepping)e(or)i(examining)e
(memory)-8 b(,)45 b(the)75 4846 y(instructions)24 b(that)i(y)m(ou)g
(see)h(are)f(sligh)m(tly)e(di\013eren)m(t)h(from)h(the)g(source)g
(program.)39 b(The)25 b(corresp)s(ondence)g(b)s(e-)75
4959 y(t)m(w)m(een)g(the)f(t)m(w)m(o)h(sets)f(of)f(instructions)f(is)h
(fairly)e(simple)h(since)h(SPIM)g(do)s(es)g(not)h(reorganize)g(the)g
(instructions)75 5072 y(to)31 b(\014ll)d(dela)m(y)j(slots.)p
75 5139 1512 4 v 179 5193 a Fn(2)213 5225 y Fo(These)d(instructions)g
(are)g(real|not)f(pseudo|MIPS)g(instructions.)40 b(SPIM)27
b(translates)h(assem)n(bler)g(pseudoinstructions)75 5316
y(to)e(1{3)i(MIPS)e(instructions)g(b)r(efore)h(storing)g(the)f(program)
g(in)g(memory)-6 b(.)34 b(Eac)n(h)26 b(source)h(instruction)f(app)r
(ears)h(as)f(a)h(commen)n(t)75 5407 y(on)f(the)f(\014rst)g(instruction)
h(to)g(whic)n(h)g(it)g(is)g(translated.)1942 5656 y Ft(6)p
eop
%%Page: 7 7
7 6 bop 75 99 a Fl(1.4)112 b(Assem)m(bler)36 b(Syn)m(tax)75
270 y Ft(Commen)m(ts)28 b(in)e(assem)m(bler)i(\014les)e(b)s(egin)h
(with)f(a)j(sharp-sign)d(\()p Fj(#)p Ft(\).)40 b(Ev)m(erything)27
b(from)g(the)h(sharp-sign)e(to)j(the)75 383 y(end)h(of)g(the)h(line)e
(is)g(ignored.)216 496 y(Iden)m(ti\014ers)22 b(are)i(a)g(sequence)g(of)
g(alphan)m(umeric)d(c)m(haracters,)27 b(underbars)21
b(\()p 2783 496 29 4 v 35 w(\),)k(and)e(dots)h(\()p Fj(.)p
Ft(\))38 b(that)24 b(do)g(not)75 609 y(b)s(egin)h(with)h(a)h(n)m(um)m
(b)s(er.)38 b(Op)s(co)s(des)26 b(for)g(instructions)f(are)i(reserv)m
(ed)g(w)m(ords)f(that)i(are)f Fh(not)g Ft(v)-5 b(alid)25
b(iden)m(ti\014ers.)75 722 y(Lab)s(els)i(are)h(declared)f(b)m(y)h
(putting)f(them)h(at)h(the)f(b)s(eginning)d(of)j(a)h(line)d(follo)m(w)m
(ed)h(b)m(y)h(a)h(colon,)f(for)g(example:)457 894 y Fj(.data)170
1007 y(item:)47 b(.word)f(1)457 1120 y(.text)457 1233
y(.globl)g(main)619 b(#)48 b(Must)e(be)i(global)170 1346
y(main:)f(lw)g($t0,)g(item)216 1518 y Ft(Strings)28 b(are)i(enclosed)g
(in)e(double-quotes)h(\()p Fj(")p Ft(\).)41 b(Sp)s(ecial)28
b(c)m(haracters)j(in)d(strings)h(follo)m(w)f(the)i(C)f(con)m(v)m(en-)75
1631 y(tion:)266 1804 y Fj(newline)380 b(\\n)266 1916
y(tab)572 b(\\t)266 2029 y(quote)476 b(\\")216 2202 y
Ft(SPIM)30 b(supp)s(orts)e(a)j(subset)f(of)h(the)f(assem)m(bler)g
(directiv)m(es)g(pro)m(vided)f(b)m(y)h(the)h(MIPS)e(assem)m(bler:)120
2374 y Fj(.align)47 b(n)302 2487 y Ft(Align)23 b(the)i(next)f(datum)g
(on)g(a)h(2)1407 2454 y Fg(n)1479 2487 y Ft(b)m(yte)g(b)s(oundary)-8
b(.)37 b(F)-8 b(or)25 b(example,)g Fj(.align)46 b(2)24
b Ft(aligns)f(the)i(next)f(v)-5 b(alue)302 2600 y(on)34
b(a)h(w)m(ord)f(b)s(oundary)-8 b(.)50 b Fj(.align)c(0)34
b Ft(turns)f(o\013)i(automatic)g(alignmen)m(t)e(of)i
Fj(.half)p Ft(,)e Fj(.word)p Ft(,)h Fj(.float)p Ft(,)302
2713 y(and)c Fj(.double)e Ft(directiv)m(es)i(un)m(til)f(the)h(next)h
Fj(.data)e Ft(or)h Fj(.kdata)f Ft(directiv)m(e.)120 2894
y Fj(.ascii)47 b(str)302 3007 y Ft(Store)31 b(the)f(string)g(in)f
(memory)-8 b(,)31 b(but)e(do)i(not)f(n)m(ull-terminate)f(it.)120
3189 y Fj(.asciiz)46 b(str)302 3302 y Ft(Store)31 b(the)f(string)g(in)f
(memory)h(and)g(n)m(ull-terminate)f(it.)120 3483 y Fj(.byte)47
b(b1,)g(...,)f(bn)302 3596 y Ft(Store)31 b(the)f Ff(n)g
Ft(v)-5 b(alues)30 b(in)f(successiv)m(e)i(b)m(ytes)g(of)f(memory)-8
b(.)120 3778 y Fj(.data)47 b(<addr>)302 3891 y Ft(The)31
b(follo)m(wing)f(data)h(items)g(should)e(b)s(e)i(stored)g(in)f(the)h
(data)h(segmen)m(t.)44 b(If)31 b(the)g(optional)f(argumen)m(t)302
4004 y Fk(addr)42 b Ft(is)30 b(presen)m(t,)g(the)h(items)f(are)g
(stored)h(b)s(eginning)d(at)j(address)e Fk(addr)10 b
Ft(.)120 4185 y Fj(.double)46 b(d1,)h(...,)g(dn)302 4298
y Ft(Store)31 b(the)f Ff(n)g Ft(\015oating)h(p)s(oin)m(t)e(double)g
(precision)f(n)m(um)m(b)s(ers)h(in)g(successiv)m(e)i(memory)f(lo)s
(cations.)120 4480 y Fj(.extern)46 b(sym)h(size)302 4592
y Ft(Declare)38 b(that)g(the)f(datum)f(stored)h(at)h
Fj(sym)e Ft(is)g Fj(size)f Ft(b)m(ytes)j(large)f(and)f(is)g(a)h(global)
g(sym)m(b)s(ol.)59 b(This)302 4705 y(directiv)m(e)32
b(enables)g(the)g(assem)m(bler)g(to)h(store)g(the)g(datum)e(in)g(a)i(p)
s(ortion)e(of)h(the)h(data)g(segmen)m(t)g(that)302 4818
y(is)d(e\016cien)m(tly)g(accessed)h(via)f(register)h
Fj($gp)p Ft(.)120 5000 y Fj(.float)47 b(f1,)f(...,)h(fn)302
5113 y Ft(Store)31 b(the)f Ff(n)g Ft(\015oating)h(p)s(oin)m(t)e(single)
g(precision)g(n)m(um)m(b)s(ers)f(in)i(successiv)m(e)g(memory)h(lo)s
(cations.)120 5294 y Fj(.globl)47 b(sym)302 5407 y Ft(Declare)32
b(that)f(sym)m(b)s(ol)e Fj(sym)g Ft(is)h(global)f(and)h(can)h(b)s(e)e
(referenced)i(from)f(other)g(\014les.)1942 5656 y(7)p
eop
%%Page: 8 8
8 7 bop 379 110 3173 4 v 377 210 4 100 v 503 180 a Fe(Service)p
924 210 V 174 w(System)30 b(Call)h(Co)s(de)p 1774 210
V 1774 210 V 363 w(Argumen)m(ts)p 2861 210 V 2861 210
V 521 w(Result)p 3550 210 V 379 213 3173 4 v 379 230
V 377 329 4 100 v 429 299 a Fw(prin)n(t)p 612 299 25
4 v 29 w(in)n(t)p 924 329 4 100 v 595 w(1)p 1774 329
V 453 w Fd($a0)c Fw(=)g(in)n(teger)p 2861 329 V 3550
329 V 377 429 V 429 399 a(prin)n(t)p 612 399 25 4 v 29
w(\015oat)p 924 429 4 100 v 532 w(2)p 1774 429 V 453
w Fd($f12)f Fw(=)h(\015oat)p 2861 429 V 3550 429 V 377
529 V 429 499 a(prin)n(t)p 612 499 25 4 v 29 w(double)p
924 529 4 100 v 454 w(3)p 1774 529 V 453 w Fd($f12)f
Fw(=)h(double)p 2861 529 V 3550 529 V 377 628 V 429 598
a(prin)n(t)p 612 598 25 4 v 29 w(string)p 924 628 4 100
v 485 w(4)p 1774 628 V 453 w Fd($a0)g Fw(=)g(string)p
2861 628 V 3550 628 V 377 728 V 429 698 a(read)p 592
698 25 4 v 28 w(in)n(t)p 924 728 4 100 v 616 w(5)p 1774
728 V 2861 728 V 1541 w(in)n(teger)g(\(in)h Fd($v0)p
Fw(\))p 3550 728 V 377 827 V 429 798 a(read)p 592 798
25 4 v 28 w(\015oat)p 924 827 4 100 v 553 w(6)p 1774
827 V 2861 827 V 1541 w(\015oat)f(\(in)h Fd($f0)p Fw(\))p
3550 827 V 377 927 V 429 897 a(read)p 592 897 25 4 v
28 w(double)p 924 927 4 100 v 475 w(7)p 1774 927 V 2861
927 V 1541 w(double)f(\(in)i Fd($f0)p Fw(\))p 3550 927
V 377 1027 V 429 997 a(read)p 592 997 25 4 v 28 w(string)p
924 1027 4 100 v 506 w(8)p 1774 1027 V 453 w Fd($a0)e
Fw(=)g(bu\013er,)h Fd($a1)e Fw(=)h(length)p 2861 1027
V 3550 1027 V 377 1126 V 429 1096 a(sbrk)p 924 1126 V
745 w(9)p 1774 1126 V 453 w Fd($a0)g Fw(=)g(amoun)n(t)p
2861 1126 V 562 w(address)f(\(in)i Fd($v0)p Fw(\))p 3550
1126 V 377 1226 V 429 1196 a(exit)p 924 1226 V 744 w(10)p
1774 1226 V 2861 1226 V 3550 1226 V 379 1229 3173 4 v
1463 1483 a Ft(T)-8 b(able)30 b(1:)41 b(System)30 b(services.)120
1758 y Fj(.half)47 b(h1,)g(...,)f(hn)302 1871 y Ft(Store)31
b(the)f Ff(n)g Ft(16-bit)h(quan)m(tities)f(in)f(successiv)m(e)h(memory)
h(halfw)m(ords.)120 2059 y Fj(.kdata)47 b(<addr>)302
2172 y Ft(The)40 b(follo)m(wing)e(data)i(items)g(should)e(b)s(e)h
(stored)h(in)e(the)i(k)m(ernel)g(data)g(segmen)m(t.)70
b(If)40 b(the)g(optional)302 2285 y(argumen)m(t)31 b
Fk(addr)42 b Ft(is)29 b(presen)m(t,)i(the)g(items)e(are)i(stored)g(b)s
(eginning)c(at)32 b(address)d Fk(addr)10 b Ft(.)120 2472
y Fj(.ktext)47 b(<addr>)302 2585 y Ft(The)37 b(next)h(items)f(are)h
(put)f(in)f(the)i(k)m(ernel)f(text)i(segmen)m(t.)63 b(In)37
b(SPIM,)h(these)g(items)f(ma)m(y)h(only)f(b)s(e)302 2698
y(instructions)e(or)h(w)m(ords)g(\(see)i(the)e Fj(.word)g
Ft(directiv)m(e)g(b)s(elo)m(w\).)58 b(If)36 b(the)h(optional)f(argumen)
m(t)h Fk(addr)48 b Ft(is)302 2811 y(presen)m(t,)31 b(the)g(items)e(are)
i(stored)g(b)s(eginning)c(at)k(address)f Fk(addr)10 b
Ft(.)120 2999 y Fj(.space)47 b(n)302 3112 y Ft(Allo)s(cate)41
b Ff(n)g Ft(b)m(ytes)g(of)h(space)f(in)f(the)h(curren)m(t)g(segmen)m(t)
h(\(whic)m(h)e(m)m(ust)h(b)s(e)f(the)h(data)h(segmen)m(t)g(in)302
3225 y(SPIM\).)120 3412 y Fj(.text)47 b(<addr>)302 3525
y Ft(The)42 b(next)f(items)h(are)g(put)f(in)f(the)i(user)f(text)i
(segmen)m(t.)76 b(In)41 b(SPIM,)h(these)g(items)f(ma)m(y)i(only)e(b)s
(e)302 3638 y(instructions)35 b(or)h(w)m(ords)g(\(see)i(the)e
Fj(.word)g Ft(directiv)m(e)g(b)s(elo)m(w\).)58 b(If)36
b(the)h(optional)f(argumen)m(t)h Fk(addr)48 b Ft(is)302
3751 y(presen)m(t,)31 b(the)g(items)e(are)i(stored)g(b)s(eginning)c(at)
k(address)f Fk(addr)10 b Ft(.)120 3939 y Fj(.word)47
b(w1,)g(...,)f(wn)302 4051 y Ft(Store)31 b(the)f Ff(n)g
Ft(32-bit)h(quan)m(tities)f(in)f(successiv)m(e)h(memory)h(w)m(ords.)75
4239 y(SPIM)f(do)s(es)g(not)h(distinguish)26 b(v)-5 b(arious)29
b(parts)i(of)f(the)h(data)g(segmen)m(t)g(\()p Fj(.data)p
Ft(,)f Fj(.rdata)p Ft(,)f(and)g Fj(.sdata)p Ft(\).)75
4483 y Fl(1.5)112 b(System)37 b(Calls)75 4654 y Ft(SPIM)32
b(pro)m(vides)f(a)i(small)d(set)j(of)f(op)s(erating-system-lik)m(e)g
(services)g(through)g(the)g(system)h(call)e(\()p Fj(syscall)p
Ft(\))75 4767 y(instruction.)37 b(T)-8 b(o)24 b(request)h(a)f(service,)
i(a)f(program)f(loads)g(the)g(system)g(call)g(co)s(de)h(\(see)g(T)-8
b(able)24 b(1\))h(in)m(to)f(register)75 4880 y Fj($v0)j
Ft(and)f(the)i(argumen)m(ts)g(in)m(to)f(registers)g Fj($a0)p
Ff(:)15 b(:)g(:)q Fj($a3)26 b Ft(\(or)i Fj($f12)e Ft(for)h(\015oating)h
(p)s(oin)m(t)e(v)-5 b(alues\).)40 b(System)27 b(calls)75
4993 y(that)d(return)e(v)-5 b(alues)23 b(put)g(their)f(result)h(in)f
(register)h Fj($v0)g Ft(\(or)h Fj($f0)e Ft(for)h(\015oating)h(p)s(oin)m
(t)e(results\).)38 b(F)-8 b(or)24 b(example,)75 5106
y(to)31 b(prin)m(t)e(\\)p Fj(the)47 b(answer)g(=)g(5)p
Ft(",)31 b(use)f(the)g(commands:)457 5293 y Fj(.data)170
5406 y(str:)95 b(.asciiz)46 b("the)g(answer)g(=)i(")1942
5656 y Ft(8)p eop
%%Page: 9 9
9 8 bop 897 7 a
 16861171 18945146 4604723 20326563 29996482 48810065 startTexFig
 897 7 a
%%BeginDocument: mips.id

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
printFont printSize scalefont setfont
/descender 0 printFont /FontBBox get 1 get printFont /FontMatrix
get transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 2 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 9 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.923077 0 0 0.923077 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 52 232 ] concat
%I
155 493 319 562 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 97 131 ] concat
%I
222 327 395 542 Rect
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 52 321 ] concat
%I
198 257 259 257 Line
End

Begin %I Rect
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
< ff 88 88 88 ff 88 88 88 > -1 SetP
%I t
[ 1 0 0 1 52.5 320 ] concat
%I
147 413 311 482 Rect
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 52 321 ] concat
%I
224 413 112 361 Line
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 52 321 ] concat
%I
224 413 345 361 Line
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 254 131 ] concat
%I
58 335 231 551 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 237.25 131 ] concat
%I
127 482 197 482 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 237.25 131 ] concat
%I
127 430 197 430 Line
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 235.75 131 ] concat
%I
127 413 197 499 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 373.25 648 ] concat
%I
[
(Registers)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 391.25 624.5 ] concat
%I
[
($0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 387.75 555.5 ] concat
%I
[
($31)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 396.25 603 ] concat
%I
[
(.)
(.)
(.)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 152.5 0 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 69 312 ] concat
%I
147 171 207 206 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 217.5 510.5 ] concat
%I
[
(Arithmetic)
(Unit)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 321 673 ] concat
%I
[
(FPU \(Coprocessor 1\))
] Text
End

Begin %I MLine
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 52 321 ] concat
%I 2
345 223
345 197
2 MLine
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 97 131 ] concat
%I
76 206 309 301 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 69 320 ] concat
%I
95 24 328 119 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 17 -17 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 191 414 ] concat
%I
[
(BadVAddr)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 52 321 ] concat
%I
129 76 207 102 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 202 388 ] concat
%I
[
(Status)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 52 321 ] concat
%I
129 50 207 76 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -35 9 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 327.5 405.5 ] concat
%I
[
(Cause)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 52 321 ] concat
%I
259 68 328 93 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -35 18 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 333 371 ] concat
%I
[
(EPC)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 52 321 ] concat
%I
259 33 328 59 Rect
End

End %I eop

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 172 431 ] concat
%I
[
(Coprocessor 0 \(Traps and Memory\))
] Text
End

End %I eop

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 56.5 321 ] concat
%I
224 257 224 119 Line
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 52 232 ] concat
%I
34 226 207 441 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 20 131 ] concat
%I
58 335 231 551 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -8 9 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 139.25 648 ] concat
%I
[
(Registers)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 3.25 131 ] concat
%I
127 482 197 482 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 3.25 131 ] concat
%I
127 430 197 430 Line
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 1.75 131 ] concat
%I
127 413 197 499 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 156.25 624.5 ] concat
%I
[
($0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 152.75 555.5 ] concat
%I
[
($31)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 162.25 603 ] concat
%I
[
(.)
(.)
(.)
] Text
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -130 24.9999 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 69 312 ] concat
%I
147 171 207 206 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 217.5 510.5 ] concat
%I
[
(Arithmetic)
(Unit)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 87 673 ] concat
%I
[
(CPU)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 24.9999 ] concat

Begin %I Rect
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 52 321 ] concat
%I
129 163 190 197 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 189 511 ] concat
%I
[
(Multiply)
(Divide)
] Text
End

End %I eop

Begin %I Pict
%I b 65535
2 0 0 [] 0 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -1 -42 ] concat

Begin %I Rect
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 52 321 ] concat
%I
164 197 190 214 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Rect
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 52 321 ] concat
%I
129 197 155 214 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 187 530.5 ] concat
%I
[
(Lo)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 223 530.5 ] concat
%I
[
(Hi)
] Text
End

End %I eop

Begin %I MLine
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 97 131 ] concat
%I 4
93 465
119 465
119 413
119 413
4 MLine
End

Begin %I MLine
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 113 347 ] concat
%I 2
206 324
206 308
2 MLine
End

Begin %I MLine
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 113 347 ] concat
%I 2
154 308
222 308
2 MLine
End

Begin %I MLine
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 113 347 ] concat
%I 2
154 308
154 290
2 MLine
End

Begin %I MLine
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 113 347 ] concat
%I 2
222 308
222 290
2 MLine
End

Begin %I MLine
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 55 347 ] concat
%I 3
98 394
98 498
132 498
3 MLine
End

End %I eop

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 120 265 ] concat
%I
86 513 140 531 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-normal--12-*-75-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 211 791 ] concat
%I
[
(Memory)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 1201 2603 a Ft(Figure)30 b(2:)41 b(MIPS)30 b(R2000)i(CPU)e(and)g(FPU)
457 2878 y Fj(.text)457 2991 y(li)47 b($v0,)g(4)381 b(#)48
b(system)e(call)g(code)h(for)g(print_str)457 3104 y(la)g($a0,)g(str)285
b(#)48 b(address)d(of)j(string)e(to)h(print)457 3217
y(syscall)475 b(#)48 b(print)e(the)h(string)457 3443
y(li)g($v0,)g(1)381 b(#)48 b(system)e(call)g(code)h(for)g(print_int)457
3556 y(li)g($a0,)g(5)381 b(#)48 b(integer)d(to)j(print)457
3669 y(syscall)475 b(#)48 b(print)e(it)216 3856 y(print)p
462 3856 29 4 v 33 w(int)37 b Ft(is)g(passed)h(an)g(in)m(teger)h(and)e
(prin)m(ts)g(it)g(on)h(the)g(console.)65 b Fj(print)p
2977 3856 V 33 w(float)36 b Ft(prin)m(ts)h(a)h(single)75
3969 y(\015oating)24 b(p)s(oin)m(t)g(n)m(um)m(b)s(er.)37
b Fj(print)p 1239 3969 V 33 w(double)23 b Ft(prin)m(ts)g(a)i(double)e
(precision)g(n)m(um)m(b)s(er.)37 b Fj(print)p 3173 3969
V 33 w(string)23 b Ft(is)g(passed)75 4082 y(a)31 b(p)s(oin)m(ter)e(to)i
(a)g(n)m(ull-terminated)d(string,)i(whic)m(h)f(it)h(writes)f(to)i(the)g
(console.)216 4195 y Fj(read)p 414 4195 V 33 w(int)p
Ft(,)26 b Fj(read)p 834 4195 V 34 w(float)p Ft(,)f(and)g
Fj(read)p 1522 4195 V 33 w(double)f Ft(read)i(an)f(en)m(tire)h(line)e
(of)i(input)d(up)i(to)h(and)g(including)c(the)75 4308
y(newline.)38 b(Characters)30 b(follo)m(wing)e(the)i(n)m(um)m(b)s(er)e
(are)i(ignored.)40 b Fj(read)p 2475 4308 V 33 w(string)28
b Ft(has)h(the)h(same)g(seman)m(tics)g(as)75 4421 y(the)37
b(Unix)f(library)e(routine)i Fj(fgets)p Ft(.)58 b(It)37
b(reads)g(up)e(to)j Ff(n)24 b Fi(\000)g Ft(1)37 b(c)m(haracters)h(in)m
(to)f(a)g(bu\013er)f(and)g(terminates)75 4534 y(the)f(string)e(with)h
(a)h(n)m(ull)d(b)m(yte.)54 b(If)34 b(there)h(are)g(few)m(er)g(c)m
(haracters)h(on)f(the)f(curren)m(t)h(line,)f(it)g(reads)h(through)75
4647 y(the)f(newline)e(and)i(again)g(n)m(ull-terminates)f(the)h
(string.)51 b Fh(W)-9 b(arning:)49 b Ft(programs)34 b(that)h(use)e
(these)i(syscalls)75 4759 y(to)c(read)f(from)g(the)h(terminal)e(should)
f(not)j(use)f(memory-mapp)s(ed)f(IO)h(\(see)h(Section)f(5\).)216
4872 y Fj(sbrk)35 b Ft(returns)h(a)h(p)s(oin)m(ter)e(to)i(a)g(blo)s(c)m
(k)f(of)h(memory)f(con)m(taining)g Ff(n)g Ft(additional)e(b)m(ytes.)60
b Fj(exit)35 b Ft(stops)i(a)75 4985 y(program)30 b(from)g(running.)1942
5656 y(9)p eop
%%Page: 10 10
10 9 bop 608 110 2715 4 v 606 210 4 100 v 658 180 a Fe(Register)30
b(Name)p 1329 210 V 98 w(Num)m(b)s(er)p 1773 210 V 1773
210 V 698 w(Usage)p 3321 210 V 608 213 2715 4 v 608 230
V 606 329 4 100 v 658 299 a Fw(zero)p 1329 329 V 876
w(0)p 1773 329 V 99 w(Constan)n(t)d(0)p 3321 329 V 606
429 V 658 399 a(at)p 1329 429 V 951 w(1)p 1773 429 V
99 w(Reserv)n(ed)f(for)h(assem)n(bler)p 3321 429 V 606
529 V 658 499 a(v0)p 1329 529 V 939 w(2)p 1773 529 V
99 w(Expression)f(ev)-5 b(aluation)27 b(and)p 3321 529
V 606 628 V 658 598 a(v1)p 1329 628 V 939 w(3)p 1773
628 V 210 w(results)g(of)g(a)g(function)p 3321 628 V
606 728 V 658 698 a(a0)p 1329 728 V 941 w(4)p 1773 728
V 99 w(Argumen)n(t)g(1)p 3321 728 V 606 827 V 658 798
a(a1)p 1329 827 V 941 w(5)p 1773 827 V 99 w(Argumen)n(t)g(2)p
3321 827 V 606 927 V 658 897 a(a2)p 1329 927 V 941 w(6)p
1773 927 V 99 w(Argumen)n(t)g(3)p 3321 927 V 606 1027
V 658 997 a(a3)p 1329 1027 V 941 w(7)p 1773 1027 V 99
w(Argumen)n(t)g(4)p 3321 1027 V 606 1126 V 658 1096 a(t0)p
1329 1126 V 951 w(8)p 1773 1126 V 99 w(T)-7 b(emp)r(orary)26
b(\(not)i(preserv)n(ed)e(across)f(call\))p 3321 1126
V 606 1226 V 658 1196 a(t1)p 1329 1226 V 951 w(9)p 1773
1226 V 99 w(T)-7 b(emp)r(orary)26 b(\(not)i(preserv)n(ed)e(across)f
(call\))p 3321 1226 V 606 1326 V 658 1296 a(t2)p 1329
1326 V 909 w(10)p 1773 1326 V 99 w(T)-7 b(emp)r(orary)26
b(\(not)i(preserv)n(ed)e(across)f(call\))p 3321 1326
V 606 1425 V 658 1395 a(t3)p 1329 1425 V 909 w(11)p 1773
1425 V 99 w(T)-7 b(emp)r(orary)26 b(\(not)i(preserv)n(ed)e(across)f
(call\))p 3321 1425 V 606 1525 V 658 1495 a(t4)p 1329
1525 V 909 w(12)p 1773 1525 V 99 w(T)-7 b(emp)r(orary)26
b(\(not)i(preserv)n(ed)e(across)f(call\))p 3321 1525
V 606 1624 V 658 1595 a(t5)p 1329 1624 V 909 w(13)p 1773
1624 V 99 w(T)-7 b(emp)r(orary)26 b(\(not)i(preserv)n(ed)e(across)f
(call\))p 3321 1624 V 606 1724 V 658 1694 a(t6)p 1329
1724 V 909 w(14)p 1773 1724 V 99 w(T)-7 b(emp)r(orary)26
b(\(not)i(preserv)n(ed)e(across)f(call\))p 3321 1724
V 606 1824 V 658 1794 a(t7)p 1329 1824 V 909 w(15)p 1773
1824 V 99 w(T)-7 b(emp)r(orary)26 b(\(not)i(preserv)n(ed)e(across)f
(call\))p 3321 1824 V 606 1923 V 658 1893 a(s0)p 1329
1923 V 908 w(16)p 1773 1923 V 99 w(Sa)n(v)n(ed)i(temp)r(orary)f
(\(preserv)n(ed)g(across)g(call\))p 3321 1923 V 606 2023
V 658 1993 a(s1)p 1329 2023 V 908 w(17)p 1773 2023 V
99 w(Sa)n(v)n(ed)h(temp)r(orary)f(\(preserv)n(ed)g(across)g(call\))p
3321 2023 V 606 2123 V 658 2093 a(s2)p 1329 2123 V 908
w(18)p 1773 2123 V 99 w(Sa)n(v)n(ed)h(temp)r(orary)f(\(preserv)n(ed)g
(across)g(call\))p 3321 2123 V 606 2222 V 658 2192 a(s3)p
1329 2222 V 908 w(19)p 1773 2222 V 99 w(Sa)n(v)n(ed)h(temp)r(orary)f
(\(preserv)n(ed)g(across)g(call\))p 3321 2222 V 606 2322
V 658 2292 a(s4)p 1329 2322 V 908 w(20)p 1773 2322 V
99 w(Sa)n(v)n(ed)h(temp)r(orary)f(\(preserv)n(ed)g(across)g(call\))p
3321 2322 V 606 2421 V 658 2392 a(s5)p 1329 2421 V 908
w(21)p 1773 2421 V 99 w(Sa)n(v)n(ed)h(temp)r(orary)f(\(preserv)n(ed)g
(across)g(call\))p 3321 2421 V 606 2521 V 658 2491 a(s6)p
1329 2521 V 908 w(22)p 1773 2521 V 99 w(Sa)n(v)n(ed)h(temp)r(orary)f
(\(preserv)n(ed)g(across)g(call\))p 3321 2521 V 606 2621
V 658 2591 a(s7)p 1329 2621 V 908 w(23)p 1773 2621 V
99 w(Sa)n(v)n(ed)h(temp)r(orary)f(\(preserv)n(ed)g(across)g(call\))p
3321 2621 V 606 2720 V 658 2690 a(t8)p 1329 2720 V 909
w(24)p 1773 2720 V 99 w(T)-7 b(emp)r(orary)26 b(\(not)i(preserv)n(ed)e
(across)f(call\))p 3321 2720 V 606 2820 V 658 2790 a(t9)p
1329 2820 V 909 w(25)p 1773 2820 V 99 w(T)-7 b(emp)r(orary)26
b(\(not)i(preserv)n(ed)e(across)f(call\))p 3321 2820
V 606 2920 V 658 2890 a(k0)p 1329 2920 V 897 w(26)p 1773
2920 V 99 w(Reserv)n(ed)h(for)h(OS)h(k)n(ernel)p 3321
2920 V 606 3019 V 658 2989 a(k1)p 1329 3019 V 897 w(27)p
1773 3019 V 99 w(Reserv)n(ed)e(for)h(OS)h(k)n(ernel)p
3321 3019 V 606 3119 V 658 3089 a(gp)p 1329 3119 V 895
w(28)p 1773 3119 V 99 w(P)n(oin)n(ter)e(to)h(global)g(area)p
3321 3119 V 606 3218 V 658 3189 a(sp)p 1329 3218 V 904
w(29)p 1773 3218 V 99 w(Stac)n(k)g(p)r(oin)n(ter)p 3321
3218 V 606 3318 V 658 3288 a(fp)p 1329 3318 V 912 w(30)p
1773 3318 V 99 w(F)-7 b(rame)27 b(p)r(oin)n(ter)p 3321
3318 V 606 3418 V 658 3388 a(ra)p 1329 3418 V 908 w(31)p
1773 3418 V 99 w(Return)h(address)e(\(used)i(b)n(y)f(function)h(call\))
p 3321 3418 V 608 3421 2715 4 v 690 3675 a Ft(T)-8 b(able)30
b(2:)41 b(MIPS)30 b(registers)g(and)g(the)h(con)m(v)m(en)m(tion)g(go)m
(v)m(erning)g(their)f(use.)75 3950 y Fr(2)135 b(Description)45
b(of)h(the)f(MIPS)f(R2000)75 4153 y Ft(A)27 b(MIPS)g(pro)s(cessor)f
(consists)h(of)g(an)g(in)m(teger)g(pro)s(cessing)f(unit)f(\(the)j
(CPU\))f(and)f(a)h(collection)g(of)g(copro)s(ces-)75
4266 y(sors)c(that)g(p)s(erform)f(ancillary)f(tasks)j(or)f(op)s(erate)g
(on)g(other)g(t)m(yp)s(es)h(of)f(data)g(suc)m(h)g(as)g(\015oating)g(p)s
(oin)m(t)f(n)m(um)m(b)s(ers)75 4379 y(\(see)31 b(Figure)e(2\).)42
b(SPIM)29 b(sim)m(ulates)g(t)m(w)m(o)i(copro)s(cessors.)41
b(Copro)s(cessor)30 b(0)g(handles)e(traps,)i(exceptions,)h(and)75
4492 y(the)h(virtual)e(memory)i(system.)46 b(SPIM)31
b(sim)m(ulates)g(most)h(of)g(the)h(\014rst)e(t)m(w)m(o)i(and)e(en)m
(tirely)g(omits)h(details)f(of)75 4605 y(the)i(memory)f(system.)48
b(Copro)s(cessor)32 b(1)h(is)f(the)h(\015oating)f(p)s(oin)m(t)g(unit.)
46 b(SPIM)32 b(sim)m(ulates)g(most)h(asp)s(ects)g(of)75
4718 y(this)c(unit.)75 4961 y Fl(2.1)112 b(CPU)37 b(Registers)75
5133 y Ft(The)f(MIPS)h(\(and)g(SPIM\))f(cen)m(tral)i(pro)s(cessing)e
(unit)f(con)m(tains)i(32)h(general)f(purp)s(ose)e(registers)i(that)h
(are)75 5246 y(n)m(um)m(b)s(ered)g(0{31.)70 b(Register)40
b Ff(n)f Ft(is)g(designated)g(b)m(y)g Fj($n)p Ft(.)68
b(Register)40 b Fj($0)f Ft(alw)m(a)m(ys)h(con)m(tains)g(the)g
(hardwired)75 5359 y(v)-5 b(alue)34 b(0.)52 b(MIPS)34
b(has)g(established)e(a)j(set)f(of)h(con)m(v)m(en)m(tions)g(as)f(to)h
(ho)m(w)f(registers)g(should)e(b)s(e)i(used.)51 b(These)1920
5656 y(10)p eop
%%Page: 11 11
11 10 bop -85 7 a
 32364626 7499120 2762833 33088225 35127459 40587345 startTexFig
 -85 7 a
%%BeginDocument: status_reg.id

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.77233 0 0 0.77233 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 30 112 ] concat
%I
26 616 650 656 Rect
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 30 112 ] concat
%I
618 656 618 616 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -10 112 ] concat
%I
618 656 618 616 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -50 112 ] concat
%I
618 656 618 616 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -90 112 ] concat
%I
618 656 618 616 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -130 112 ] concat
%I
618 656 618 616 Line
%I 1
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 1 0 0 1 30 112 ] concat
%I
26 616 274 656 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 304 795 ] concat
%I
[
(15)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 368 795 ] concat
%I
[
(10)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 656 795 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 616 795 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 584 795 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 545 795 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 505 795 ] concat
%I
[
(4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 465 795 ] concat
%I
[
(5)
] Text
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 1 0 0 1 22 168 ] concat
%I
354 560 426 600 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 312 707 ] concat
%I
[
(Interrupt)
(Mask)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 478.5 715 ] concat
%I
[
(Old)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 542.5 715 ] concat
%I
[
(Previous)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 626.5 715 ] concat
%I
[
(Current)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -0.487396 0 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 0.707107 0.707107 -0.707107 0.707107 447.469 666.282 ] concat
%I
[
(Kernel/)
(User)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 0.707107 0.707107 -0.707107 0.707107 488.494 666.282 ] concat
%I
[
(Interrupt)
(Enable)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 79.5124 -0.000488281 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 0.707107 0.707107 -0.707107 0.707107 447.469 666.283 ] concat
%I
[
(Kernel/)
(User)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 0.707107 0.707107 -0.707107 0.707107 488.494 666.283 ] concat
%I
[
(Interrupt)
(Enable)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 159.512 -0.000488281 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 0.707107 0.707107 -0.707107 0.707107 447.469 666.283 ] concat
%I
[
(Kernel/)
(User)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 0.707107 0.707107 -0.707107 0.707107 488.494 666.283 ] concat
%I
[
(Interrupt)
(Enable)
] Text
End

End %I eop

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 1 0 0 1 30 168 ] concat
%I
426 544 442 544 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 1 0 0 1 78 168 ] concat
%I
426 544 442 544 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 1 0 0 1 30 168 ] concat
%I
506 544 514 544 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 1 0 0 1 86 168 ] concat
%I
506 544 514 544 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 1 0 0 1 30 168 ] concat
%I
586 544 594 544 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 1 0 0 1 86 168 ] concat
%I
586 544 594 544 Line
%I 1
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 1355 1153 a Ft(Figure)30 b(3:)41 b(The)29 b Fj(Status)g
Ft(register.)75 1428 y(suggestions)36 b(are)g(guidelines,)f(whic)m(h)g
(are)h(not)g(enforced)g(b)m(y)g(the)g(hardw)m(are.)56
b(Ho)m(w)m(ev)m(er)38 b(a)f(program)e(that)75 1541 y(violates)23
b(them)g(will)d(not)k(w)m(ork)f(prop)s(erly)e(with)g(other)j(soft)m(w)m
(are.)39 b(T)-8 b(able)23 b(2)h(lists)d(the)i(registers)g(and)g
(describ)s(es)75 1654 y(their)29 b(in)m(tended)h(use.)216
1767 y(Registers)25 b Fj($at)g Ft(\(1\),)i Fj($k0)d Ft(\(26\),)k(and)d
Fj($k1)f Ft(\(27\))j(are)e(reserv)m(ed)g(for)g(use)g(b)m(y)g(the)g
(assem)m(bler)g(and)f(op)s(erating)75 1880 y(system.)216
1993 y(Registers)39 b Fj($a0)p Ft({)p Fj($a3)f Ft(\(4{7\))j(are)f(used)
e(to)i(pass)e(the)i(\014rst)e(four)g(argumen)m(ts)i(to)g(routines)d
(\(remaining)75 2106 y(argumen)m(ts)i(are)h(passed)e(on)h(the)h(stac)m
(k\).)68 b(Registers)39 b Fj($v0)f Ft(and)h Fj($v1)f
Ft(\(2,)k(3\))e(are)g(used)e(to)i(return)e(v)-5 b(alues)75
2219 y(from)33 b(functions.)49 b(Registers)34 b Fj($t0)p
Ft({)p Fj($t9)e Ft(\(8{15,)37 b(24,)f(25\))e(are)g(caller-sa)m(v)m(ed)h
(registers)e(used)g(for)g(temp)s(orary)75 2331 y(quan)m(tities)f(that)h
(do)g(not)f(need)h(to)g(b)s(e)f(preserv)m(ed)g(across)i(calls.)46
b(Registers)33 b Fj($s0)p Ft({)p Fj($s7)e Ft(\(16{23\))36
b(are)d(callee-)75 2444 y(sa)m(v)m(ed)e(registers)g(that)g(hold)e
(long-liv)m(ed)g(v)-5 b(alues)29 b(that)i(should)e(b)s(e)g(preserv)m
(ed)i(across)f(calls.)216 2557 y(Register)f Fj($sp)e
Ft(\(29\))j(is)d(the)i(stac)m(k)h(p)s(oin)m(ter,)e(whic)m(h)f(p)s(oin)m
(ts)g(to)i(the)g(last)f(lo)s(cation)g(in)f(use)h(on)g(the)h(stac)m(k.)
3814 2524 y Fq(3)75 2670 y Ft(Register)f Fj($fp)f Ft(\(30\))i(is)e(the)
h(frame)g(p)s(oin)m(ter.)1593 2637 y Fq(4)1672 2670 y
Ft(Register)g Fj($ra)f Ft(\(31\))i(is)e(written)g(with)f(the)i(return)f
(address)g(for)75 2783 y(a)k(call)e(b)m(y)i(the)f Fj(jal)g
Ft(instruction.)216 2896 y(Register)i Fj($gp)f Ft(\(28\))j(is)c(a)j
(global)e(p)s(oin)m(ter)g(that)h(p)s(oin)m(ts)f(in)m(to)h(the)g(middle)
d(of)j(a)g(64K)h(blo)s(c)m(k)e(of)h(memory)75 3009 y(in)f(the)h(heap)h
(that)f(holds)f(constan)m(ts)j(and)d(global)h(v)-5 b(ariables.)45
b(The)32 b(ob)5 b(jects)33 b(in)e(this)g(heap)h(can)h(b)s(e)e(quic)m
(kly)75 3122 y(accessed)h(with)d(a)h(single)f(load)h(or)h(store)g
(instruction.)216 3235 y(In)25 b(addition,)g(copro)s(cessor)h(0)g(con)m
(tains)f(registers)g(that)h(are)g(useful)e(to)i(handle)e(exceptions.)39
b(SPIM)25 b(do)s(es)75 3348 y(not)k(implemen)m(t)e(all)g(of)h(these)h
(registers,)g(since)f(they)g(are)h(not)f(of)h(m)m(uc)m(h)f(use)g(in)f
(a)i(sim)m(ulator)e(or)i(are)g(part)f(of)75 3461 y(the)j(memory)f
(system,)h(whic)m(h)e(is)g(not)i(implemen)m(ted.)39 b(Ho)m(w)m(ev)m
(er,)33 b(it)d(do)s(es)g(pro)m(vide)f(the)i(follo)m(wing:)p
361 3565 3209 4 v 359 3664 4 100 v 411 3634 a Fe(Register)f(Name)p
1082 3664 V 98 w(Num)m(b)s(er)p 1526 3664 V 1526 3664
V 945 w(Usage)p 3568 3664 V 361 3668 3209 4 v 361 3684
V 359 3784 4 100 v 411 3754 a Fw(BadV)-9 b(Addr)p 1082
3784 V 487 w(8)p 1526 3784 V 250 w(Memory)27 b(address)f(at)i(whic)n(h)
f(address)f(exception)i(o)r(ccurred)p 3568 3784 V 359
3883 V 411 3853 a(Status)p 1082 3883 V 622 w(12)p 1526
3883 V 229 w(In)n(terrupt)f(mask)g(and)h(enable)f(bits)p
3568 3883 V 359 3983 V 411 3953 a(Cause)p 1082 3983 V
635 w(13)p 1526 3983 V 229 w(Exception)g(t)n(yp)r(e)h(and)f(p)r(ending)
h(in)n(terrupt)f(bits)p 3568 3983 V 359 4083 V 411 4053
a(EPC)p 1082 4083 V 679 w(14)p 1526 4083 V 229 w(Address)g(of)h
(instruction)f(that)h(caused)f(exception)p 3568 4083
V 361 4086 3209 4 v 75 4232 a Ft(These)f(registers)g(are)h(part)f(of)h
(copro)s(cessor)f(0's)h(register)g(set)f(and)g(are)h(accessed)h(b)m(y)e
(the)g Fj(lwc0)p Ft(,)h Fj(mfc0)p Ft(,)f Fj(mtc0)p Ft(,)75
4345 y(and)k Fj(swc0)f Ft(instructions.)216 4458 y(Figure)44
b(3)h(describ)s(es)e(the)h(bits)g(in)f(the)i Fj(Status)d
Ft(register)j(that)g(are)g(implemen)m(ted)e(b)m(y)h(SPIM.)g(The)75
4571 y Fj(interrupt)h(mask)28 b Ft(con)m(tains)h(a)h(bit)e(for)g(eac)m
(h)i(of)g(the)f(\014v)m(e)g(in)m(terrupt)e(lev)m(els.)40
b(If)29 b(a)g(bit)f(is)g(one,)i(in)m(terrupts)d(at)75
4684 y(that)h(lev)m(el)f(are)h(allo)m(w)m(ed.)39 b(If)27
b(the)h(bit)e(is)h(zero,)i(in)m(terrupts)d(at)i(that)g(lev)m(el)f(are)h
(disabled.)37 b(The)27 b(lo)m(w)g(six)f(bits)h(of)75
4797 y(the)j Fj(Status)e Ft(register)i(implemen)m(t)f(a)h(three-lev)m
(el)h(stac)m(k)g(for)f(the)g Fj(kernel/user)d Ft(and)i
Fj(interrupt)46 b(enable)75 4910 y Ft(bits.)59 b(The)37
b Fj(kernel/user)d Ft(bit)i(is)g(0)h(if)f(the)h(program)g(w)m(as)g
(running)d(in)i(the)h(k)m(ernel)f(when)g(the)h(in)m(terrupt)p
75 4989 1512 4 v 179 5042 a Fn(3)213 5074 y Fo(In)27
b(earlier)h(v)n(ersion)f(of)h(SPIM,)f Fc($sp)h Fo(w)n(as)g(do)r(cumen)n
(ted)d(as)j(p)r(oin)n(ting)f(at)g(the)g(\014rst)g(free)h(w)n(ord)f(on)g
(the)g(stac)n(k)g(\(not)f(the)h(last)75 5165 y(w)n(ord)g(of)h(the)f
(stac)n(k)g(frame\).)38 b(Recen)n(t)27 b(MIPS)g(do)r(cumen)n(ts)e(ha)n
(v)n(e)i(made)f(it)h(clear)h(that)f(this)g(w)n(as)h(an)f(error.)39
b(Both)27 b(con)n(v)n(en)n(tions)75 5257 y(w)n(ork)f(equally)f(w)n
(ell,)j(but)c(w)n(e)i(c)n(ho)r(ose)h(to)f(follo)n(w)i(the)d(real)i
(system.)179 5316 y Fn(4)213 5348 y Fo(The)f(MIPS)g(compiler)f(do)r(es)
i(not)e(use)h(a)g(frame)g(p)r(oin)n(ter,)g(so)g(this)g(register)g(is)h
(used)e(as)h(callee-sa)n(v)n(ed)h(register)g Fc($s8)p
Fo(.)1920 5656 y Ft(11)p eop
%%Page: 12 12
12 11 bop -52 7 a
 31838372 5920358 2762833 34666987 34601205 40587345 startTexFig
 -52 7 a
%%BeginDocument: cause_reg.id

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.77233 0 0 0.77233 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 30 112 ] concat
%I
26 616 650 656 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 1 0 0 1 30 168 ] concat
%I
610 560 650 600 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 1.21774 0 0 0.97619 -64.4976 181.333 ] concat
%I
434 560 506 600 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 1 0 0 1 30 168 ] concat
%I
26 560 346 600 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 624 795 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 544 795 ] concat
%I
[
(5)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 456 795 ] concat
%I
[
(10)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 376 795 ] concat
%I
[
(15)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 391 707 ] concat
%I
[
(Pending)
(Interrupts)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 567.5 707 ] concat
%I
[
(Exception)
(Code)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 1379 953 a Ft(Figure)29 b(4:)41 b(The)30 b Fj(Cause)f
Ft(register.)75 1222 y(o)s(ccurred)e(and)h(1)g(if)f(it)g(w)m(as)h(in)f
(user)g(mo)s(de.)40 b(If)27 b(the)h Fj(interrupt)45 b(enable)26
b Ft(bit)h(is)g(1,)i(in)m(terrupts)e(are)h(allo)m(w)m(ed.)75
1335 y(If)34 b(it)g(is)g(0,)i(they)f(are)g(disabled.)51
b(A)m(t)35 b(an)g(in)m(terrupt,)f(these)h(six)f(bits)f(are)i(shifted)e
(left)i(b)m(y)f(t)m(w)m(o)i(bits,)f(so)g(the)75 1448
y(curren)m(t)f(bits)g(b)s(ecome)h(the)g(previous)e(bits)h(and)g(the)h
(previous)e(bits)h(b)s(ecome)h(the)g(old)e(bits.)53 b(The)34
b(curren)m(t)75 1560 y(bits)29 b(are)i(b)s(oth)f(set)h(to)g(0)f
(\(i.e.,)i(k)m(ernel)d(mo)s(de)h(with)f(in)m(terrupts)g(disabled\).)216
1673 y(Figure)j(4)g(describ)s(es)f(the)h(bits)f(in)g(the)i
Fj(Cause)d Ft(registers.)46 b(The)32 b(\014v)m(e)h Fj(pending)45
b(interrupt)30 b Ft(bits)h(corre-)75 1786 y(sp)s(ond)g(to)i(the)f
(\014v)m(e)h(in)m(terrupt)e(lev)m(els.)46 b(A)33 b(bit)e(b)s(ecomes)i
(1)g(when)e(an)h(in)m(terrupt)f(at)j(its)d(lev)m(el)h(has)h(o)s
(ccurred)75 1899 y(but)k(has)h(not)h(b)s(een)e(serviced.)63
b(The)38 b Fj(exception)45 b(code)37 b Ft(register)h(con)m(tains)h(a)f
(co)s(de)g(from)g(the)g(follo)m(wing)75 2012 y(table)30
b(describing)e(the)j(cause)g(of)f(an)h(exception.)p 537
2108 2857 4 v 535 2208 4 100 v 586 2178 a Fe(Num)m(b)s(er)p
978 2208 V 99 w(Name)p 1458 2208 V 234 w(Description)p
3392 2208 V 537 2211 2857 4 v 537 2228 V 535 2327 4 100
v 586 2297 a Fw(0)p 978 2327 V 402 w(INT)p 1458 2327
V 328 w(External)26 b(in)n(terrupt)p 3392 2327 V 535
2427 V 586 2397 a(4)p 978 2427 V 402 w(ADDRL)p 1458 2427
V 179 w(Address)h(error)e(exception)j(\(load)f(or)g(instruction)g(fetc)
n(h\))p 3392 2427 V 535 2527 V 586 2497 a(5)p 978 2527
V 402 w(ADDRS)p 1458 2527 V 185 w(Address)g(error)e(exception)j
(\(store\))p 3392 2527 V 535 2626 V 586 2596 a(6)p 978
2626 V 402 w(IBUS)p 1458 2626 V 283 w(Bus)f(error)f(on)h(instruction)g
(fetc)n(h)p 3392 2626 V 535 2726 V 586 2696 a(7)p 978
2726 V 402 w(DBUS)p 1458 2726 V 250 w(Bus)g(error)f(on)h(data)g(load)g
(or)g(store)p 3392 2726 V 535 2825 V 586 2796 a(8)p 978
2825 V 402 w(SYSCALL)p 1458 2825 V 100 w(Syscall)g(exception)p
3392 2825 V 535 2925 V 586 2895 a(9)p 978 2925 V 402
w(BKPT)p 1458 2925 V 239 w(Breakp)r(oin)n(t)f(exception)p
3392 2925 V 535 3025 V 586 2995 a(10)p 978 3025 V 360
w(RI)p 1458 3025 V 389 w(Reserv)n(ed)g(instruction)h(exception)p
3392 3025 V 535 3124 V 586 3094 a(12)p 978 3124 V 360
w(O)n(VF)p 1458 3124 V 301 w(Arithmetic)h(o)n(v)n(er\015o)n(w)d
(exception)p 3392 3124 V 537 3128 2857 4 v 75 3331 a
Fl(2.2)112 b(Byte)37 b(Order)75 3502 y Ft(Pro)s(cessors)27
b(can)h(n)m(um)m(b)s(er)f(the)h(b)m(ytes)g(within)d(a)j(w)m(ord)f(to)i
(mak)m(e)f(the)g(b)m(yte)g(with)f(the)h(lo)m(w)m(est)g(n)m(um)m(b)s(er)
e(either)75 3615 y(the)42 b(leftmost)g(or)g(righ)m(tmost)g(one.)76
b(The)42 b(con)m(v)m(en)m(tion)h(used)e(b)m(y)h(a)g(mac)m(hine)g(is)f
(its)g Fk(byte)i(or)-5 b(der)10 b Ft(.)77 b(MIPS)75 3728
y(pro)s(cessors)30 b(can)h(op)s(erate)g(with)e(either)g
Fk(big-endian)38 b Ft(b)m(yte)31 b(order:)1795 3900 y
Fh(Byte)k(#)p 1675 3937 581 4 v 1673 4050 4 113 v 1725
4016 a Ft(0)p 1818 4050 V 100 w(1)p 1963 4050 V 100 w(2)p
2108 4050 V 100 w(3)p 2254 4050 V 1675 4053 581 4 v 75
4192 a(or)30 b Fk(little-endian)39 b Ft(b)m(yte)31 b(order:)1795
4363 y Fh(Byte)k(#)p 1675 4401 V 1673 4513 4 113 v 1725
4480 a Ft(3)p 1818 4513 V 100 w(2)p 1963 4513 V 100 w(1)p
2108 4513 V 100 w(0)p 2254 4513 V 1675 4517 581 4 v 75
4655 a(SPIM)h(op)s(erates)h(with)e(b)s(oth)h(b)m(yte)h(orders.)59
b(SPIM's)36 b(b)m(yte)h(order)f(is)f(determined)h(b)m(y)g(the)h(b)m
(yte)g(order)f(of)75 4768 y(the)c(underlying)d(hardw)m(are)i(running)e
(the)j(sim)m(ulator.)44 b(On)31 b(a)i(DECstation)f(3100,)i(SPIM)d(is)g
(little-endian,)75 4881 y(while)d(on)j(a)f(HP)h(Bob)s(cat,)g(Sun)e(4)i
(or)f(PC/R)-8 b(T,)31 b(SPIM)f(is)f(big-endian.)75 5123
y Fl(2.3)112 b(Addressing)38 b(Mo)s(des)75 5294 y Ft(MIPS)h(is)g(a)h
(load/store)h(arc)m(hitecture,)i(whic)m(h)38 b(means)i(that)g(only)f
(load)g(and)h(store)g(instructions)e(access)75 5407 y(memory)-8
b(.)83 b(Computation)44 b(instructions)e(op)s(erate)j(only)e(on)i(v)-5
b(alues)43 b(in)h(registers.)82 b(The)44 b(bare)g(mac)m(hine)1920
5656 y(12)p eop
%%Page: 13 13
13 12 bop 75 99 a Ft(pro)m(vides)44 b(only)g(one)h(memory)g(addressing)
e(mo)s(de:)69 b Fj(c\(rx\))p Ft(,)48 b(whic)m(h)43 b(uses)i(the)g(sum)f
(of)h(the)g(immediate)75 211 y(\(in)m(teger\))39 b Fj(c)f
Ft(and)g(the)g(con)m(ten)m(ts)i(of)e(register)g Fj(rx)g
Ft(as)g(the)g(address.)64 b(The)37 b(virtual)g(mac)m(hine)h(pro)m
(vides)f(the)75 324 y(follo)m(wing)29 b(addressing)g(mo)s(des)g(for)h
(load)g(and)g(store)h(instructions:)p 309 419 3313 4
v 307 519 4 100 v 657 489 a Fe(F)-8 b(ormat)p 1305 519
V 1305 519 V 1045 w(Address)31 b(Computation)p 3620 519
V 309 522 3313 4 v 309 539 V 307 639 4 100 v 359 609
a Fw(\(register\))p 1305 639 V 664 w(con)n(ten)n(ts)c(of)g(register)p
3620 639 V 307 738 V 359 708 a(imm)p 1305 738 V 837 w(immediate)p
3620 738 V 307 838 V 359 808 a(imm)h(\(register\))p 1305
838 V 475 w(immediate)g(+)f(con)n(ten)n(ts)g(of)g(register)p
3620 838 V 307 937 V 359 908 a(sym)n(b)r(ol)p 1305 937
V 741 w(address)f(of)i(sym)n(b)r(ol)p 3620 937 V 307
1037 V 359 1007 a(sym)n(b)r(ol)f Fb(\006)g Fw(imm)p 1305
1037 V 461 w(address)f(of)i(sym)n(b)r(ol)f(+)g(or)g Fb(\000)g
Fw(immediate)p 3620 1037 V 307 1137 V 359 1107 a(sym)n(b)r(ol)g
Fb(\006)g Fw(imm)h(\(register\))p 1305 1137 V 99 w(address)e(of)i(sym)n
(b)r(ol)f(+)g(or)g Fb(\000)g Fw(\(immediate)h(+)f(con)n(ten)n(ts)g(of)h
(register\))p 3620 1137 V 309 1140 3313 4 v 216 1277
a Ft(Most)35 b(load)f(and)f(store)i(instructions)c(op)s(erate)k(only)e
(on)h(aligned)f(data.)52 b(A)34 b(quan)m(tit)m(y)g(is)f
Fk(aligne)-5 b(d)45 b Ft(if)33 b(its)75 1390 y(memory)g(address)f(is)g
(a)h(m)m(ultiple)d(of)j(its)f(size)h(in)f(b)m(ytes.)48
b(Therefore,)34 b(a)f(halfw)m(ord)e(ob)5 b(ject)34 b(m)m(ust)f(b)s(e)f
(stored)75 1503 y(at)i(ev)m(en)h(addresses)e(and)g(a)h(full)e(w)m(ord)h
(ob)5 b(ject)34 b(m)m(ust)g(b)s(e)f(stored)h(at)g(addresses)g(that)g
(are)g(a)g(m)m(ultiple)d(of)j(4.)75 1616 y(Ho)m(w)m(ev)m(er,)f(MIPS)d
(pro)m(vides)f(some)i(instructions)d(for)i(manipulating)e(unaligned)g
(data.)75 1858 y Fl(2.4)112 b(Arithmetic)34 b(and)39
b(Logical)d(Instructions)75 2029 y Ft(In)28 b(all)f(instructions)g(b)s
(elo)m(w,)h Fj(Src2)g Ft(can)g(either)g(b)s(e)g(a)h(register)g(or)f(an)
h(immediate)f(v)-5 b(alue)28 b(\(a)h(16)g(bit)f(in)m(teger\).)75
2142 y(The)38 b(immediate)h(forms)f(of)h(the)g(instructions)e(are)i
(only)g(included)d(for)j(reference.)67 b(The)38 b(assem)m(bler)h(will)
75 2255 y(translate)j(the)g(more)g(general)g(form)g(of)g(an)g
(instruction)d(\(e.g.,)47 b Fj(add)p Ft(\))42 b(in)m(to)f(the)i
(immediate)e(form)g(\(e.g.,)75 2368 y Fj(addi)p Ft(\))30
b(if)f(the)h(second)h(argumen)m(t)g(is)e(constan)m(t.)75
2574 y Fj(abs)47 b(Rdest,)f(Rsrc)2407 b Fk(A)n(bsolute)32
b(V)-7 b(alue)3819 2541 y Fa(y)75 2686 y Ft(Put)30 b(the)h(absolute)f
(v)-5 b(alue)30 b(of)g(the)h(in)m(teger)f(from)g(register)h
Fj(Rsrc)e Ft(in)g(register)h Fj(Rdest)p Ft(.)75 2892
y Fj(add)47 b(Rdest,)f(Rsrc1,)g(Src2)1757 b Fk(A)-5 b(ddition)33
b(\(with)h(over\015ow\))75 3005 y Fj(addi)47 b(Rdest,)f(Rsrc1,)g(Imm)
1310 b Fk(A)-5 b(ddition)34 b(Imme)-5 b(diate)34 b(\(with)g
(over\015ow\))75 3118 y Fj(addu)47 b(Rdest,)f(Rsrc1,)g(Src2)1583
b Fk(A)-5 b(ddition)34 b(\(without)g(over\015ow\))75
3231 y Fj(addiu)46 b(Rdest,)g(Rsrc1,)h(Imm)1137 b Fk(A)-5
b(ddition)34 b(Imme)-5 b(diate)34 b(\(without)g(over\015ow\))75
3344 y Ft(Put)c(the)h(sum)e(of)i(the)f(in)m(tegers)h(from)f(register)g
Fj(Rsrc1)f Ft(and)h Fj(Src2)f Ft(\(or)i Fj(Imm)p Ft(\))e(in)m(to)i
(register)f Fj(Rdest)p Ft(.)75 3549 y Fj(and)47 b(Rdest,)f(Rsrc1,)g
(Src2)2525 b Fk(AND)75 3662 y Fj(andi)47 b(Rdest,)f(Rsrc1,)g(Imm)2079
b Fk(AND)31 b(Imme)-5 b(diate)75 3775 y Ft(Put)30 b(the)g(logical)g
(AND)g(of)h(the)f(in)m(tegers)g(from)g(register)g Fj(Rsrc1)f
Ft(and)g Fj(Src2)g Ft(\(or)i Fj(Imm)p Ft(\))e(in)m(to)h(register)g
Fj(Rdest)p Ft(.)75 3980 y Fj(div)47 b(Rsrc1,)f(Rsrc2)2412
b Fk(Divide)32 b(\(signe)-5 b(d\))75 4093 y Fj(divu)47
b(Rsrc1,)f(Rsrc2)2264 b Fk(Divide)32 b(\(unsigne)-5 b(d\))75
4206 y Ft(Divide)30 b(the)h(con)m(ten)m(ts)h(of)g(the)f(t)m(w)m(o)h
(registers.)42 b Fj(divu)30 b Ft(treats)i(is)e(op)s(erands)f(as)i
(unsigned)e(v)-5 b(alues.)42 b(Lea)m(v)m(e)33 b(the)75
4319 y(quotien)m(t)i(in)f(register)i Fj(lo)e Ft(and)h(the)g(remainder)f
(in)g(register)h Fj(hi)p Ft(.)55 b(Note)37 b(that)f(if)e(an)h(op)s
(erand)f(is)g(negativ)m(e,)75 4432 y(the)h(remainder)e(is)g(unsp)s
(eci\014ed)f(b)m(y)j(the)f(MIPS)g(arc)m(hitecture)i(and)e(dep)s(ends)e
(on)j(the)f(con)m(v)m(en)m(tions)i(of)f(the)75 4545 y(mac)m(hine)30
b(on)g(whic)m(h)f(SPIM)h(is)g(run.)75 4750 y Fj(div)47
b(Rdest,)f(Rsrc1,)g(Src2)1471 b Fk(Divide)32 b(\(signe)-5
b(d,)34 b(with)f(over\015ow\))3819 4717 y Fa(y)75 4863
y Fj(divu)47 b(Rdest,)f(Rsrc1,)g(Src2)1198 b Fk(Divide)32
b(\(unsigne)-5 b(d,)33 b(without)h(over\015ow\))3819
4830 y Fa(y)75 4976 y Ft(Put)d(the)h(quotien)m(t)g(of)g(the)g(in)m
(tegers)g(from)f(register)g Fj(Rsrc1)g Ft(and)g Fj(Src2)f
Ft(in)m(to)i(register)f Fj(Rdest)p Ft(.)43 b Fj(divu)31
b Ft(treats)75 5089 y(is)e(op)s(erands)h(as)g(unsigned)e(v)-5
b(alues.)75 5294 y Fj(mul)47 b(Rdest,)f(Rsrc1,)g(Src2)1577
b Fk(Multiply)33 b(\(without)h(over\015ow\))3819 5261
y Fa(y)75 5407 y Fj(mulo)47 b(Rdest,)f(Rsrc1,)g(Src2)1654
b Fk(Multiply)33 b(\(with)h(over\015ow\))3819 5374 y
Fa(y)1920 5656 y Ft(13)p eop
%%Page: 14 14
14 13 bop 75 99 a Fj(mulou)46 b(Rdest,)g(Rsrc1,)h(Src2)1214
b Fk(Unsigne)-5 b(d)32 b(Multiply)h(\(with)h(over\015ow\))3819
66 y Fa(y)75 211 y Ft(Put)c(the)h(pro)s(duct)e(of)h(the)h(in)m(tegers)f
(from)g(register)h Fj(Rsrc1)e Ft(and)g Fj(Src2)h Ft(in)m(to)g(register)
g Fj(Rdest)p Ft(.)75 424 y Fj(mult)47 b(Rsrc1,)f(Rsrc2)2642
b Fk(Multiply)75 537 y Fj(multu)46 b(Rsrc1,)g(Rsrc2)2202
b Fk(Unsigne)-5 b(d)33 b(Multiply)75 650 y Ft(Multiply)c(the)j(con)m
(ten)m(ts)h(of)f(the)g(t)m(w)m(o)h(registers.)44 b(Lea)m(v)m(e)34
b(the)e(lo)m(w-order)f(w)m(ord)h(of)f(the)h(pro)s(duct)f(in)f(register)
75 763 y Fj(lo)g Ft(and)g(the)g(high-w)m(ord)f(in)g(register)h
Fj(hi)p Ft(.)75 975 y Fj(neg)47 b(Rdest,)f(Rsrc)1843
b Fk(Ne)-5 b(gate)33 b(V)-7 b(alue)32 b(\(with)i(over\015ow\))3819
942 y Fa(y)75 1088 y Fj(negu)47 b(Rdest,)f(Rsrc)1670
b Fk(Ne)-5 b(gate)33 b(V)-7 b(alue)32 b(\(without)i(over\015ow\))3819
1055 y Fa(y)75 1201 y Ft(Put)c(the)h(negativ)m(e)g(of)g(the)f(in)m
(teger)h(from)f(register)g Fj(Rsrc)f Ft(in)m(to)i(register)f
Fj(Rdest)p Ft(.)75 1414 y Fj(nor)47 b(Rdest,)f(Rsrc1,)g(Src2)2525
b Fk(NOR)75 1526 y Ft(Put)30 b(the)h(logical)e(NOR)i(of)f(the)h(in)m
(tegers)f(from)g(register)g Fj(Rsrc1)f Ft(and)h Fj(Src2)f
Ft(in)m(to)i(register)f Fj(Rdest)p Ft(.)75 1739 y Fj(not)47
b(Rdest,)f(Rsrc)2793 b Fk(NOT)3819 1706 y Fa(y)75 1852
y Ft(Put)30 b(the)h(bit)m(wise)e(logical)g(negation)i(of)g(the)f(in)m
(teger)h(from)f(register)g Fj(Rsrc)f Ft(in)m(to)i(register)f
Fj(Rdest)p Ft(.)75 2064 y Fj(or)47 b(Rdest,)f(Rsrc1,)g(Src2)2641
b Fk(OR)75 2177 y Fj(ori)47 b(Rdest,)f(Rsrc1,)g(Imm)2195
b Fk(OR)32 b(Imme)-5 b(diate)75 2290 y Ft(Put)30 b(the)h(logical)e(OR)h
(of)h(the)f(in)m(tegers)h(from)f(register)g Fj(Rsrc1)f
Ft(and)h Fj(Src2)f Ft(\(or)i Fj(Imm)p Ft(\))f(in)m(to)g(register)g
Fj(Rdest)p Ft(.)75 2503 y Fj(rem)47 b(Rdest,)f(Rsrc1,)g(Src2)2231
b Fk(R)-5 b(emainder)3819 2470 y Fa(y)75 2616 y Fj(remu)47
b(Rdest,)f(Rsrc1,)g(Src2)1790 b Fk(Unsigne)-5 b(d)33
b(R)-5 b(emainder)3819 2583 y Fa(y)75 2729 y Ft(Put)24
b(the)h(remainder)d(from)i(dividing)d(the)k(in)m(teger)g(in)e(register)
h Fj(Rsrc1)f Ft(b)m(y)h(the)h(in)m(teger)f(in)g Fj(Src2)f
Ft(in)m(to)h(register)75 2842 y Fj(Rdest)p Ft(.)36 b(Note)22
b(that)f(if)f(an)h(op)s(erand)e(is)h(negativ)m(e,)k(the)d(remainder)e
(is)h(unsp)s(eci\014ed)e(b)m(y)i(the)h(MIPS)f(arc)m(hitecture)75
2954 y(and)30 b(dep)s(ends)e(on)j(the)f(con)m(v)m(en)m(tions)i(of)e
(the)h(mac)m(hine)f(on)g(whic)m(h)f(SPIM)h(is)f(run.)75
3167 y Fj(rol)47 b(Rdest,)f(Rsrc1,)g(Src2)2219 b Fk(R)-5
b(otate)35 b(L)-5 b(eft)3819 3134 y Fa(y)75 3280 y Fj(ror)47
b(Rdest,)f(Rsrc1,)g(Src2)2161 b Fk(R)-5 b(otate)35 b(R)n(ight)3819
3247 y Fa(y)75 3393 y Ft(Rotate)30 b(the)f(con)m(ten)m(ts)h(of)f
(register)g Fj(Rsrc1)e Ft(left)h(\(righ)m(t\))h(b)m(y)f(the)h(distance)
f(indicated)f(b)m(y)i Fj(Src2)e Ft(and)h(put)g(the)75
3506 y(result)h(in)g(register)i Fj(Rdest)p Ft(.)75 3718
y Fj(sll)47 b(Rdest,)f(Rsrc1,)g(Src2)2057 b Fk(Shift)33
b(L)-5 b(eft)33 b(L)-5 b(o)g(gic)g(al)75 3831 y Fj(sllv)47
b(Rdest,)f(Rsrc1,)g(Rsrc2)1602 b Fk(Shift)33 b(L)-5 b(eft)33
b(L)-5 b(o)g(gic)g(al)34 b(V)-7 b(ariable)75 3944 y Fj(sra)47
b(Rdest,)f(Rsrc1,)g(Src2)1846 b Fk(Shift)33 b(R)n(ight)g(A)n(rithmetic)
75 4057 y Fj(srav)47 b(Rdest,)f(Rsrc1,)g(Rsrc2)1391 b
Fk(Shift)33 b(R)n(ight)g(A)n(rithmetic)f(V)-7 b(ariable)75
4170 y Fj(srl)47 b(Rdest,)f(Rsrc1,)g(Src2)1999 b Fk(Shift)33
b(R)n(ight)g(L)-5 b(o)g(gic)g(al)75 4283 y Fj(srlv)47
b(Rdest,)f(Rsrc1,)g(Rsrc2)1544 b Fk(Shift)33 b(R)n(ight)g(L)-5
b(o)g(gic)g(al)34 b(V)-7 b(ariable)75 4396 y Ft(Shift)31
b(the)i(con)m(ten)m(ts)h(of)f(register)f Fj(Rsrc1)g Ft(left)g(\(righ)m
(t\))h(b)m(y)f(the)h(distance)f(indicated)g(b)m(y)g Fj(Src2)g
Ft(\()p Fj(Rsrc2)p Ft(\))g(and)75 4509 y(put)e(the)g(result)g(in)f
(register)h Fj(Rdest)p Ft(.)75 4721 y Fj(sub)47 b(Rdest,)f(Rsrc1,)g
(Src2)1772 b Fk(Subtr)-5 b(act)33 b(\(with)h(over\015ow\))75
4834 y Fj(subu)47 b(Rdest,)f(Rsrc1,)g(Src2)1598 b Fk(Subtr)-5
b(act)34 b(\(without)g(over\015ow\))75 4947 y Ft(Put)c(the)h
(di\013erence)e(of)i(the)g(in)m(tegers)f(from)g(register)g
Fj(Rsrc1)f Ft(and)h Fj(Src2)f Ft(in)m(to)i(register)f
Fj(Rdest)p Ft(.)75 5160 y Fj(xor)47 b(Rdest,)f(Rsrc1,)g(Src2)2528
b Fk(X)n(OR)75 5272 y Fj(xori)47 b(Rdest,)f(Rsrc1,)g(Imm)2081
b Fk(X)n(OR)32 b(Imme)-5 b(diate)75 5385 y Ft(Put)30
b(the)g(logical)g(X)m(OR)h(of)f(the)g(in)m(tegers)h(from)f(register)g
Fj(Rsrc1)f Ft(and)g Fj(Src2)g Ft(\(or)i Fj(Imm)p Ft(\))f(in)m(to)g
(register)g Fj(Rdest)p Ft(.)1920 5656 y(14)p eop
%%Page: 15 15
15 14 bop 75 99 a Fl(2.5)112 b(Constan)m(t-Manipulating)38
b(Instructions)75 362 y Fj(li)47 b(Rdest,)f(imm)2458
b Fk(L)-5 b(o)g(ad)34 b(Imme)-5 b(diate)3819 329 y Fa(y)75
475 y Ft(Mo)m(v)m(e)32 b(the)f(immediate)e Fj(imm)h Ft(in)m(to)g
(register)h Fj(Rdest)p Ft(.)75 681 y Fj(lui)47 b(Rdest,)f(imm)2209
b Fk(L)-5 b(o)g(ad)35 b(Upp)-5 b(er)33 b(Imme)-5 b(diate)75
793 y Ft(Load)33 b(the)g(lo)m(w)m(er)g(halfw)m(ord)e(of)i(the)g
(immediate)f Fj(imm)g Ft(in)m(to)h(the)g(upp)s(er)e(halfw)m(ord)g(of)i
(register)g Fj(Rdest)p Ft(.)46 b(The)75 906 y(lo)m(w)m(er)31
b(bits)e(of)h(the)h(register)f(are)h(set)g(to)g(0.)75
1148 y Fl(2.6)112 b(Comparison)37 b(Instructions)75 1320
y Ft(In)28 b(all)f(instructions)g(b)s(elo)m(w,)h Fj(Src2)g
Ft(can)g(either)g(b)s(e)g(a)h(register)g(or)f(an)h(immediate)f(v)-5
b(alue)28 b(\(a)h(16)g(bit)f(in)m(teger\).)75 1525 y
Fj(seq)47 b(Rdest,)f(Rsrc1,)g(Src2)2283 b Fk(Set)33 b(Equal)3819
1492 y Fa(y)75 1638 y Ft(Set)e(register)f Fj(Rdest)f
Ft(to)i(1)g(if)e(register)h Fj(Rsrc1)f Ft(equals)h Fj(Src2)f
Ft(and)h(to)h(b)s(e)f(0)g(otherwise.)75 1843 y Fj(sge)47
b(Rdest,)f(Rsrc1,)g(Src2)1711 b Fk(Set)33 b(Gr)-5 b(e)g(ater)34
b(Than)g(Equal)3819 1810 y Fa(y)75 1956 y Fj(sgeu)47
b(Rdest,)f(Rsrc1,)g(Src2)1270 b Fk(Set)33 b(Gr)-5 b(e)g(ater)35
b(Than)e(Equal)g(Unsigne)-5 b(d)3819 1923 y Fa(y)75 2069
y Ft(Set)31 b(register)f Fj(Rdest)f Ft(to)i(1)g(if)e(register)h
Fj(Rsrc1)f Ft(is)h(greater)h(than)f(or)h(equal)f(to)h
Fj(Src2)e Ft(and)h(to)h(0)f(otherwise.)75 2274 y Fj(sgt)47
b(Rdest,)f(Rsrc1,)g(Src2)1966 b Fk(Set)32 b(Gr)-5 b(e)g(ater)35
b(Than)3819 2241 y Fa(y)75 2387 y Fj(sgtu)47 b(Rdest,)f(Rsrc1,)g(Src2)
1525 b Fk(Set)33 b(Gr)-5 b(e)g(ater)34 b(Than)g(Unsigne)-5
b(d)3819 2354 y Fa(y)75 2500 y Ft(Set)31 b(register)f
Fj(Rdest)f Ft(to)i(1)g(if)e(register)h Fj(Rsrc1)f Ft(is)h(greater)h
(than)f Fj(Src2)f Ft(and)h(to)h(0)g(otherwise.)75 2705
y Fj(sle)47 b(Rdest,)f(Rsrc1,)g(Src2)1841 b Fk(Set)32
b(L)-5 b(ess)33 b(Than)h(Equal)3819 2672 y Fa(y)75 2818
y Fj(sleu)47 b(Rdest,)f(Rsrc1,)g(Src2)1400 b Fk(Set)32
b(L)-5 b(ess)34 b(Than)f(Equal)g(Unsigne)-5 b(d)3819
2785 y Fa(y)75 2931 y Ft(Set)31 b(register)f Fj(Rdest)f
Ft(to)i(1)g(if)e(register)h Fj(Rsrc1)f Ft(is)h(less)f(than)h(or)h
(equal)f(to)h Fj(Src2)e Ft(and)h(to)h(0)g(otherwise.)75
3136 y Fj(slt)47 b(Rdest,)f(Rsrc1,)g(Src2)2163 b Fk(Set)33
b(L)-5 b(ess)33 b(Than)75 3249 y Fj(slti)47 b(Rdest,)f(Rsrc1,)g(Imm)
1717 b Fk(Set)33 b(L)-5 b(ess)33 b(Than)g(Imme)-5 b(diate)75
3362 y Fj(sltu)47 b(Rdest,)f(Rsrc1,)g(Src2)1722 b Fk(Set)33
b(L)-5 b(ess)33 b(Than)h(Unsigne)-5 b(d)75 3475 y Fj(sltiu)46
b(Rdest,)g(Rsrc1,)h(Imm)1276 b Fk(Set)33 b(L)-5 b(ess)33
b(Than)g(Unsigne)-5 b(d)33 b(Imme)-5 b(diate)75 3588
y Ft(Set)31 b(register)f Fj(Rdest)f Ft(to)i(1)g(if)e(register)h
Fj(Rsrc1)f Ft(is)h(less)f(than)h Fj(Src2)g Ft(\(or)g
Fj(Imm)p Ft(\))g(and)g(to)h(0)g(otherwise.)75 3793 y
Fj(sne)47 b(Rdest,)f(Rsrc1,)g(Src2)2107 b Fk(Set)32 b(Not)h(Equal)3819
3760 y Fa(y)75 3906 y Ft(Set)e(register)f Fj(Rdest)f
Ft(to)i(1)g(if)e(register)h Fj(Rsrc1)f Ft(is)h(not)g(equal)g(to)h
Fj(Src2)e Ft(and)h(to)h(0)g(otherwise.)75 4148 y Fl(2.7)112
b(Branc)m(h)38 b(and)g(Jump)f(Instructions)75 4319 y
Ft(In)28 b(all)h(instructions)e(b)s(elo)m(w,)i Fj(Src2)f
Ft(can)h(either)g(b)s(e)f(a)i(register)f(or)g(an)g(immediate)g(v)-5
b(alue)28 b(\(in)m(teger\).)42 b(Branc)m(h)75 4432 y(instructions)25
b(use)h(a)h(signed)f(16-bit)h(o\013set)h(\014eld;)e(hence)h(they)g(can)
g(jump)f(2)2673 4399 y Fq(15)2761 4432 y Fi(\000)13 b
Ft(1)26 b Fk(instructions)36 b Ft(\(not)27 b(b)m(ytes\))75
4545 y(forw)m(ard)j(or)g(2)565 4512 y Fq(15)671 4545
y Ft(instructions)e(bac)m(kw)m(ards.)41 b(The)30 b Fk(jump)36
b Ft(instruction)29 b(con)m(tains)h(a)h(26)g(bit)f(address)f(\014eld.)
75 4750 y Fj(b)47 b(label)2630 b Fk(Br)-5 b(anch)34 b(instruction)3819
4717 y Fa(y)75 4863 y Ft(Unconditionally)28 b(branc)m(h)h(to)i(the)g
(instruction)d(at)k(the)e(lab)s(el.)75 5068 y Fj(bc)p
Fk(z)p Fj(t)47 b(label)2226 b Fk(Br)-5 b(anch)34 b(Copr)-5
b(o)g(c)g(essor)36 b Ff(z)h Fk(T)-7 b(rue)75 5181 y Fj(bc)p
Fk(z)p Fj(f)47 b(label)2212 b Fk(Br)-5 b(anch)34 b(Copr)-5
b(o)g(c)g(essor)36 b Ff(z)h Fk(F)-7 b(alse)75 5294 y
Ft(Conditionally)39 b(branc)m(h)j(to)h(the)f(instruction)f(at)i(the)f
(lab)s(el)f(if)g(copro)s(cessor)i Ff(z)t Ft('s)f(condition)f(\015ag)i
(is)e(true)75 5407 y(\(false\).)1920 5656 y(15)p eop
%%Page: 16 16
16 15 bop 75 99 a Fj(beq)47 b(Rsrc1,)f(Src2,)g(label)2061
b Fk(Br)-5 b(anch)34 b(on)f(Equal)75 211 y Ft(Conditionally)21
b(branc)m(h)j(to)h(the)f(instruction)e(at)j(the)g(lab)s(el)d(if)h(the)i
(con)m(ten)m(ts)h(of)e(register)g Fj(Rsrc1)f Ft(equals)h
Fj(Src2)p Ft(.)75 424 y Fj(beqz)47 b(Rsrc,)f(label)2069
b Fk(Br)-5 b(anch)34 b(on)f(Equal)f(Zer)-5 b(o)3819 391
y Fa(y)75 537 y Ft(Conditionally)27 b(branc)m(h)j(to)h(the)g
(instruction)d(at)j(the)g(lab)s(el)d(if)i(the)g(con)m(ten)m(ts)i(of)f
Fj(Rsrc)e Ft(equals)h(0.)75 749 y Fj(bge)47 b(Rsrc1,)f(Src2,)g(label)
1421 b Fk(Br)-5 b(anch)34 b(on)f(Gr)-5 b(e)g(ater)34
b(Than)g(Equal)3819 716 y Fa(y)75 862 y Fj(bgeu)47 b(Rsrc1,)f(Src2,)g
(label)1577 b Fk(Br)-5 b(anch)34 b(on)f(GTE)g(Unsigne)-5
b(d)3819 829 y Fa(y)75 975 y Ft(Conditionally)25 b(branc)m(h)j(to)h
(the)g(instruction)d(at)j(the)g(lab)s(el)d(if)i(the)g(con)m(ten)m(ts)i
(of)f(register)f Fj(Rsrc1)f Ft(are)i(greater)75 1088
y(than)h(or)g(equal)g(to)h Fj(Src2)p Ft(.)75 1301 y Fj(bgez)47
b(Rsrc,)f(label)1564 b Fk(Br)-5 b(anch)35 b(on)e(Gr)-5
b(e)g(ater)34 b(Than)g(Equal)e(Zer)-5 b(o)75 1414 y Ft(Conditionally)28
b(branc)m(h)j(to)h(the)g(instruction)e(at)i(the)g(lab)s(el)e(if)g(the)i
(con)m(ten)m(ts)h(of)f Fj(Rsrc)e Ft(are)i(greater)h(than)e(or)75
1526 y(equal)f(to)h(0.)75 1739 y Fj(bgezal)46 b(Rsrc,)g(label)1064
b Fk(Br)-5 b(anch)34 b(on)f(Gr)-5 b(e)g(ater)34 b(Than)g(Equal)f(Zer)-5
b(o)33 b(A)n(nd)f(Link)75 1852 y Ft(Conditionally)c(branc)m(h)j(to)h
(the)g(instruction)e(at)i(the)g(lab)s(el)e(if)g(the)i(con)m(ten)m(ts)h
(of)f Fj(Rsrc)e Ft(are)i(greater)h(than)e(or)75 1965
y(equal)f(to)h(0.)41 b(Sa)m(v)m(e)32 b(the)e(address)g(of)g(the)h(next)
f(instruction)f(in)g(register)h(31.)75 2177 y Fj(bgt)47
b(Rsrc1,)f(Src2,)g(label)1675 b Fk(Br)-5 b(anch)34 b(on)f(Gr)-5
b(e)g(ater)35 b(Than)3819 2144 y Fa(y)75 2290 y Fj(bgtu)47
b(Rsrc1,)f(Src2,)g(label)1234 b Fk(Br)-5 b(anch)34 b(on)g(Gr)-5
b(e)g(ater)34 b(Than)g(Unsigne)-5 b(d)3819 2257 y Fa(y)75
2403 y Ft(Conditionally)25 b(branc)m(h)j(to)h(the)g(instruction)d(at)j
(the)g(lab)s(el)d(if)i(the)g(con)m(ten)m(ts)i(of)f(register)f
Fj(Rsrc1)f Ft(are)i(greater)75 2516 y(than)h Fj(Src2)p
Ft(.)75 2729 y Fj(bgtz)47 b(Rsrc,)f(label)1819 b Fk(Br)-5
b(anch)34 b(on)f(Gr)-5 b(e)g(ater)35 b(Than)e(Zer)-5
b(o)75 2842 y Ft(Conditionally)27 b(branc)m(h)j(to)h(the)g(instruction)
d(at)j(the)g(lab)s(el)d(if)i(the)g(con)m(ten)m(ts)i(of)f
Fj(Rsrc)e Ft(are)i(greater)g(than)g(0.)75 3054 y Fj(ble)47
b(Rsrc1,)f(Src2,)g(label)1550 b Fk(Br)-5 b(anch)34 b(on)f(L)-5
b(ess)33 b(Than)h(Equal)3819 3021 y Fa(y)75 3167 y Fj(bleu)47
b(Rsrc1,)f(Src2,)g(label)1597 b Fk(Br)-5 b(anch)34 b(on)f(L)-7
b(TE)33 b(Unsigne)-5 b(d)3819 3134 y Fa(y)75 3280 y Ft(Conditionally)35
b(branc)m(h)i(to)h(the)g(instruction)e(at)i(the)g(lab)s(el)e(if)h(the)h
(con)m(ten)m(ts)i(of)e(register)f Fj(Rsrc1)f Ft(are)j(less)75
3393 y(than)30 b(or)g(equal)g(to)h Fj(Src2)p Ft(.)75
3605 y Fj(blez)47 b(Rsrc,)f(label)1694 b Fk(Br)-5 b(anch)34
b(on)f(L)-5 b(ess)33 b(Than)h(Equal)e(Zer)-5 b(o)75 3718
y Ft(Conditionally)22 b(branc)m(h)j(to)i(the)f(instruction)d(at)k(the)e
(lab)s(el)f(if)h(the)h(con)m(ten)m(ts)h(of)f Fj(Rsrc)e
Ft(are)i(less)f(than)h(or)f(equal)75 3831 y(to)31 b(0.)75
4044 y Fj(bgezal)46 b(Rsrc,)g(label)1064 b Fk(Br)-5 b(anch)34
b(on)f(Gr)-5 b(e)g(ater)34 b(Than)g(Equal)f(Zer)-5 b(o)33
b(A)n(nd)f(Link)75 4157 y Fj(bltzal)46 b(Rsrc,)g(label)1658
b Fk(Br)-5 b(anch)34 b(on)f(L)-5 b(ess)33 b(Than)h(A)n(nd)e(Link)75
4270 y Ft(Conditionally)27 b(branc)m(h)i(to)h(the)g(instruction)e(at)j
(the)f(lab)s(el)e(if)g(the)i(con)m(ten)m(ts)i(of)e Fj(Rsrc)e
Ft(are)j(greater)g(or)e(equal)75 4382 y(to)i(0)g(or)f(less)g(than)g(0,)
h(resp)s(ectiv)m(ely)-8 b(.)41 b(Sa)m(v)m(e)31 b(the)g(address)e(of)i
(the)f(next)h(instruction)d(in)h(register)h(31.)75 4595
y Fj(blt)47 b(Rsrc1,)f(Src2,)g(label)1805 b Fk(Br)-5
b(anch)34 b(on)f(L)-5 b(ess)33 b(Than)3819 4562 y Fa(y)75
4708 y Fj(bltu)47 b(Rsrc1,)f(Src2,)g(label)1364 b Fk(Br)-5
b(anch)34 b(on)f(L)-5 b(ess)33 b(Than)h(Unsigne)-5 b(d)3819
4675 y Fa(y)75 4821 y Ft(Conditionally)35 b(branc)m(h)i(to)h(the)g
(instruction)e(at)i(the)g(lab)s(el)e(if)h(the)h(con)m(ten)m(ts)i(of)e
(register)f Fj(Rsrc1)f Ft(are)j(less)75 4934 y(than)30
b Fj(Src2)p Ft(.)75 5146 y Fj(bltz)47 b(Rsrc,)f(label)1948
b Fk(Br)-5 b(anch)35 b(on)e(L)-5 b(ess)33 b(Than)g(Zer)-5
b(o)75 5259 y Ft(Conditionally)27 b(branc)m(h)j(to)h(the)g(instruction)
d(at)j(the)g(lab)s(el)d(if)i(the)g(con)m(ten)m(ts)i(of)f
Fj(Rsrc)e Ft(are)i(less)f(than)g(0.)1920 5656 y(16)p
eop
%%Page: 17 17
17 16 bop 75 99 a Fj(bne)47 b(Rsrc1,)f(Src2,)g(label)1884
b Fk(Br)-5 b(anch)34 b(on)f(Not)g(Equal)75 211 y Ft(Conditionally)i
(branc)m(h)j(to)g(the)h(instruction)d(at)j(the)f(lab)s(el)f(if)g(the)h
(con)m(ten)m(ts)i(of)e(register)g Fj(Rsrc1)f Ft(are)i(not)75
324 y(equal)30 b(to)h Fj(Src2)p Ft(.)75 537 y Fj(bnez)47
b(Rsrc,)f(label)1892 b Fk(Br)-5 b(anch)34 b(on)f(Not)g(Equal)f(Zer)-5
b(o)3819 504 y Fa(y)75 650 y Ft(Conditionally)27 b(branc)m(h)j(to)h
(the)g(instruction)d(at)j(the)g(lab)s(el)d(if)i(the)g(con)m(ten)m(ts)i
(of)f Fj(Rsrc)e Ft(are)i(not)f(equal)g(to)h(0.)75 862
y Fj(j)47 b(label)3228 b Fk(Jump)75 975 y Ft(Unconditionally)28
b(jump)g(to)k(the)e(instruction)e(at)k(the)e(lab)s(el.)75
1188 y Fj(jal)47 b(label)2745 b Fk(Jump)33 b(and)g(Link)75
1301 y Fj(jalr)47 b(Rsrc)2396 b Fk(Jump)33 b(and)h(Link)e(R)-5
b(e)g(gister)75 1414 y Ft(Unconditionally)28 b(jump)h(to)j(the)f
(instruction)d(at)k(the)f(lab)s(el)e(or)i(whose)f(address)g(is)g(in)f
(register)i Fj(Rsrc)p Ft(.)41 b(Sa)m(v)m(e)75 1526 y(the)31
b(address)e(of)i(the)f(next)h(instruction)d(in)h(register)h(31.)75
1739 y Fj(jr)47 b(Rsrc)2879 b Fk(Jump)33 b(R)-5 b(e)g(gister)75
1852 y Ft(Unconditionally)28 b(jump)g(to)k(the)e(instruction)e(whose)j
(address)e(is)h(in)f(register)h Fj(Rsrc)p Ft(.)75 2095
y Fl(2.8)112 b(Load)39 b(Instructions)75 2367 y Fj(la)47
b(Rdest,)f(address)2374 b Fk(L)-5 b(o)g(ad)34 b(A)-5
b(ddr)g(ess)3819 2334 y Fa(y)75 2480 y Ft(Load)31 b(computed)f
Fk(addr)-5 b(ess)7 b Ft(,)33 b(not)e(the)f(con)m(ten)m(ts)i(of)f(the)f
(lo)s(cation,)h(in)m(to)f(register)g Fj(Rdest)p Ft(.)75
2692 y Fj(lb)47 b(Rdest,)f(address)2567 b Fk(L)-5 b(o)g(ad)35
b(Byte)75 2805 y Fj(lbu)47 b(Rdest,)f(address)2126 b
Fk(L)-5 b(o)g(ad)35 b(Unsigne)-5 b(d)33 b(Byte)75 2918
y Ft(Load)e(the)f(b)m(yte)h(at)g Fk(addr)-5 b(ess)40
b Ft(in)m(to)30 b(register)h Fj(Rdest)p Ft(.)39 b(The)30
b(b)m(yte)h(is)e(sign-extended)h(b)m(y)g(the)h Fj(lb)p
Ft(,)f(but)f(not)i(the)75 3031 y Fj(lbu)p Ft(,)f(instruction.)75
3243 y Fj(ld)47 b(Rdest,)f(address)2159 b Fk(L)-5 b(o)g(ad)34
b(Double-Wor)-5 b(d)3819 3210 y Fa(y)75 3356 y Ft(Load)31
b(the)f(64-bit)h(quan)m(tit)m(y)f(at)h Fk(addr)-5 b(ess)40
b Ft(in)m(to)31 b(registers)f Fj(Rdest)f Ft(and)h Fj(Rdest)46
b(+)h(1)p Ft(.)75 3569 y Fj(lh)g(Rdest,)f(address)2395
b Fk(L)-5 b(o)g(ad)35 b(Halfwor)-5 b(d)75 3682 y Fj(lhu)47
b(Rdest,)f(address)1954 b Fk(L)-5 b(o)g(ad)35 b(Unsigne)-5
b(d)33 b(Halfwor)-5 b(d)75 3795 y Ft(Load)21 b(the)f(16-bit)h(quan)m
(tit)m(y)g(\(halfw)m(ord\))e(at)i Fk(addr)-5 b(ess)31
b Ft(in)m(to)20 b(register)g Fj(Rdest)p Ft(.)36 b(The)20
b(halfw)m(ord)f(is)h(sign-extended)75 3908 y(b)m(y)30
b(the)h Fj(lh)p Ft(,)f(but)g(not)g(the)h Fh(lh)m(u)p
Ft(,)g(instruction)75 4120 y Fj(lw)47 b(Rdest,)f(address)2530
b Fk(L)-5 b(o)g(ad)35 b(Wor)-5 b(d)75 4233 y Ft(Load)31
b(the)f(32-bit)h(quan)m(tit)m(y)f(\(w)m(ord\))h(at)g
Fk(addr)-5 b(ess)40 b Ft(in)m(to)31 b(register)f Fj(Rdest)p
Ft(.)75 4445 y Fj(lwc)p Fk(z)58 b Fj(Rdest,)46 b(address)1930
b Fk(L)-5 b(o)g(ad)34 b(Wor)-5 b(d)34 b(Copr)-5 b(o)g(c)g(essor)75
4558 y Ft(Load)31 b(the)f(w)m(ord)g(at)h Fk(addr)-5 b(ess)40
b Ft(in)m(to)31 b(register)f Fj(Rdest)f Ft(of)h(copro)s(cessor)h
Ff(z)k Ft(\(0{3\).)75 4771 y Fj(lwl)47 b(Rdest,)f(address)2297
b Fk(L)-5 b(o)g(ad)35 b(Wor)-5 b(d)34 b(L)-5 b(eft)75
4884 y Fj(lwr)47 b(Rdest,)f(address)2239 b Fk(L)-5 b(o)g(ad)35
b(Wor)-5 b(d)34 b(R)n(ight)75 4997 y Ft(Load)29 b(the)g(left)g(\(righ)m
(t\))g(b)m(ytes)h(from)e(the)h(w)m(ord)g(at)g(the)h(p)s
(ossibly-unaligned)24 b Fk(addr)-5 b(ess)38 b Ft(in)m(to)29
b(register)g Fj(Rdest)p Ft(.)75 5209 y Fj(ulh)47 b(Rdest,)f(address)
1854 b Fk(Unaligne)-5 b(d)33 b(L)-5 b(o)g(ad)35 b(Halfwor)-5
b(d)3819 5176 y Fa(y)75 5322 y Fj(ulhu)47 b(Rdest,)f(address)1413
b Fk(Unaligne)-5 b(d)33 b(L)-5 b(o)g(ad)35 b(Halfwor)-5
b(d)35 b(Unsigne)-5 b(d)3819 5289 y Fa(y)1920 5656 y
Ft(17)p eop
%%Page: 18 18
18 17 bop 75 99 a Ft(Load)30 b(the)g(16-bit)h(quan)m(tit)m(y)f(\(halfw)
m(ord\))f(at)i(the)f(p)s(ossibly-unaligned)c Fk(addr)-5
b(ess)39 b Ft(in)m(to)30 b(register)g Fj(Rdest)p Ft(.)39
b(The)75 211 y(halfw)m(ord)29 b(is)g(sign-extended)h(b)m(y)g(the)h
Fj(ulh)p Ft(,)f(but)f(not)i(the)g Fh(ulh)m(u)p Ft(,)f(instruction)75
424 y Fj(ulw)47 b(Rdest,)f(address)1989 b Fk(Unaligne)-5
b(d)33 b(L)-5 b(o)g(ad)35 b(Wor)-5 b(d)3819 391 y Fa(y)75
537 y Ft(Load)31 b(the)f(32-bit)h(quan)m(tit)m(y)f(\(w)m(ord\))h(at)g
(the)g(p)s(ossibly-unaligned)25 b Fk(addr)-5 b(ess)40
b Ft(in)m(to)31 b(register)f Fj(Rdest)p Ft(.)75 780 y
Fl(2.9)112 b(Store)37 b(Instructions)75 1052 y Fj(sb)47
b(Rsrc,)g(address)2598 b Fk(Stor)-5 b(e)34 b(Byte)75
1164 y Ft(Store)d(the)f(lo)m(w)g(b)m(yte)h(from)f(register)g
Fj(Rsrc)g Ft(at)h Fk(addr)-5 b(ess)7 b Ft(.)75 1377 y
Fj(sd)47 b(Rsrc,)g(address)2189 b Fk(Stor)-5 b(e)34 b(Double-Wor)-5
b(d)3819 1344 y Fa(y)75 1490 y Ft(Store)31 b(the)f(64-bit)h(quan)m(tit)
m(y)f(in)g(registers)g Fj(Rsrc)f Ft(and)h Fj(Rsrc)46
b(+)i(1)30 b Ft(at)h Fk(addr)-5 b(ess)7 b Ft(.)75 1702
y Fj(sh)47 b(Rsrc,)g(address)2426 b Fk(Stor)-5 b(e)34
b(Halfwor)-5 b(d)75 1815 y Ft(Store)31 b(the)f(lo)m(w)g(halfw)m(ord)f
(from)h(register)g Fj(Rsrc)g Ft(at)h Fk(addr)-5 b(ess)7
b Ft(.)75 2028 y Fj(sw)47 b(Rsrc,)g(address)2561 b Fk(Stor)-5
b(e)34 b(Wor)-5 b(d)75 2141 y Ft(Store)31 b(the)f(w)m(ord)g(from)g
(register)g Fj(Rsrc)g Ft(at)h Fk(addr)-5 b(ess)7 b Ft(.)75
2353 y Fj(swc)p Fk(z)58 b Fj(Rsrc,)47 b(address)1961
b Fk(Stor)-5 b(e)33 b(Wor)-5 b(d)34 b(Copr)-5 b(o)g(c)g(essor)75
2466 y Ft(Store)31 b(the)f(w)m(ord)g(from)g(register)g
Fj(Rsrc)g Ft(of)g(copro)s(cessor)h Ff(z)j Ft(at)e Fk(addr)-5
b(ess)7 b Ft(.)75 2679 y Fj(swl)47 b(Rsrc,)f(address)2329
b Fk(Stor)-5 b(e)34 b(Wor)-5 b(d)34 b(L)-5 b(eft)75 2792
y Fj(swr)47 b(Rsrc,)f(address)2271 b Fk(Stor)-5 b(e)34
b(Wor)-5 b(d)34 b(R)n(ight)75 2905 y Ft(Store)d(the)f(left)g(\(righ)m
(t\))h(b)m(ytes)g(from)f(register)g Fj(Rsrc)f Ft(at)i(the)g(p)s
(ossibly-unaligned)25 b Fk(addr)-5 b(ess)7 b Ft(.)75
3117 y Fj(ush)47 b(Rsrc,)f(address)1886 b Fk(Unaligne)-5
b(d)33 b(Stor)-5 b(e)34 b(Halfwor)-5 b(d)3819 3084 y
Fa(y)75 3230 y Ft(Store)31 b(the)f(lo)m(w)g(halfw)m(ord)f(from)h
(register)g Fj(Rsrc)g Ft(at)h(the)f(p)s(ossibly-unaligned)c
Fk(addr)-5 b(ess)7 b Ft(.)75 3443 y Fj(usw)47 b(Rsrc,)f(address)2020
b Fk(Unaligne)-5 b(d)34 b(Stor)-5 b(e)34 b(Wor)-5 b(d)3819
3410 y Fa(y)75 3555 y Ft(Store)31 b(the)f(w)m(ord)g(from)g(register)g
Fj(Rsrc)g Ft(at)h(the)f(p)s(ossibly-unaligned)c Fk(addr)-5
b(ess)7 b Ft(.)75 3799 y Fl(2.10)112 b(Data)38 b(Mo)m(v)m(emen)m(t)f
(Instructions)75 4070 y Fj(move)47 b(Rdest,)f(Rsrc)2735
b Fk(Move)3819 4037 y Fa(y)75 4183 y Ft(Mo)m(v)m(e)32
b(the)f(con)m(ten)m(ts)h(of)f Fj(Rsrc)e Ft(to)i Fj(Rdest)p
Ft(.)216 4396 y(The)26 b(m)m(ultiply)e(and)h(divide)f(unit)h(pro)s
(duces)g(its)h(result)f(in)g(t)m(w)m(o)j(additional)c(registers,)j(hi)e
(and)h(lo.)39 b(These)75 4509 y(instructions)k(mo)m(v)m(e)j(v)-5
b(alues)44 b(to)h(and)f(from)g(these)h(registers.)84
b(The)44 b(m)m(ultiply)-8 b(,)46 b(divide,)g(and)f(remainder)75
4621 y(instructions)27 b(describ)s(ed)g(ab)s(o)m(v)m(e)j(are)f
(pseudoinstructions)d(that)j(mak)m(e)h(it)f(app)s(ear)f(as)h(if)f(this)
g(unit)f(op)s(erates)75 4734 y(on)j(the)h(general)f(registers)g(and)g
(detect)i(error)e(conditions)f(suc)m(h)h(as)g(divide)f(b)m(y)h(zero)h
(or)f(o)m(v)m(er\015o)m(w.)75 4947 y Fj(mfhi)47 b(Rdest)2743
b Fk(Move)32 b(F)-7 b(r)i(om)35 b(hi)75 5060 y Fj(mflo)47
b(Rdest)2748 b Fk(Move)32 b(F)-7 b(r)i(om)34 b(lo)75
5173 y Ft(Mo)m(v)m(e)e(the)f(con)m(ten)m(ts)h(of)f(the)f(hi)f(\(lo\))i
(register)f(to)h(register)g Fj(Rdest)p Ft(.)1920 5656
y(18)p eop
%%Page: 19 19
19 18 bop 75 99 a Fj(mthi)47 b(Rdest)2845 b Fk(Move)33
b(T)-7 b(o)33 b(hi)75 211 y Fj(mtlo)47 b(Rdest)2850 b
Fk(Move)32 b(T)-7 b(o)33 b(lo)75 324 y Ft(Mo)m(v)m(e)f(the)f(con)m(ten)
m(ts)h(register)e Fj(Rdest)f Ft(to)i(the)g(hi)e(\(lo\))i(register.)216
527 y(Copro)s(cessors)39 b(ha)m(v)m(e)i(their)e(o)m(wn)h(register)g
(sets.)69 b(These)39 b(instructions)f(mo)m(v)m(e)j(v)-5
b(alues)39 b(b)s(et)m(w)m(een)h(these)75 640 y(registers)30
b(and)g(the)g(CPU's)h(registers.)75 843 y Fj(mfc)p Fk(z)58
b Fj(Rdest,)46 b(CPsrc)1933 b Fk(Move)32 b(F)-7 b(r)i(om)35
b(Copr)-5 b(o)g(c)g(essor)36 b Ff(z)75 956 y Ft(Mo)m(v)m(e)c(the)f(con)
m(ten)m(ts)h(of)f(copro)s(cessor)f Ff(z)t Ft('s)h(register)f
Fj(CPsrc)f Ft(to)i(CPU)f(register)h Fj(Rdest)p Ft(.)75
1158 y Fj(mfc1.d)46 b(Rdest,)g(FRsrc1)1419 b Fk(Move)32
b(Double)g(F)-7 b(r)i(om)34 b(Copr)-5 b(o)g(c)g(essor)36
b(1)3819 1125 y Fa(y)75 1271 y Ft(Mo)m(v)m(e)h(the)e(con)m(ten)m(ts)h
(of)f(\015oating)f(p)s(oin)m(t)g(registers)g Fj(FRsrc1)f
Ft(and)h Fj(FRsrc1)47 b(+)g(1)34 b Ft(to)i(CPU)e(registers)g
Fj(Rdest)75 1384 y Ft(and)c Fj(Rdest)46 b(+)i(1)p Ft(.)75
1587 y Fj(mtc)p Fk(z)58 b Fj(Rsrc,)47 b(CPdest)2034 b
Fk(Move)33 b(T)-7 b(o)33 b(Copr)-5 b(o)g(c)g(essor)36
b Ff(z)75 1700 y Ft(Mo)m(v)m(e)c(the)f(con)m(ten)m(ts)h(of)f(CPU)f
(register)g Fj(Rsrc)f Ft(to)i(copro)s(cessor)g Ff(z)t
Ft('s)g(register)f Fj(CPdest)p Ft(.)75 1941 y Fl(2.11)112
b(Floating)37 b(P)m(oin)m(t)f(Instructions)75 2112 y
Ft(The)30 b(MIPS)g(has)h(a)g(\015oating)f(p)s(oin)m(t)g(copro)s(cessor)
h(\(n)m(um)m(b)s(ered)f(1\))h(that)h(op)s(erates)f(on)f(single)g
(precision)e(\(32-)75 2225 y(bit\))c(and)g(double)f(precision)g
(\(64-bit\))i(\015oating)g(p)s(oin)m(t)e(n)m(um)m(b)s(ers.)37
b(This)23 b(copro)s(cessor)i(has)f(its)g(o)m(wn)h(registers,)75
2338 y(whic)m(h)32 b(are)h(n)m(um)m(b)s(ered)f Fj($f0)p
Ft({)p Fj($f31)p Ft(.)47 b(Because)35 b(these)e(registers)g(are)h(only)
e(32-bits)h(wide,)g(t)m(w)m(o)h(of)f(them)h(are)75 2451
y(required)24 b(to)i(hold)e(doubles.)37 b(T)-8 b(o)26
b(simplify)c(matters,)28 b(\015oating)d(p)s(oin)m(t)g(op)s(erations)g
(only)f(use)h(ev)m(en-n)m(um)m(b)s(ered)75 2564 y(registers|including)i
(instructions)h(that)j(op)s(erate)g(on)f(single)f(\015oats.)216
2677 y(V)-8 b(alues)27 b(are)g(mo)m(v)m(ed)h(in)e(or)h(out)g(of)g
(these)g(registers)g(a)g(w)m(ord)g(\(32-bits\))g(at)h(a)f(time)g(b)m(y)
f Fj(lwc1)p Ft(,)h Fj(swc1)p Ft(,)g Fj(mtc1)p Ft(,)75
2790 y(and)40 b Fj(mfc1)g Ft(instructions)f(describ)s(ed)g(ab)s(o)m(v)m
(e)j(or)f(b)m(y)g(the)g Fj(l.s)p Ft(,)i Fj(l.d)p Ft(,)g
Fj(s.s)p Ft(,)g(and)e Fj(s.d)f Ft(pseudoinstructions)75
2903 y(describ)s(ed)28 b(b)s(elo)m(w.)39 b(The)29 b(\015ag)h(set)h(b)m
(y)e(\015oating)h(p)s(oin)m(t)e(comparison)h(op)s(erations)g(is)g(read)
h(b)m(y)f(the)h(CPU)f(with)75 3016 y(its)h Fj(bc1t)f
Ft(and)h Fj(bc1f)f Ft(instructions.)216 3129 y(In)38
b(all)f(instructions)f(b)s(elo)m(w,)j Fj(FRdest)p Ft(,)g
Fj(FRsrc1)p Ft(,)f Fj(FRsrc2)p Ft(,)h(and)f Fj(FRsrc)e
Ft(are)j(\015oating)f(p)s(oin)m(t)f(registers)75 3241
y(\(e.g.,)32 b Fj($f2)p Ft(\).)75 3444 y Fj(abs.d)46
b(FRdest,)g(FRsrc)1376 b Fk(Flo)-5 b(ating)35 b(Point)e(A)n(bsolute)f
(V)-7 b(alue)32 b(Double)75 3557 y Fj(abs.s)46 b(FRdest,)g(FRsrc)1410
b Fk(Flo)-5 b(ating)34 b(Point)f(A)n(bsolute)g(V)-7 b(alue)32
b(Single)75 3670 y Ft(Compute)f(the)g(absolute)g(v)-5
b(alue)31 b(of)g(the)h(\015oating)f(\015oat)h(double)e(\(single\))g(in)
g(register)h Fj(FRsrc)f Ft(and)h(put)f(it)h(in)75 3783
y(register)f Fj(FRdest)p Ft(.)75 3986 y Fj(add.d)46 b(FRdest,)g
(FRsrc1,)g(FRsrc2)1195 b Fk(Flo)-5 b(ating)34 b(Point)f(A)-5
b(ddition)34 b(Double)75 4099 y Fj(add.s)46 b(FRdest,)g(FRsrc1,)g
(FRsrc2)1229 b Fk(Flo)-5 b(ating)34 b(Point)f(A)-5 b(ddition)34
b(Single)75 4211 y Ft(Compute)28 b(the)g(sum)f(of)h(the)g(\015oating)g
(\015oat)h(doubles)d(\(singles\))h(in)g(registers)g Fj(FRsrc1)g
Ft(and)g Fj(FRsrc2)f Ft(and)i(put)75 4324 y(it)i(in)f(register)h
Fj(FRdest)p Ft(.)75 4527 y Fj(c.eq.d)46 b(FRsrc1,)g(FRsrc2)1869
b Fk(Comp)-5 b(ar)g(e)35 b(Equal)d(Double)75 4640 y Fj(c.eq.s)46
b(FRsrc1,)g(FRsrc2)1902 b Fk(Comp)-5 b(ar)g(e)36 b(Equal)c(Single)75
4753 y Ft(Compare)38 b(the)h(\015oating)g(p)s(oin)m(t)e(double)h(in)f
(register)i Fj(FRsrc1)d Ft(against)j(the)g(one)g(in)f
Fj(FRsrc2)e Ft(and)j(set)g(the)75 4866 y(\015oating)30
b(p)s(oin)m(t)g(condition)f(\015ag)h(true)h(if)e(they)h(are)h(equal.)75
5068 y Fj(c.le.d)46 b(FRsrc1,)g(FRsrc2)1426 b Fk(Comp)-5
b(ar)g(e)35 b(L)-5 b(ess)33 b(Than)h(Equal)e(Double)75
5181 y Fj(c.le.s)46 b(FRsrc1,)g(FRsrc2)1460 b Fk(Comp)-5
b(ar)g(e)35 b(L)-5 b(ess)33 b(Than)h(Equal)e(Single)75
5294 y Ft(Compare)38 b(the)h(\015oating)g(p)s(oin)m(t)e(double)h(in)f
(register)i Fj(FRsrc1)d Ft(against)j(the)g(one)g(in)f
Fj(FRsrc2)e Ft(and)j(set)g(the)75 5407 y(\015oating)30
b(p)s(oin)m(t)g(condition)f(\015ag)h(true)h(if)e(the)h(\014rst)g(is)f
(less)h(than)g(or)h(equal)f(to)h(the)f(second.)1920 5656
y(19)p eop
%%Page: 20 20
20 19 bop 75 99 a Fj(c.lt.d)46 b(FRsrc1,)g(FRsrc2)1680
b Fk(Comp)-5 b(ar)g(e)36 b(L)-5 b(ess)33 b(Than)g(Double)75
211 y Fj(c.lt.s)46 b(FRsrc1,)g(FRsrc2)1714 b Fk(Comp)-5
b(ar)g(e)35 b(L)-5 b(ess)33 b(Than)h(Single)75 324 y
Ft(Compare)k(the)h(\015oating)g(p)s(oin)m(t)e(double)h(in)f(register)i
Fj(FRsrc1)d Ft(against)j(the)g(one)g(in)f Fj(FRsrc2)e
Ft(and)j(set)g(the)75 437 y(condition)29 b(\015ag)i(true)f(if)f(the)i
(\014rst)e(is)h(less)f(than)i(the)f(second.)75 641 y
Fj(cvt.d.s)46 b(FRdest,)g(FRsrc)1779 b Fk(Convert)34
b(Single)e(to)h(Double)75 754 y Fj(cvt.d.w)46 b(FRdest,)g(FRsrc)1741
b Fk(Convert)33 b(Inte)-5 b(ger)33 b(to)g(Double)75 866
y Ft(Con)m(v)m(ert)45 b(the)f(single)e(precision)g(\015oating)h(p)s
(oin)m(t)g(n)m(um)m(b)s(er)g(or)g(in)m(teger)h(in)f(register)g
Fj(FRsrc)g Ft(to)h(a)g(double)75 979 y(precision)29 b(n)m(um)m(b)s(er)g
(and)g(put)h(it)g(in)f(register)h Fj(FRdest)p Ft(.)75
1183 y Fj(cvt.s.d)46 b(FRdest,)g(FRsrc)1779 b Fk(Convert)34
b(Double)e(to)h(Single)75 1296 y Fj(cvt.s.w)46 b(FRdest,)g(FRsrc)1774
b Fk(Convert)34 b(Inte)-5 b(ger)33 b(to)g(Single)75 1409
y Ft(Con)m(v)m(ert)45 b(the)f(double)e(precision)g(\015oating)h(p)s
(oin)m(t)g(n)m(um)m(b)s(er)g(or)g(in)m(teger)h(in)f(register)g
Fj(FRsrc)g Ft(to)h(a)g(single)75 1522 y(precision)29
b(n)m(um)m(b)s(er)g(and)g(put)h(it)g(in)f(register)h
Fj(FRdest)p Ft(.)75 1725 y Fj(cvt.w.d)46 b(FRdest,)g(FRsrc)1741
b Fk(Convert)33 b(Double)f(to)h(Inte)-5 b(ger)75 1838
y Fj(cvt.w.s)46 b(FRdest,)g(FRsrc)1774 b Fk(Convert)34
b(Single)e(to)h(Inte)-5 b(ger)75 1951 y Ft(Con)m(v)m(ert)29
b(the)e(double)g(or)g(single)g(precision)f(\015oating)h(p)s(oin)m(t)g
(n)m(um)m(b)s(er)f(in)h(register)g Fj(FRsrc)f Ft(to)j(an)e(in)m(teger)i
(and)75 2064 y(put)h(it)g(in)f(register)h Fj(FRdest)p
Ft(.)75 2267 y Fj(div.d)46 b(FRdest,)g(FRsrc1,)g(FRsrc2)1280
b Fk(Flo)-5 b(ating)34 b(Point)f(Divide)f(Double)75 2380
y Fj(div.s)46 b(FRdest,)g(FRsrc1,)g(FRsrc2)1314 b Fk(Flo)-5
b(ating)34 b(Point)f(Divide)f(Single)75 2493 y Ft(Compute)27
b(the)h(quotien)m(t)g(of)g(the)g(\015oating)g(\015oat)h(doubles)d
(\(singles\))h(in)g(registers)g Fj(FRsrc1)f Ft(and)h
Fj(FRsrc2)g Ft(and)75 2606 y(put)j(it)g(in)f(register)h
Fj(FRdest)p Ft(.)75 2809 y Fj(l.d)47 b(FRdest,)f(address)1708
b Fk(L)-5 b(o)g(ad)35 b(Flo)-5 b(ating)34 b(Point)f(Double)3819
2776 y Fa(y)75 2922 y Fj(l.s)47 b(FRdest,)f(address)1742
b Fk(L)-5 b(o)g(ad)35 b(Flo)-5 b(ating)34 b(Point)f(Single)3819
2889 y Fa(y)75 3035 y Ft(Load)e(the)f(\015oating)g(\015oat)h(double)e
(\(single\))h(at)h Fj(address)e Ft(in)m(to)h(register)g
Fj(FRdest)p Ft(.)75 3239 y Fj(mov.d)46 b(FRdest,)g(FRsrc)1753
b Fk(Move)32 b(Flo)-5 b(ating)34 b(Point)f(Double)75
3351 y Fj(mov.s)46 b(FRdest,)g(FRsrc)1787 b Fk(Move)32
b(Flo)-5 b(ating)34 b(Point)f(Single)75 3464 y Ft(Mo)m(v)m(e)f(the)f
(\015oating)f(\015oat)h(double)e(\(single\))h(from)g(register)g
Fj(FRsrc)f Ft(to)i(register)f Fj(FRdest)p Ft(.)75 3668
y Fj(mul.d)46 b(FRdest,)g(FRsrc1,)g(FRsrc2)1209 b Fk(Flo)-5
b(ating)34 b(Point)f(Multiply)g(Double)75 3781 y Fj(mul.s)46
b(FRdest,)g(FRsrc1,)g(FRsrc2)1243 b Fk(Flo)-5 b(ating)34
b(Point)f(Multiply)g(Single)75 3894 y Ft(Compute)c(the)g(pro)s(duct)f
(of)h(the)g(\015oating)g(\015oat)h(doubles)d(\(singles\))i(in)f
(registers)g Fj(FRsrc1)g Ft(and)g Fj(FRsrc2)g Ft(and)75
4007 y(put)i(it)g(in)f(register)h Fj(FRdest)p Ft(.)75
4210 y Fj(neg.d)46 b(FRdest,)g(FRsrc)2304 b Fk(Ne)-5
b(gate)32 b(Double)75 4323 y Fj(neg.s)46 b(FRdest,)g(FRsrc)2337
b Fk(Ne)-5 b(gate)33 b(Single)75 4436 y Ft(Negate)g(the)d(\015oating)g
(p)s(oin)m(t)g(double)f(\(single\))g(in)h(register)g
Fj(FRsrc)f Ft(and)g(put)h(it)g(in)f(register)h Fj(FRdest)p
Ft(.)75 4639 y Fj(s.d)47 b(FRdest,)f(address)1692 b Fk(Stor)-5
b(e)34 b(Flo)-5 b(ating)34 b(Point)f(Double)3819 4606
y Fa(y)75 4752 y Fj(s.s)47 b(FRdest,)f(address)1726 b
Fk(Stor)-5 b(e)34 b(Flo)-5 b(ating)34 b(Point)f(Single)3819
4719 y Fa(y)75 4865 y Ft(Store)e(the)f(\015oating)g(\015oat)i(double)c
(\(single\))i(in)f(register)i Fj(FRdest)d Ft(at)j Fj(address)p
Ft(.)75 5068 y Fj(sub.d)46 b(FRdest,)g(FRsrc1,)g(FRsrc2)1210
b Fk(Flo)-5 b(ating)35 b(Point)e(Subtr)-5 b(act)33 b(Double)75
5181 y Fj(sub.s)46 b(FRdest,)g(FRsrc1,)g(FRsrc2)1244
b Fk(Flo)-5 b(ating)35 b(Point)d(Subtr)-5 b(act)34 b(Single)75
5294 y Ft(Compute)j(the)h(di\013erence)f(of)g(the)h(\015oating)g
(\015oat)g(doubles)e(\(singles\))g(in)h(registers)g Fj(FRsrc1)f
Ft(and)h Fj(FRsrc2)75 5407 y Ft(and)30 b(put)f(it)h(in)f(register)i
Fj(FRdest)p Ft(.)1920 5656 y(20)p eop
%%Page: 21 21
21 20 bop 1101 7 a
 13640500 18945146 7038648 16511221 25852231 42297671 startTexFig
 1101 7 a
%%BeginDocument: mem.id

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
printFont printSize scalefont setfont
/descender 0 printFont /FontBBox get 1 get printFont /FontMatrix
get transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 2 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 9 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.923077 0 0 0.923077 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 97 131 ] concat
%I
93 145 326 560 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 97 131 ] concat
%I
93 491 326 491 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 97 131 ] concat
%I
93 180 326 180 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 97 131 ] concat
%I
93 249 326 249 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 97 131 ] concat
%I
93 318 326 318 Line
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 97 131 ] concat
%I
93 145 326 180 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 278 294 ] concat
%I
[
(Reserved)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 264.5 354 ] concat
%I
[
(Text Segment)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 264 414 ] concat
%I
[
(Data Segment)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 260.5 656 ] concat
%I
[
(Stack Segment)
] Text
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 109.5 131 ] concat
%I
197 491 197 439 Line
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 101.5 131 ] concat
%I
205 318 205 361 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 120 328 ] concat
%I
[
(0x400000)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 120 691 ] concat
%I
[
(0x7fffffff)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 1392 2603 a Ft(Figure)29 b(5:)41 b(La)m(y)m(out)32 b(of)f(memory)-8
b(.)75 2878 y Fl(2.12)112 b(Exception)37 b(and)h(T)-9
b(rap)38 b(Instructions)75 3149 y Fj(rfe)2707 b Fk(R)-5
b(eturn)34 b(F)-7 b(r)i(om)34 b(Exc)-5 b(eption)75 3262
y Ft(Restore)31 b(the)g(Status)f(register.)75 3475 y
Fj(syscall)2970 b Fk(System)33 b(Cal)5 b(l)75 3588 y
Ft(Register)31 b Fj($v0)e Ft(con)m(tains)i(the)f(n)m(um)m(b)s(er)f(of)i
(the)f(system)h(call)f(\(see)h(T)-8 b(able)30 b(1\))h(pro)m(vided)e(b)m
(y)h(SPIM.)75 3800 y Fj(break)46 b(n)3223 b Fk(Br)-5
b(e)g(ak)75 3913 y Ft(Cause)30 b(exception)h Ff(n)p Ft(.)40
b(Exception)30 b(1)h(is)e(reserv)m(ed)i(for)f(the)g(debugger.)75
4126 y Fj(nop)3124 b Fk(No)32 b(op)-5 b(er)g(ation)75
4239 y Ft(Do)31 b(nothing.)75 4525 y Fr(3)135 b(Memory)45
b(Usage)75 4728 y Ft(The)37 b(organization)h(of)g(memory)g(in)e(MIPS)i
(systems)f(is)g(con)m(v)m(en)m(tional.)64 b(A)38 b(program's)g(address)
f(space)h(is)75 4841 y(comp)s(osed)30 b(of)h(three)f(parts)g(\(see)i
(Figure)e(5\).)216 4954 y(A)m(t)38 b(the)g(b)s(ottom)f(of)h(the)f(user)
g(address)f(space)i(\(0x400000\))j(is)36 b(the)h(text)i(segmen)m(t,)h
(whic)m(h)c(holds)g(the)75 5067 y(instructions)28 b(for)i(a)h(program.)
216 5180 y(Ab)s(o)m(v)m(e)g(the)f(text)h(segmen)m(t)g(is)e(the)i(data)f
(segmen)m(t)h(\(starting)g(at)f(0x10000000\),)35 b(whic)m(h)29
b(is)g(divided)e(in)m(to)75 5293 y(t)m(w)m(o)37 b(parts.)56
b(The)36 b(static)g(data)g(p)s(ortion)f(con)m(tains)h(ob)5
b(jects)36 b(whose)g(size)f(and)g(address)g(are)h(kno)m(wn)f(to)i(the)
1920 5656 y(21)p eop
%%Page: 22 22
22 21 bop 669 7 a
 20460754 18945146 6249267 17695293 31575244 40982036 startTexFig
 669 7 a
%%BeginDocument: stack-frame.id

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.923077 0 0 0.923077 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 97 131 ] concat
%I
136 163 300 542 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 97 131 ] concat
%I
136 517 300 517 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 97 106 ] concat
%I
136 517 300 517 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 97 81 ] concat
%I
136 517 300 517 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 98 -30 ] concat
%I
136 517 300 517 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 98 -116 ] concat
%I
136 517 300 517 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 272.5 492 ] concat
%I
[
(      .)
(      .)
(      .)
(local variables)
(      .)
(      .)
(      .)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 275 397 ] concat
%I
[
(      .)
(      .)
(      .)
(dynamic area)
(      .)
(      .)
(      .)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 458 561 ] concat
%I
[
(memory)
(addresses)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -2.58933 62.1439 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 111.267 576.807 ] concat
%I
[
($fp)
] Text
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 95.2673 116.807 ] concat
%I
50 456 136 456 Line
%I 1
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -6.04177 12.0835 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 112 294 ] concat
%I
[
($sp)
] Text
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 97 136 ] concat
%I
50 154 136 154 Line
%I 1
End

End %I eop

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 97 131 ] concat
%I
387 439 387 473 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 95.2673 53.277 ] concat
%I
136 517 300 517 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -4.00479 0 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 286.005 615.618 ] concat
%I
[
(argument 5)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 286.005 639 ] concat
%I
[
(argument 6)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 313.505 664.981 ] concat
%I
[
(...)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 276.505 587.232 ] concat
%I
[
(arguments 1-4)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--12-*-75-*
Helvetica-Bold 12 SetF
%I t
[ 1 0 0 1 268.5 587 ] concat
%I
[
(      )
(      .)
(      .)
(saved registers)
(      .)
(      .)
(      .)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 75 2603 a Ft(Figure)24 b(6:)38 b(La)m(y)m(out)26 b(of)f(a)f(stac)m(k)i
(frame.)39 b(The)24 b(frame)g(p)s(oin)m(ter)g(p)s(oin)m(ts)f(just)h(b)s
(elo)m(w)g(the)g(last)h(argumen)m(t)f(passed)75 2716
y(on)30 b(the)h(stac)m(k.)42 b(The)30 b(stac)m(k)i(p)s(oin)m(ter)d(p)s
(oin)m(ts)g(to)i(the)g(last)f(w)m(ord)g(in)f(the)i(frame.)75
2991 y(compiler)e(and)h(link)m(er.)40 b(Immediately)29
b(ab)s(o)m(v)m(e)j(these)f(ob)5 b(jects)32 b(is)d(dynamic)h(data.)42
b(As)30 b(a)h(program)g(allo)s(cates)75 3104 y(space)c(dynamically)d
(\(i.e.,)k(b)m(y)e Fj(malloc)p Ft(\),)g(the)g Fj(sbrk)g
Ft(system)g(call)g(mo)m(v)m(es)h(the)g(top)f(of)h(the)f(data)h(segmen)m
(t)h(up.)216 3217 y(The)23 b(program)h(stac)m(k)h(resides)e(at)h(the)g
(top)g(of)g(the)g(address)f(space)h(\(0x7\013\013\013f)7
b(\).)40 b(It)24 b(gro)m(ws)g(do)m(wn,)h(to)m(w)m(ards)75
3330 y(the)31 b(data)g(segmen)m(t.)75 3616 y Fr(4)135
b(Calling)46 b(Con)l(v)l(en)l(tion)75 3819 y Ft(The)37
b(calling)f(con)m(v)m(en)m(tion)i(describ)s(ed)d(in)h(this)g(section)i
(is)e(the)i(one)f(used)g(b)m(y)g Fk(gc)-5 b(c)5 b Ft(,)39
b(not)e(the)h(nativ)m(e)f(MIPS)75 3932 y(compiler,)29
b(whic)m(h)g(uses)h(a)h(more)g(complex)f(con)m(v)m(en)m(tion)h(that)g
(is)e(sligh)m(tly)g(faster.)216 4045 y(Figure)36 b(6)g(sho)m(ws)g(a)h
(diagram)f(of)g(a)h(stac)m(k)g(frame.)59 b(A)36 b(frame)g(consists)g
(of)g(the)h(memory)f(b)s(et)m(w)m(een)h(the)75 4158 y(frame)e(p)s(oin)m
(ter)f(\()p Fj($fp)p Ft(\),)h(whic)m(h)f(p)s(oin)m(ts)g(to)h(the)g(w)m
(ord)g(immediately)e(after)i(the)g(last)g(argumen)m(t)g(passed)f(on)75
4271 y(the)g(stac)m(k,)i(and)d(the)h(stac)m(k)h(p)s(oin)m(ter)d(\()p
Fj($sp)p Ft(\),)j(whic)m(h)d(p)s(oin)m(ts)h(to)h(the)g(last)f(w)m(ord)g
(in)g(the)g(frame.)51 b(As)33 b(t)m(ypical)75 4384 y(of)g(Unix)f
(systems,)h(the)g(stac)m(k)i(gro)m(ws)e(do)m(wn)f(from)h(higher)e
(memory)i(addresses,)g(so)g(the)g(frame)g(p)s(oin)m(ter)f(is)75
4497 y(ab)s(o)m(v)m(e)g(stac)m(k)f(p)s(oin)m(ter.)216
4610 y(The)f(follo)m(wing)f(steps)h(are)h(necessary)g(to)g(e\013ect)h
(a)e(call:)186 4797 y(1.)46 b(P)m(ass)32 b(the)g(argumen)m(ts.)44
b(By)32 b(con)m(v)m(en)m(tion,)h(the)f(\014rst)f(four)f(argumen)m(ts)i
(are)g(passed)f(in)f(registers)h Fj($a0)p Ft({)302 4910
y Fj($a3)22 b Ft(\(though)g(simpler)e(compilers)h(ma)m(y)i(c)m(ho)s
(ose)h(to)f(ignore)f(this)g(con)m(v)m(en)m(tion)h(and)f(pass)g(all)g
(argumen)m(ts)302 5023 y(via)30 b(the)h(stac)m(k\).)42
b(The)30 b(remaining)f(argumen)m(ts)h(are)h(pushed)e(on)h(the)h(stac)m
(k.)186 5211 y(2.)46 b(Sa)m(v)m(e)30 b(the)f(caller-sa)m(v)m(ed)h
(registers.)40 b(This)27 b(includes)g(registers)h Fj($t0)p
Ft({)p Fj($t9)p Ft(,)g(if)g(they)h(con)m(tain)g(liv)m(e)g(v)-5
b(alues)302 5324 y(at)31 b(the)g(call)f(site.)1920 5656
y(22)p eop
%%Page: 23 23
23 22 bop 186 99 a Ft(3.)46 b(Execute)31 b(a)g Fj(jal)f
Ft(instruction.)216 286 y(Within)f(the)h(called)g(routine,)g(the)g
(follo)m(wing)f(steps)h(are)h(necessary:)186 474 y(1.)46
b(Establish)28 b(the)j(stac)m(k)h(frame)e(b)m(y)g(subtracting)g(the)h
(frame)f(size)g(from)g(the)h(stac)m(k)g(p)s(oin)m(ter.)186
661 y(2.)46 b(Sa)m(v)m(e)37 b(the)f(callee-sa)m(v)m(ed)h(registers)e
(in)g(the)h(frame.)56 b(Register)36 b Fj($fp)f Ft(is)f(alw)m(a)m(ys)i
(sa)m(v)m(ed.)58 b(Register)36 b Fj($ra)302 774 y Ft(needs)d(to)g(b)s
(e)g(sa)m(v)m(ed)g(if)f(the)h(routine)f(itself)g(mak)m(es)i(calls.)47
b(An)m(y)33 b(of)g(the)g(registers)f Fj($s0)p Ft({)p
Fj($s7)g Ft(that)i(are)302 887 y(used)c(b)m(y)g(the)h(callee)f(need)g
(to)h(b)s(e)f(sa)m(v)m(ed.)186 1075 y(3.)46 b(Establish)28
b(the)j(frame)f(p)s(oin)m(ter)g(b)m(y)g(adding)f(the)i(stac)m(k)g
(frame)g(size)f(-)h(4)f(to)h(the)g(address)e(in)g Fj($sp)p
Ft(.)216 1262 y(Finally)-8 b(,)27 b(to)h(return)f(from)g(a)h(call,)g(a)
g(function)e(places)h(the)h(returned)f(v)-5 b(alue)27
b(in)m(to)g Fj($v0)g Ft(and)g(executes)i(the)75 1375
y(follo)m(wing)g(steps:)186 1563 y(1.)46 b(Restore)28
b(an)m(y)f(callee-sa)m(v)m(ed)h(registers)e(that)h(w)m(ere)g(sa)m(v)m
(ed)h(up)s(on)d(en)m(try)h(\(including)e(the)i(frame)h(p)s(oin)m(ter)
302 1676 y Fj($fp)p Ft(\).)186 1864 y(2.)46 b(P)m(op)31
b(the)f(stac)m(k)i(frame)f(b)m(y)f(adding)f(the)h(frame)h(size)f(to)h
Fj($sp)p Ft(.)186 2051 y(3.)46 b(Return)30 b(b)m(y)g(jumping)e(to)j
(the)g(address)e(in)g(register)i Fj($ra)p Ft(.)75 2338
y Fr(5)135 b(Input)44 b(and)h(Output)75 2541 y Ft(In)c(addition)e(to)j
(sim)m(ulating)d(the)j(basic)f(op)s(eration)f(of)i(the)f(CPU)g(and)g
(op)s(erating)g(system,)j(SPIM)d(also)75 2653 y(sim)m(ulates)24
b(a)i(memory-mapp)s(ed)e(terminal)g(connected)i(to)g(the)f(mac)m(hine.)
39 b(When)25 b(a)g(program)g(is)g(\\running,")75 2766
y(SPIM)j(connects)i(its)e(o)m(wn)h(terminal)e(\(or)i(a)h(separate)f
(console)h(windo)m(w)d(in)g Fj(xspim)p Ft(\))h(to)i(the)f(pro)s
(cessor.)39 b(The)75 2879 y(program)34 b(can)h(read)g(c)m(haracters)g
(that)h(y)m(ou)e(t)m(yp)s(e)h(while)e(the)h(pro)s(cessor)h(is)e
(running.)51 b(Similarly)-8 b(,)32 b(if)h(SPIM)75 2992
y(executes)f(instructions)d(to)j(write)f(c)m(haracters)i(to)e(the)h
(terminal,)e(the)h(c)m(haracters)i(will)c(app)s(ear)h(on)h(SPIM's)75
3105 y(terminal)38 b(or)i(console)g(windo)m(w.)67 b(One)39
b(exception)h(to)g(this)f(rule)f(is)h(con)m(trol-C:)h(it)g(is)e(not)i
(passed)f(to)i(the)75 3218 y(pro)s(cessor,)26 b(but)f(instead)g(causes)
h(SPIM)f(to)h(stop)g(sim)m(ulating)d(and)i(return)f(to)j(command)e(mo)s
(de.)38 b(When)26 b(the)75 3331 y(pro)s(cessor)g(stops)g(executing)h
(\(for)g(example,)g(b)s(ecause)f(y)m(ou)h(t)m(yp)s(ed)f(con)m(trol-C)h
(or)g(b)s(ecause)f(the)h(mac)m(hine)f(hit)75 3444 y(a)33
b(breakp)s(oin)m(t\),)h(the)f(terminal)e(is)h(reconnected)i(to)g(SPIM)e
(so)h(y)m(ou)h(can)f(t)m(yp)s(e)g(SPIM)g(commands.)48
b(T)-8 b(o)33 b(use)75 3557 y(memory-mapp)s(ed)c(IO,)h
Fj(spim)g Ft(or)g Fj(xspim)f Ft(m)m(ust)h(b)s(e)g(started)h(with)e(the)
h Fj(-mapped)p 2896 3557 29 4 v 33 w(io)f Ft(\015ag.)216
3670 y(The)35 b(terminal)f(device)i(consists)f(of)g(t)m(w)m(o)i(indep)s
(enden)m(t)d(units:)49 b(a)36 b Fk(r)-5 b(e)g(c)g(eiver)46
b Ft(and)35 b(a)h Fk(tr)-5 b(ansmitter)10 b Ft(.)58 b(The)75
3783 y(receiv)m(er)28 b(unit)e(reads)h(c)m(haracters)i(from)e(the)h(k)m
(eyb)s(oard)f(as)h(they)g(are)f(t)m(yp)s(ed.)40 b(The)27
b(transmitter)g(unit)f(writes)75 3895 y(c)m(haracters)i(to)f(the)f
(terminal's)f(displa)m(y)-8 b(.)38 b(The)26 b(t)m(w)m(o)h(units)e(are)h
(completely)g(indep)s(enden)m(t.)38 b(This)24 b(means,)j(for)75
4008 y(example,)j(that)h(c)m(haracters)h(t)m(yp)s(ed)d(at)i(the)g(k)m
(eyb)s(oard)f(are)g(not)h(automatically)f(\\ec)m(ho)s(ed")i(on)e(the)g
(displa)m(y)-8 b(.)75 4121 y(Instead,)31 b(the)f(pro)s(cessor)h(m)m
(ust)f(get)i(an)e(input)f(c)m(haracter)j(from)e(the)h(receiv)m(er)g
(and)e(re-transmit)h(it)g(to)i(ec)m(ho)75 4234 y(it.)216
4347 y(The)i(pro)s(cessor)g(accesses)i(the)f(terminal)e(using)g(four)h
(memory-mapp)s(ed)f(device)h(registers,)i(as)f(sho)m(wn)75
4460 y(in)26 b(Figure)h(7.)40 b(\\Memory-mapp)s(ed")28
b(means)f(that)h(eac)m(h)h(register)e(app)s(ears)g(as)h(a)g(sp)s(ecial)
e(memory)h(lo)s(cation.)75 4573 y(The)35 b(Receiv)m(er)h(Con)m(trol)f
(Register)g(is)g(at)h(lo)s(cation)f(0x\013\0130000;)40
b(only)35 b(t)m(w)m(o)h(of)g(its)f(bits)f(are)i(actually)e(used.)75
4686 y(Bit)29 b(0)h(is)e(called)h(\\ready":)41 b(if)28
b(it)h(is)f(one)h(it)g(means)g(that)h(a)g(c)m(haracter)h(has)e(arriv)m
(ed)f(from)h(the)h(k)m(eyb)s(oard)f(but)75 4799 y(has)j(not)h(y)m(et)h
(b)s(een)e(read)h(from)f(the)h(receiv)m(er)g(data)g(register.)48
b(The)32 b(ready)g(bit)g(is)g(read-only:)45 b(attempts)33
b(to)75 4912 y(write)i(it)g(are)i(ignored.)56 b(The)35
b(ready)h(bit)f(c)m(hanges)i(automatically)e(from)h(zero)h(to)f(one)g
(when)f(a)h(c)m(haracter)75 5025 y(is)31 b(t)m(yp)s(ed)h(at)i(the)e(k)m
(eyb)s(oard,)h(and)f(it)g(c)m(hanges)h(automatically)f(from)g(one)h(to)
g(zero)g(when)e(the)i(c)m(haracter)h(is)75 5137 y(read)c(from)g(the)h
(receiv)m(er)g(data)g(register.)216 5250 y(Bit)j(one)g(of)g(the)h
(Receiv)m(er)f(Con)m(trol)g(Register)g(is)f(\\in)m(terrupt)g(enable".)
52 b(This)32 b(bit)h(ma)m(y)h(b)s(e)g(b)s(oth)f(read)75
5363 y(and)i(written)f(b)m(y)i(the)f(pro)s(cessor.)56
b(The)35 b(in)m(terrupt)f(enable)h(is)f(initially)e(zero.)57
b(If)35 b(it)g(is)f(set)i(to)h(one)e(b)m(y)h(the)1920
5656 y(23)p eop
%%Page: 24 24
24 23 bop 909 1287 a
 16671720 18945146 6841303 17366384 25918013 38877020 startTexFig
 909 1287 a
%%BeginDocument: io_reg.id

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.77233 0 0 0.77233 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 138 217 ] concat
%I
102 503 350 527 Rect
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 138 217 ] concat
%I
302 527 302 503 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 138 217 ] concat
%I
326 527 326 503 Line
%I 1
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 1 0 0 1 138 217 ] concat
%I
102 503 302 527 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 448 761 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 472 761 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 416 697 ] concat
%I
[
(Interrupt)
(Enable)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 480 697 ] concat
%I
[
(Ready)
] Text
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 138 217 ] concat
%I
294 487 310 503 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 138 217 ] concat
%I
350 487 334 503 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 136 740 ] concat
%I
[
(Receiver Control)
(\(0xffff0000\))
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 138 -15 ] concat
%I
102 503 350 527 Rect
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 138 -15 ] concat
%I
302 527 302 503 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 138 -15 ] concat
%I
326 527 326 503 Line
%I 1
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 1 0 0 1 138 -15 ] concat
%I
102 503 302 527 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 448 529 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 472 529 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 416 465 ] concat
%I
[
(Interrupt)
(Enable)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 480 465 ] concat
%I
[
(Ready)
] Text
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 138 -15 ] concat
%I
294 487 310 503 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 138 -15 ] concat
%I
350 487 334 503 Line
%I 1
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 136 508 ] concat
%I
[
(Transmitter Control)
(\(0xffff0008\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 136 636 ] concat
%I
[
(Receiver Data)
(\(0xffff0004\))
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 138 113 ] concat
%I
102 503 350 527 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 1 0 0 1 130 217 ] concat
%I
110 399 286 423 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 449.5 657 ] concat
%I
[
(8)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 417 601 ] concat
%I
[
(Received Byte)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 136 388 ] concat
%I
[
(Transmitter Data)
(\(0xffff000c\))
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -8 0 ] concat

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 146 -135 ] concat
%I
102 503 350 527 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 1 0 0 1 138 -31 ] concat
%I
110 399 286 423 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 457.5 409 ] concat
%I
[
(8)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 425 353 ] concat
%I
[
(Transmitted Byte)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 322 761 ] concat
%I
[
(Unused)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 322 657 ] concat
%I
[
(Unused)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 322 529 ] concat
%I
[
(Unused)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-normal--10-*-75-*
Helvetica-Bold 10 SetF
%I t
[ 1 0 0 1 322 409 ] concat
%I
[
(Unused)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 75 3883 a Ft(Figure)29 b(7:)40 b(The)29 b(terminal)f(is)g(con)m
(trolled)h(b)m(y)g(four)g(device)g(registers,)h(eac)m(h)g(of)g(whic)m
(h)e(app)s(ears)g(as)i(a)f(sp)s(ecial)75 3996 y(memory)35
b(lo)s(cation)g(at)g(the)h(giv)m(en)f(address.)54 b(Only)33
b(a)i(few)g(bits)f(of)h(the)h(registers)e(are)i(actually)e(used:)50
b(the)75 4109 y(others)30 b(alw)m(a)m(ys)h(read)g(as)f(zero)s(es)h(and)
f(are)h(ignored)e(on)i(writes.)1920 5656 y(24)p eop
%%Page: 25 25
25 24 bop 75 99 a Ft(pro)s(cessor,)29 b(an)f(in)m(terrupt)f(is)h
(requested)h(b)m(y)f(the)h(terminal)e(on)i(lev)m(el)f(zero)h(whenev)m
(er)g(the)g(ready)f(bit)g(is)f(one.)75 211 y(F)-8 b(or)38
b(the)f(in)m(terrupt)e(actually)i(to)h(b)s(e)e(receiv)m(ed)h(b)m(y)g
(the)g(pro)s(cessor,)i(in)m(terrupts)c(m)m(ust)i(b)s(e)f(enabled)g(in)g
(the)75 324 y(status)31 b(register)f(of)g(the)h(system)g(copro)s
(cessor)f(\(see)i(Section)e(2\).)216 437 y(Other)h(bits)f(of)i(the)f
(Receiv)m(er)h(Con)m(trol)f(Register)h(are)f(un)m(used:)42
b(they)31 b(alw)m(a)m(ys)h(read)f(as)h(zero)s(es)g(and)f(are)75
550 y(ignored)e(in)h(writes.)216 663 y(The)37 b(second)h(terminal)e
(device)i(register)f(is)g(the)h(Receiv)m(er)g(Data)i(Register)e(\(at)g
(address)f(0x\013\0130004\).)75 776 y(The)32 b(lo)m(w-order)g(eigh)m(t)
h(bits)f(of)h(this)e(register)h(con)m(tain)h(the)g(last)g(c)m(haracter)
h(t)m(yp)s(ed)e(on)h(the)f(k)m(eyb)s(oard,)i(and)75 889
y(all)c(the)h(other)h(bits)e(con)m(tain)h(zero)s(es.)44
b(This)29 b(register)i(is)f(read-only)g(and)h(only)f(c)m(hanges)i(v)-5
b(alue)31 b(when)f(a)h(new)75 1002 y(c)m(haracter)e(is)e(t)m(yp)s(ed)h
(on)f(the)h(k)m(eyb)s(oard.)40 b(Reading)27 b(the)h(Receiv)m(er)h(Data)
g(Register)f(causes)h(the)f(ready)f(bit)g(in)75 1115
y(the)k(Receiv)m(er)g(Con)m(trol)f(Register)g(to)h(b)s(e)f(reset)h(to)g
(zero.)216 1228 y(The)23 b(third)e(terminal)g(device)i(register)f(is)g
(the)h(T)-8 b(ransmitter)22 b(Con)m(trol)h(Register)g(\(at)h(address)e
(0x\013\0130008\).)75 1341 y(Only)e(the)h(lo)m(w-order)g(t)m(w)m(o)h
(bits)e(of)h(this)f(register)h(are)h(used,)g(and)f(they)g(b)s(eha)m(v)m
(e)h(m)m(uc)m(h)f(lik)m(e)g(the)g(corresp)s(onding)75
1453 y(bits)35 b(of)i(the)g(Receiv)m(er)g(Con)m(trol)g(Register.)59
b(Bit)36 b(0)h(is)f(called)g(\\ready")h(and)f(is)g(read-only)-8
b(.)59 b(If)36 b(it)g(is)g(one)g(it)75 1566 y(means)c(the)g
(transmitter)g(is)f(ready)h(to)h(accept)h(a)e(new)g(c)m(haracter)i(for)
e(output.)45 b(If)32 b(it)g(is)f(zero)i(it)f(means)g(the)75
1679 y(transmitter)40 b(is)f(still)f(busy)g(outputting)i(the)g
(previous)f(c)m(haracter)i(giv)m(en)f(to)h(it.)69 b(Bit)40
b(one)h(is)e(\\in)m(terrupt)75 1792 y(enable";)d(it)e(is)f(readable)g
(and)h(writable.)50 b(If)34 b(it)g(is)f(set)h(to)h(one,)h(then)e(an)g
(in)m(terrupt)e(will)g(b)s(e)h(requested)h(on)75 1905
y(lev)m(el)c(one)h(whenev)m(er)f(the)h(ready)f(bit)f(is)h(one.)216
2018 y(The)c(\014nal)g(device)g(register)h(is)f(the)h(T)-8
b(ransmitter)26 b(Data)i(Register)f(\(at)h(address)e(0x\013\013000c\).)
42 b(When)27 b(it)f(is)75 2131 y(written,)f(the)g(lo)m(w-order)f(eigh)m
(t)h(bits)e(are)i(tak)m(en)g(as)g(an)g(ASCI)s(I)d(c)m(haracter)27
b(to)e(output)f(to)h(the)g(displa)m(y)-8 b(.)37 b(When)75
2244 y(the)28 b(T)-8 b(ransmitter)26 b(Data)k(Register)d(is)g(written,)
g(the)h(ready)f(bit)g(in)f(the)i(T)-8 b(ransmitter)27
b(Con)m(trol)g(Register)h(will)75 2357 y(b)s(e)h(reset)i(to)g(zero.)41
b(The)30 b(bit)f(will)f(sta)m(y)j(zero)g(un)m(til)d(enough)i(time)g
(has)g(elapsed)f(to)i(transmit)e(the)h(c)m(haracter)75
2470 y(to)c(the)g(terminal;)g(then)f(the)g(ready)h(bit)e(will)f(b)s(e)i
(set)h(bac)m(k)g(to)g(one)g(again.)39 b(The)25 b(T)-8
b(ransmitter)25 b(Data)i(Register)75 2583 y(should)36
b(only)h(b)s(e)g(written)f(when)h(the)h(ready)g(bit)e(of)i(the)g(T)-8
b(ransmitter)37 b(Con)m(trol)g(Register)h(is)f(one;)42
b(if)37 b(the)75 2695 y(transmitter)k(isn't)g(ready)h(then)f(writes)g
(to)i(the)f(T)-8 b(ransmitter)41 b(Data)i(Register)f(are)g(ignored)f
(\(the)i(write)75 2808 y(app)s(ears)30 b(to)h(succeed)g(but)e(the)i(c)m
(haracter)h(will)27 b(not)k(b)s(e)f(output\).)216 2921
y(In)25 b(real)g(computers)h(it)f(tak)m(es)i(time)e(to)i(send)e(c)m
(haracters)i(o)m(v)m(er)g(the)e(serial)g(lines)f(that)i(connect)h
(terminals)75 3034 y(to)g(computers.)39 b(These)26 b(time)g(lags)g(are)
h(sim)m(ulated)e(b)m(y)h(SPIM.)g(F)-8 b(or)27 b(example,)g(after)g(the)
g(transmitter)f(starts)75 3147 y(transmitting)19 b(a)i(c)m(haracter,)j
(the)d(transmitter's)f(ready)g(bit)g(will)e(b)s(ecome)i(zero)i(for)e(a)
h(while.)35 b(SPIM)20 b(measures)75 3260 y(this)30 b(time)h(in)f
(instructions)f(executed,)j(not)g(in)d(real)i(clo)s(c)m(k)h(time.)43
b(This)29 b(means)i(that)h(the)f(transmitter)g(will)75
3373 y(not)36 b(b)s(ecome)g(ready)g(again)g(un)m(til)e(the)i(pro)s
(cessor)f(has)h(executed)g(a)g(certain)g(n)m(um)m(b)s(er)f(of)h
(instructions.)54 b(If)75 3486 y(y)m(ou)29 b(stop)f(the)h(mac)m(hine)f
(and)g(lo)s(ok)g(at)h(the)g(ready)f(bit)f(using)g(SPIM,)h(it)g(will)e
(not)j(c)m(hange.)41 b(Ho)m(w)m(ev)m(er,)31 b(if)d(y)m(ou)75
3599 y(let)i(the)h(mac)m(hine)f(run)f(then)h(the)g(bit)g(will)e(ev)m
(en)m(tually)i(c)m(hange)h(bac)m(k)h(to)f(one.)1920 5656
y(25)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
